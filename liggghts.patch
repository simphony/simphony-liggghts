diff --git a/python/install.py b/python/install.py
index 6128310..ffe18a6 100755
--- a/python/install.py
+++ b/python/install.py
@@ -1,11 +1,11 @@
 #!/usr/bin/env python
 
-# copy LAMMPS src/liblammps.so and lammps.py to system dirs
+# copy LIGGGHTS src/libliggghts.so and liggghts.py to system dirs
 
 instructions = """
 Syntax: python install.py [-h] [libdir] [pydir]
-        libdir = target dir for src/liblammps.so, default = /usr/local/lib
-        pydir = target dir for lammps.py, default = Python site-packages dir
+        libdir = target dir for src/libliggghts.so, default = /usr/local/lib
+        pydir = target dir for liggghts.py, default = Python site-packages dir
 """
 
 import sys,os,commands
@@ -34,34 +34,34 @@ else:
   if libdir not in libpaths:
     print "WARNING: libdir %s not in LD_LIBRARY_PATH" % libdir
 
-str = "cp ../src/liblammps.so %s" % libdir
+str = "cp ../src/libliggghts.so %s" % libdir
 print str
 outstr = commands.getoutput(str)
 if len(outstr.strip()): print outstr
 
-# copy lammps.py to pydir if it exists
+# copy liggghts.py to pydir if it exists
 # if pydir not specified, install in site-packages via distutils setup()
 
 if pydir:
   if not os.path.isdir(pydir):
     print "ERROR: pydir %s does not exist" % pydir
     sys.exit()
-  str = "cp ../python/lammps.py %s" % pydir
+  str = "cp ../python/liggghts.py %s" % pydir
   print str
   outstr = commands.getoutput(str)
   if len(outstr.strip()): print outstr
   sys.exit()
   
-print "installing lammps.py in Python site-packages dir"
+print "installing liggghts.py in Python site-packages dir"
 
 os.chdir('../python')                # in case invoked via make in src dir
 
 from distutils.core import setup
 sys.argv = ["setup.py","install"]    # as if had run "python setup.py install"
-setup(name = "lammps",
-      version = "15Aug12",
+setup(name = "liggghts",
+      version = "30Aug16",
       author = "Steve Plimpton",
       author_email = "sjplimp@sandia.gov",
-      url = "http://lammps.sandia.gov",
-      description = "LAMMPS molecular dynamics library",
-      py_modules = ["lammps"])
+      url = "https://github.com/CFDEMproject/LIGGGHTS-PUBLIC",
+      description = "LIGGGHTS molecular dynamics library",
+      py_modules = ["liggghts"])
diff --git a/python/lammps.py b/python/lammps.py
index 0f6e9dc..e1f0fdd 100755
--- a/python/lammps.py
+++ b/python/lammps.py
@@ -16,19 +16,19 @@
 import sys,traceback,types
 from ctypes import *
 
-class lammps:
+class liggghts:
   def __init__(self,name="",cmdargs=None):
 
     # load liblammps.so by default
     # if name = "g++", load liblammps_g++.so
     
     try:
-      if not name: self.lib = CDLL("liblammps.so",RTLD_GLOBAL)
-      else: self.lib = CDLL("liblammps_%s.so" % name,RTLD_GLOBAL)
+      if not name: self.lib = CDLL("libliggghts.so",RTLD_GLOBAL)
+      else: self.lib = CDLL("libliggghts_%s.so" % name,RTLD_GLOBAL)
     except:
       type,value,tb = sys.exc_info()
       traceback.print_exception(type,value,tb)
-      raise OSError,"Could not load LAMMPS dynamic library"
+      raise OSError,"Could not load LIGGGHTS dynamic library"
 
     # create an instance of LAMMPS
     # don't know how to pass an MPI communicator from PyPar
@@ -36,7 +36,7 @@ class lammps:
     # cargs = array of C strings from args
     
     if cmdargs:
-      cmdargs.insert(0,"lammps.py")
+      cmdargs.insert(0,"liggghts.py")
       narg = len(cmdargs)
       cargs = (c_char_p*narg)(*cmdargs)
       self.lmp = c_void_p()
diff --git a/src/ASPHERE/compute_erotate_asphere.cpp b/src/ASPHERE/compute_erotate_asphere.cpp
index 8b1f523..a524572 100644
--- a/src/ASPHERE/compute_erotate_asphere.cpp
+++ b/src/ASPHERE/compute_erotate_asphere.cpp
@@ -55,7 +55,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/ASPHERE/compute_erotate_asphere.h b/src/ASPHERE/compute_erotate_asphere.h
index 9716261..b80b180 100644
--- a/src/ASPHERE/compute_erotate_asphere.h
+++ b/src/ASPHERE/compute_erotate_asphere.h
@@ -54,7 +54,7 @@ ComputeStyle(erotate/asphere,ComputeERotateAsphere)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeERotateAsphere : public Compute {
  public:
diff --git a/src/ASPHERE/fix_nve_asphere.cpp b/src/ASPHERE/fix_nve_asphere.cpp
index 426bbac..8ec1486 100644
--- a/src/ASPHERE/fix_nve_asphere.cpp
+++ b/src/ASPHERE/fix_nve_asphere.cpp
@@ -60,7 +60,7 @@
 #include "error.h"
 #include "fix_property_atom.h" //NP modified TUG
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 #define INERTIA_SPHEROID 0.2          // moment of inertia prefactor for ellipsoid
diff --git a/src/ASPHERE/fix_nve_asphere.h b/src/ASPHERE/fix_nve_asphere.h
index fd6831f..f5c53db 100644
--- a/src/ASPHERE/fix_nve_asphere.h
+++ b/src/ASPHERE/fix_nve_asphere.h
@@ -54,7 +54,7 @@ FixStyle(nve/asphere,FixNVEAsphere)
 
 #include "fix_nve.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixNVEAsphere : public FixNVE {
  public:
diff --git a/src/ASPHERE/fix_nve_asphere_noforce.cpp b/src/ASPHERE/fix_nve_asphere_noforce.cpp
index 46ea83e..d120394 100644
--- a/src/ASPHERE/fix_nve_asphere_noforce.cpp
+++ b/src/ASPHERE/fix_nve_asphere_noforce.cpp
@@ -55,7 +55,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/ASPHERE/fix_nve_asphere_noforce.h b/src/ASPHERE/fix_nve_asphere_noforce.h
index 94e3ca0..4b36949 100644
--- a/src/ASPHERE/fix_nve_asphere_noforce.h
+++ b/src/ASPHERE/fix_nve_asphere_noforce.h
@@ -54,7 +54,7 @@ FixStyle(nve/asphere/noforce,FixNVEAsphereNoforce)
 
 #include "fix_nve_noforce.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixNVEAsphereNoforce : public FixNVENoforce {
  public:
diff --git a/src/ASPHERE/fix_nve_line.cpp b/src/ASPHERE/fix_nve_line.cpp
index dfb9983..947fae8 100644
--- a/src/ASPHERE/fix_nve_line.cpp
+++ b/src/ASPHERE/fix_nve_line.cpp
@@ -53,7 +53,7 @@
 #include "math_const.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 using namespace MathConst;
 
diff --git a/src/ASPHERE/fix_nve_line.h b/src/ASPHERE/fix_nve_line.h
index da088fc..f8e5c68 100644
--- a/src/ASPHERE/fix_nve_line.h
+++ b/src/ASPHERE/fix_nve_line.h
@@ -54,7 +54,7 @@ FixStyle(nve/line,FixNVELine)
 
 #include "fix_nve.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixNVELine : public FixNVE {
  public:
diff --git a/src/ASPHERE/pair_line_lj.cpp b/src/ASPHERE/pair_line_lj.cpp
index 36d76b3..fd5562c 100644
--- a/src/ASPHERE/pair_line_lj.cpp
+++ b/src/ASPHERE/pair_line_lj.cpp
@@ -56,7 +56,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define DELTA 10000
 
diff --git a/src/ASPHERE/pair_line_lj.h b/src/ASPHERE/pair_line_lj.h
index 1689bbb..8ab46e8 100644
--- a/src/ASPHERE/pair_line_lj.h
+++ b/src/ASPHERE/pair_line_lj.h
@@ -54,7 +54,7 @@ PairStyle(line/lj,PairLineLJ)
 
 #include "pair.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class PairLineLJ : public Pair {
  public:
diff --git a/src/MOLECULE/atom_vec_bond.cpp b/src/MOLECULE/atom_vec_bond.cpp
index 4928ff2..1f9a841 100644
--- a/src/MOLECULE/atom_vec_bond.cpp
+++ b/src/MOLECULE/atom_vec_bond.cpp
@@ -53,7 +53,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define DELTA 10000
 
diff --git a/src/MOLECULE/atom_vec_bond.h b/src/MOLECULE/atom_vec_bond.h
index 0ac87b4..de1ac52 100644
--- a/src/MOLECULE/atom_vec_bond.h
+++ b/src/MOLECULE/atom_vec_bond.h
@@ -54,7 +54,7 @@ AtomStyle(bond,AtomVecBond)
 
 #include "atom_vec.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class AtomVecBond : public AtomVec {
  public:
diff --git a/src/MOLECULE/atom_vec_full.cpp b/src/MOLECULE/atom_vec_full.cpp
index ef0a529..1221bc5 100644
--- a/src/MOLECULE/atom_vec_full.cpp
+++ b/src/MOLECULE/atom_vec_full.cpp
@@ -53,7 +53,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define DELTA 10000
 
diff --git a/src/MOLECULE/atom_vec_full.h b/src/MOLECULE/atom_vec_full.h
index 33a5a61..dc3c2aa 100644
--- a/src/MOLECULE/atom_vec_full.h
+++ b/src/MOLECULE/atom_vec_full.h
@@ -54,7 +54,7 @@ AtomStyle(full,AtomVecFull)
 
 #include "atom_vec.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class AtomVecFull : public AtomVec {
  public:
diff --git a/src/MOLECULE/atom_vec_molecular.cpp b/src/MOLECULE/atom_vec_molecular.cpp
index 9122ac6..ee47d9c 100644
--- a/src/MOLECULE/atom_vec_molecular.cpp
+++ b/src/MOLECULE/atom_vec_molecular.cpp
@@ -53,7 +53,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define DELTA 10000
 
diff --git a/src/MOLECULE/atom_vec_molecular.h b/src/MOLECULE/atom_vec_molecular.h
index 9891296..95e7185 100644
--- a/src/MOLECULE/atom_vec_molecular.h
+++ b/src/MOLECULE/atom_vec_molecular.h
@@ -54,7 +54,7 @@ AtomStyle(molecular,AtomVecMolecular)
 
 #include "atom_vec.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class AtomVecMolecular : public AtomVec {
  public:
diff --git a/src/MOLECULE/bond_harmonic.cpp b/src/MOLECULE/bond_harmonic.cpp
index 2e7e004..f640304 100644
--- a/src/MOLECULE/bond_harmonic.cpp
+++ b/src/MOLECULE/bond_harmonic.cpp
@@ -54,7 +54,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/MOLECULE/bond_harmonic.h b/src/MOLECULE/bond_harmonic.h
index cec5f60..b65f1df 100644
--- a/src/MOLECULE/bond_harmonic.h
+++ b/src/MOLECULE/bond_harmonic.h
@@ -55,7 +55,7 @@ BondStyle(harmonic,BondHarmonic)
 #include "stdio.h"
 #include "bond.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class BondHarmonic : public Bond {
  public:
diff --git a/src/Makefile b/src/Makefile
index 1a9ef87..fc620b3 100755
--- a/src/Makefile
+++ b/src/Makefile
@@ -5,7 +5,7 @@ SHELL = /bin/bash
 
 # Definitions
 
-ROOT =	lmp
+ROOT =	lgt
 EXE =	$(ROOT)_$@
 SRC =	$(wildcard *.cpp)
 INC =	$(wildcard *.h)
diff --git a/src/Makefile.list b/src/Makefile.list
index 65bbebc..f983a64 100644
--- a/src/Makefile.list
+++ b/src/Makefile.list
@@ -4,7 +4,7 @@ SHELL = /bin/sh
 
 # Definitions
 
-ROOT =	lmp
+ROOT =	lgt
 EXE =	$(ROOT)_$@
 
 SRC =	angle.cpp angle_charmm.cpp angle_cosine.cpp angle_cosine_delta.cpp angle_cosine_squared.cpp angle_harmonic.cpp angle_hybrid.cpp angle_table.cpp atom.cpp atom_vec.cpp atom_vec_angle.cpp atom_vec_atomic.cpp atom_vec_bond.cpp atom_vec_charge.cpp atom_vec_full.cpp atom_vec_hybrid.cpp atom_vec_molecular.cpp bond.cpp bond_fene.cpp bond_fene_expand.cpp bond_harmonic.cpp bond_hybrid.cpp bond_morse.cpp bond_nonlinear.cpp bond_quartic.cpp bond_table.cpp change_box.cpp comm.cpp compute.cpp compute_angle_local.cpp compute_bond_local.cpp compute_centro_atom.cpp compute_cna_atom.cpp compute_com.cpp compute_com_molecule.cpp compute_coord_atom.cpp compute_dihedral_local.cpp compute_displace_atom.cpp compute_erotate_sphere.cpp compute_group_group.cpp compute_gyration.cpp compute_gyration_molecule.cpp compute_heat_flux.cpp compute_improper_local.cpp compute_ke.cpp compute_ke_atom.cpp compute_msd.cpp compute_msd_molecule.cpp compute_pair_local.cpp compute_pe.cpp compute_pe_atom.cpp compute_pressure.cpp compute_property_atom.cpp compute_property_local.cpp compute_property_molecule.cpp compute_rdf.cpp compute_reduce.cpp compute_reduce_region.cpp compute_stress_atom.cpp compute_temp.cpp compute_temp_com.cpp compute_temp_deform.cpp compute_temp_partial.cpp compute_temp_profile.cpp compute_temp_ramp.cpp compute_temp_region.cpp compute_temp_sphere.cpp create_atoms.cpp create_box.cpp delete_atoms.cpp delete_bonds.cpp dihedral.cpp dihedral_charmm.cpp dihedral_harmonic.cpp dihedral_helix.cpp dihedral_hybrid.cpp dihedral_multi_harmonic.cpp dihedral_opls.cpp displace_atoms.cpp displace_box.cpp domain.cpp dump.cpp dump_atom.cpp dump_cfg.cpp dump_custom.cpp dump_dcd.cpp dump_local.cpp dump_xyz.cpp error.cpp ewald.cpp fft3d.cpp fft3d_wrap.cpp finish.cpp fix.cpp fix_adapt.cpp fix_addforce.cpp fix_ave_atom.cpp fix_ave_correlate.cpp fix_ave_histo.cpp fix_ave_spatial.cpp fix_ave_time.cpp fix_aveforce.cpp fix_bond_break.cpp fix_bond_create.cpp fix_bond_swap.cpp fix_box_relax.cpp fix_deform.cpp fix_deposit.cpp fix_drag.cpp fix_dt_reset.cpp fix_efield.cpp fix_enforce2d.cpp fix_evaporate.cpp fix_gravity.cpp fix_heat.cpp fix_indent.cpp fix_langevin.cpp fix_lineforce.cpp fix_minimize.cpp fix_momentum.cpp fix_move.cpp fix_nh.cpp fix_nh_sphere.cpp fix_nph.cpp fix_nph_sphere.cpp fix_npt.cpp fix_npt_sphere.cpp fix_nve.cpp fix_nve_limit.cpp fix_nve_noforce.cpp fix_nve_sphere.cpp fix_nvt.cpp fix_nvt_sllod.cpp fix_nvt_sphere.cpp fix_orient_fcc.cpp fix_planeforce.cpp fix_press_berendsen.cpp fix_print.cpp fix_qeq_comb.cpp fix_recenter.cpp fix_respa.cpp fix_rigid.cpp fix_rigid_nve.cpp fix_rigid_nvt.cpp fix_setforce.cpp fix_shake.cpp fix_shear_history.cpp fix_spring.cpp fix_spring_rg.cpp fix_spring_self.cpp fix_store_force.cpp fix_store_state.cpp fix_temp_berendsen.cpp fix_temp_rescale.cpp fix_thermal_conductivity.cpp fix_tmd.cpp fix_ttm.cpp fix_viscosity.cpp fix_viscous.cpp fix_wall.cpp fix_wall_harmonic.cpp fix_wall_lj126.cpp fix_wall_lj93.cpp fix_wall_reflect.cpp fix_wall_region.cpp force.cpp group.cpp improper.cpp improper_cvff.cpp improper_harmonic.cpp improper_hybrid.cpp input.cpp integrate.cpp kspace.cpp lammps.cpp lattice.cpp library.cpp main.cpp memory.cpp min.cpp min_cg.cpp min_hftn.cpp min_linesearch.cpp min_sd.cpp minimize.cpp modify.cpp neigh_bond.cpp neigh_derive.cpp neigh_full.cpp neigh_gran.cpp neigh_half_bin.cpp neigh_half_multi.cpp neigh_half_nsq.cpp neigh_list.cpp neigh_request.cpp neigh_respa.cpp neigh_stencil.cpp neighbor.cpp output.cpp pack.cpp pair.cpp pair_airebo.cpp pair_born_coul_long.cpp pair_buck.cpp pair_buck_coul_cut.cpp pair_buck_coul_long.cpp pair_comb.cpp pair_coul_cut.cpp pair_coul_debye.cpp pair_coul_long.cpp pair_dpd.cpp pair_dpd_tstat.cpp pair_eam.cpp pair_eam_alloy.cpp pair_eam_fs.cpp pair_eim.cpp pair_hybrid.cpp pair_hybrid_overlay.cpp pair_lj96_cut.cpp pair_lj_charmm_coul_charmm.cpp pair_lj_charmm_coul_charmm_implicit.cpp pair_lj_charmm_coul_long.cpp pair_lj_cut.cpp pair_lj_cut_coul_cut.cpp pair_lj_cut_coul_debye.cpp pair_lj_cut_coul_long.cpp pair_lj_cut_coul_long_tip4p.cpp pair_lj_expand.cpp pair_lj_gromacs.cpp pair_lj_gromacs_coul_gromacs.cpp pair_lj_smooth.cpp pair_morse.cpp pair_soft.cpp pair_sw.cpp pair_table.cpp pair_tersoff.cpp pair_tersoff_zbl.cpp pair_yukawa.cpp pppm.cpp pppm_tip4p.cpp random_mars.cpp random_park.cpp read_data.cpp read_restart.cpp region.cpp region_block.cpp region_cone.cpp region_cylinder.cpp region_intersect.cpp region_plane.cpp region_prism.cpp region_sphere.cpp region_union.cpp remap.cpp remap_wrap.cpp replicate.cpp respa.cpp run.cpp set.cpp shell.cpp special.cpp temper.cpp thermo.cpp timer.cpp universe.cpp update.cpp variable.cpp velocity.cpp verlet.cpp write_restart.cpp 
diff --git a/src/Makefile.shlib b/src/Makefile.shlib
index a477026..4546811 100644
--- a/src/Makefile.shlib
+++ b/src/Makefile.shlib
@@ -4,7 +4,7 @@ SHELL = /bin/sh
 
 # Definitions
 
-ROOT =	lammps
+ROOT =	liggghts
 EXE =	lib$(ROOT)_$@.so
 
 SRC =	angle.cpp angle_charmm.cpp angle_class2.cpp angle_cosine.cpp angle_cosine_delta.cpp angle_cosine_periodic.cpp angle_cosine_squared.cpp angle_harmonic.cpp angle_hybrid.cpp angle_table.cpp atom.cpp atom_map.cpp atom_vec.cpp atom_vec_angle.cpp atom_vec_atomic.cpp atom_vec_body.cpp atom_vec_bond.cpp atom_vec_charge.cpp atom_vec_dipole.cpp atom_vec_ellipsoid.cpp atom_vec_full.cpp atom_vec_hybrid.cpp atom_vec_line.cpp atom_vec_molecular.cpp atom_vec_peri.cpp atom_vec_sphere.cpp atom_vec_tri.cpp balance.cpp body.cpp body_nparticle.cpp bond.cpp bond_class2.cpp bond_fene.cpp bond_fene_expand.cpp bond_harmonic.cpp bond_hybrid.cpp bond_morse.cpp bond_nonlinear.cpp bond_quartic.cpp bond_table.cpp change_box.cpp comm.cpp compute.cpp compute_angle_local.cpp compute_atom_molecule.cpp compute_body_local.cpp compute_bond_local.cpp compute_centro_atom.cpp compute_cluster_atom.cpp compute_cna_atom.cpp compute_com.cpp compute_com_molecule.cpp compute_contact_atom.cpp compute_coord_atom.cpp compute_damage_atom.cpp compute_dihedral_local.cpp compute_displace_atom.cpp compute_erotate_asphere.cpp compute_erotate_sphere.cpp compute_erotate_sphere_atom.cpp compute_event_displace.cpp compute_group_group.cpp compute_gyration.cpp compute_gyration_molecule.cpp compute_heat_flux.cpp compute_improper_local.cpp compute_inertia_molecule.cpp compute_ke.cpp compute_ke_atom.cpp compute_msd.cpp compute_msd_molecule.cpp compute_pair.cpp compute_pair_local.cpp compute_pe.cpp compute_pe_atom.cpp compute_pressure.cpp compute_property_atom.cpp compute_property_local.cpp compute_property_molecule.cpp compute_rdf.cpp compute_reduce.cpp compute_reduce_region.cpp compute_slice.cpp compute_stress_atom.cpp compute_temp.cpp compute_temp_asphere.cpp compute_temp_com.cpp compute_temp_deform.cpp compute_temp_partial.cpp compute_temp_profile.cpp compute_temp_ramp.cpp compute_temp_region.cpp compute_temp_sphere.cpp compute_ti.cpp create_atoms.cpp create_box.cpp delete_atoms.cpp delete_bonds.cpp dihedral.cpp dihedral_charmm.cpp dihedral_class2.cpp dihedral_harmonic.cpp dihedral_helix.cpp dihedral_hybrid.cpp dihedral_multi_harmonic.cpp dihedral_opls.cpp displace_atoms.cpp domain.cpp dump.cpp dump_atom.cpp dump_cfg.cpp dump_custom.cpp dump_dcd.cpp dump_image.cpp dump_local.cpp dump_xtc.cpp dump_xyz.cpp error.cpp finish.cpp fix.cpp fix_adapt.cpp fix_addforce.cpp fix_append_atoms.cpp fix_ave_atom.cpp fix_ave_correlate.cpp fix_ave_histo.cpp fix_ave_spatial.cpp fix_ave_time.cpp fix_aveforce.cpp fix_balance.cpp fix_bond_break.cpp fix_bond_create.cpp fix_bond_swap.cpp fix_box_relax.cpp fix_deform.cpp fix_deposit.cpp fix_drag.cpp fix_dt_reset.cpp fix_efield.cpp fix_enforce2d.cpp fix_evaporate.cpp fix_event.cpp fix_event_prd.cpp fix_event_tad.cpp fix_external.cpp fix_freeze.cpp fix_gcmc.cpp fix_gravity.cpp fix_heat.cpp fix_indent.cpp fix_langevin.cpp fix_lineforce.cpp fix_minimize.cpp fix_momentum.cpp fix_move.cpp fix_msst.cpp fix_neb.cpp fix_nh.cpp fix_nh_asphere.cpp fix_nh_sphere.cpp fix_nph.cpp fix_nph_asphere.cpp fix_nph_sphere.cpp fix_nphug.cpp fix_npt.cpp fix_npt_asphere.cpp fix_npt_sphere.cpp fix_nve.cpp fix_nve_asphere.cpp fix_nve_asphere_noforce.cpp fix_nve_body.cpp fix_nve_limit.cpp fix_nve_line.cpp fix_nve_noforce.cpp fix_nve_sphere.cpp fix_nve_tri.cpp fix_nvt.cpp fix_nvt_asphere.cpp fix_nvt_sllod.cpp fix_nvt_sphere.cpp fix_orient_fcc.cpp fix_peri_neigh.cpp fix_planeforce.cpp fix_pour.cpp fix_press_berendsen.cpp fix_print.cpp fix_qeq_comb.cpp fix_read_restart.cpp fix_recenter.cpp fix_respa.cpp fix_restrain.cpp fix_rigid.cpp fix_rigid_nh.cpp fix_rigid_nph.cpp fix_rigid_npt.cpp fix_rigid_nve.cpp fix_rigid_nvt.cpp fix_rigid_small.cpp fix_setforce.cpp fix_shake.cpp fix_shear_history.cpp fix_spring.cpp fix_spring_rg.cpp fix_spring_self.cpp fix_srd.cpp fix_store_force.cpp fix_store_state.cpp fix_temp_berendsen.cpp fix_temp_rescale.cpp fix_thermal_conductivity.cpp fix_tmd.cpp fix_ttm.cpp fix_viscosity.cpp fix_viscous.cpp fix_wall.cpp fix_wall_colloid.cpp fix_wall_gran.cpp fix_wall_harmonic.cpp fix_wall_lj126.cpp fix_wall_lj93.cpp fix_wall_piston.cpp fix_wall_reflect.cpp fix_wall_region.cpp fix_wall_srd.cpp force.cpp group.cpp image.cpp improper.cpp improper_class2.cpp improper_cvff.cpp improper_harmonic.cpp improper_hybrid.cpp improper_umbrella.cpp input.cpp integrate.cpp irregular.cpp kspace.cpp lammps.cpp lattice.cpp library.cpp  math_extra.cpp memory.cpp min.cpp min_cg.cpp min_fire.cpp min_hftn.cpp min_linesearch.cpp min_quickmin.cpp min_sd.cpp minimize.cpp modify.cpp neb.cpp neigh_bond.cpp neigh_derive.cpp neigh_full.cpp neigh_gran.cpp neigh_half_bin.cpp neigh_half_multi.cpp neigh_half_nsq.cpp neigh_list.cpp neigh_request.cpp neigh_respa.cpp neigh_stencil.cpp neighbor.cpp output.cpp pair.cpp pair_adp.cpp pair_airebo.cpp pair_beck.cpp pair_body.cpp pair_bop.cpp pair_born.cpp pair_born_coul_wolf.cpp pair_brownian.cpp pair_brownian_poly.cpp pair_buck.cpp pair_buck_coul_cut.cpp pair_colloid.cpp pair_comb.cpp pair_coul_cut.cpp pair_coul_debye.cpp pair_coul_dsf.cpp pair_coul_wolf.cpp pair_dipole_cut.cpp pair_dpd.cpp pair_dpd_tstat.cpp pair_dsmc.cpp pair_eam.cpp pair_eam_alloy.cpp pair_eam_alloy_opt.cpp pair_eam_fs.cpp pair_eam_fs_opt.cpp pair_eam_opt.cpp pair_eim.cpp pair_gauss.cpp pair_gayberne.cpp pair_gran_hertz_history.cpp pair_gran_hooke.cpp pair_gran_hooke_history.cpp pair_hbond_dreiding_lj.cpp pair_hbond_dreiding_morse.cpp pair_hybrid.cpp pair_hybrid_overlay.cpp pair_lcbop.cpp pair_line_lj.cpp pair_lj96_cut.cpp pair_lj_charmm_coul_charmm.cpp pair_lj_charmm_coul_charmm_implicit.cpp pair_lj_class2.cpp pair_lj_class2_coul_cut.cpp pair_lj_class2_coul_long.cpp pair_lj_cubic.cpp pair_lj_cut.cpp pair_lj_cut_coul_cut.cpp pair_lj_cut_coul_debye.cpp pair_lj_cut_coul_dsf.cpp pair_lj_cut_opt.cpp pair_lj_cut_tip4p_cut.cpp pair_lj_expand.cpp pair_lj_gromacs.cpp pair_lj_gromacs_coul_gromacs.cpp pair_lj_smooth.cpp pair_lj_smooth_linear.cpp pair_lubricate.cpp pair_lubricateU.cpp pair_lubricateU_poly.cpp pair_lubricate_poly.cpp pair_mie_cut.cpp pair_morse.cpp pair_morse_opt.cpp pair_peri_lps.cpp pair_peri_pmb.cpp pair_rebo.cpp pair_resquared.cpp pair_soft.cpp pair_sw.cpp pair_table.cpp pair_tersoff.cpp pair_tersoff_zbl.cpp pair_tri_lj.cpp pair_yukawa.cpp pair_yukawa_colloid.cpp prd.cpp procmap.cpp random_mars.cpp random_park.cpp read_data.cpp read_dump.cpp read_restart.cpp reader.cpp reader_native.cpp reader_xyz.cpp region.cpp region_block.cpp region_cone.cpp region_cylinder.cpp region_intersect.cpp region_plane.cpp region_prism.cpp region_sphere.cpp region_union.cpp replicate.cpp rerun.cpp respa.cpp run.cpp set.cpp special.cpp tad.cpp temper.cpp thermo.cpp timer.cpp universe.cpp update.cpp variable.cpp velocity.cpp verlet.cpp verlet_split.cpp write_restart.cpp xdr_compat.cpp 
@@ -37,7 +37,7 @@ clean:
 	@cd Obj_shlib_$@; \
 	$(MAKE) $(MFLAGS) "OBJ = $(OBJ)" \
           "INC = $(INC)" "EXE = ../$(EXE)" shlib
-	@rm -f liblammps.so
-	@ln -s $(EXE) liblammps.so
+	@rm -f liggghts.so
+	@ln -s $(EXE) liggghts.so
 	@if [ -d Obj_shlib_$@ ]; then cd Obj_shlib_$@; \
           rm -f $(SRC) $(INC) Makefile*; fi
diff --git a/src/PASCAL/fix_pascal_couple.cpp b/src/PASCAL/fix_pascal_couple.cpp
index b0aeb77..d81059b 100644
--- a/src/PASCAL/fix_pascal_couple.cpp
+++ b/src/PASCAL/fix_pascal_couple.cpp
@@ -44,7 +44,7 @@
 #include "fix_property_atom.h"
 #include "cfd_datacoupling_simple.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace PASCAL_NS;
 using namespace FixConst;
 
@@ -351,12 +351,12 @@ void FixParScaleCouple::end_of_step()
 }
 
 //////////////////////////////////////////////////////////////
-void* LAMMPS_NS::FixParScaleCouple::find_pull_property(const char *name, const char *type, int &len1, int &len2)
+void* LIGGGHTS_NS::FixParScaleCouple::find_pull_property(const char *name, const char *type, int &len1, int &len2)
 {
     return dc_->find_pull_property(name,type,len1,len2);
 }
 
-void* LAMMPS_NS::FixParScaleCouple::find_push_property(const char *name, const char *type, int &len1, int &len2)
+void* LIGGGHTS_NS::FixParScaleCouple::find_push_property(const char *name, const char *type, int &len1, int &len2)
 {
     return dc_->find_push_property(name,type,len1,len2);
 }
diff --git a/src/PASCAL/fix_pascal_couple.h b/src/PASCAL/fix_pascal_couple.h
index 630699d..5f91ede 100644
--- a/src/PASCAL/fix_pascal_couple.h
+++ b/src/PASCAL/fix_pascal_couple.h
@@ -38,7 +38,7 @@ FixStyle(couple/pascal,FixParScaleCouple)
 
 namespace PASCAL_NS { class ParScale; }
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixParScaleCouple : public Fix  {
  public:
diff --git a/src/POEMS/fix_poems.cpp b/src/POEMS/fix_poems.cpp
index 7e0ff8e..36e792e 100644
--- a/src/POEMS/fix_poems.cpp
+++ b/src/POEMS/fix_poems.cpp
@@ -74,7 +74,7 @@
 
 #include "fix_property_atom.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 #define MAXSEGMENT 2         // currently 2 since only linear chains allowed
diff --git a/src/POEMS/fix_poems.h b/src/POEMS/fix_poems.h
index ef90188..db1cd55 100644
--- a/src/POEMS/fix_poems.h
+++ b/src/POEMS/fix_poems.h
@@ -57,7 +57,7 @@ FixStyle(poems,FixPOEMS)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixPOEMS : public Fix  {
  public:
diff --git a/src/RIGID/fix_rigid.cpp b/src/RIGID/fix_rigid.cpp
index f523b08..a3d6eda 100644
--- a/src/RIGID/fix_rigid.cpp
+++ b/src/RIGID/fix_rigid.cpp
@@ -71,7 +71,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 using namespace MathConst;
 
diff --git a/src/RIGID/fix_rigid.h b/src/RIGID/fix_rigid.h
index bbca968..74528f1 100644
--- a/src/RIGID/fix_rigid.h
+++ b/src/RIGID/fix_rigid.h
@@ -59,7 +59,7 @@ FixStyle(rigid,FixRigid)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixRigid : public Fix {
  friend class FixTemplateMultisphere;
diff --git a/src/VORONOI/compute_voronoi_atom.cpp b/src/VORONOI/compute_voronoi_atom.cpp
index c10fa4b..25e24f8 100644
--- a/src/VORONOI/compute_voronoi_atom.cpp
+++ b/src/VORONOI/compute_voronoi_atom.cpp
@@ -64,7 +64,7 @@
 
 #include <vector>
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace voro;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/VORONOI/compute_voronoi_atom.h b/src/VORONOI/compute_voronoi_atom.h
index 0f59bad..bc299fc 100644
--- a/src/VORONOI/compute_voronoi_atom.h
+++ b/src/VORONOI/compute_voronoi_atom.h
@@ -55,7 +55,7 @@ ComputeStyle(voronoi/atom,ComputeVoronoi)
 #include "compute.h"
 #include "voro++.hh"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeVoronoi : public Compute {
  public:
diff --git a/src/abstract_mesh.h b/src/abstract_mesh.h
index 65a193c..c3b293f 100644
--- a/src/abstract_mesh.h
+++ b/src/abstract_mesh.h
@@ -44,7 +44,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
   class AbstractMesh : protected Pointers
   {
@@ -150,5 +150,5 @@ namespace LAMMPS_NS
          virtual double*** nodePtr() = 0;
   };
 
-} /* LAMMPS_NS */
+} /* LIGGGHTS_NS */
 #endif
diff --git a/src/accelerator_cuda.h b/src/accelerator_cuda.h
index f477fde..5fd3edc 100644
--- a/src/accelerator_cuda.h
+++ b/src/accelerator_cuda.h
@@ -67,7 +67,7 @@
 #include "modify.h"
 #include "verlet.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Cuda {
  public:
diff --git a/src/accelerator_omp.h b/src/accelerator_omp.h
index 0a1e69a..e0f06e0 100644
--- a/src/accelerator_omp.h
+++ b/src/accelerator_omp.h
@@ -96,7 +96,7 @@
 #ifndef LMP_DOMAIN_OMP_H
 #define LMP_DOMAIN_OMP_H
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class DomainOMP : public Domain {
  public:
diff --git a/src/angle.cpp b/src/angle.cpp
index ec3eb3b..7167d3f 100644
--- a/src/angle.cpp
+++ b/src/angle.cpp
@@ -54,7 +54,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace MathConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/angle.h b/src/angle.h
index 31ff89c..261a564 100644
--- a/src/angle.h
+++ b/src/angle.h
@@ -49,7 +49,7 @@
 #include "stdio.h"
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Angle : protected Pointers {
   friend class ThrOMP;
diff --git a/src/angle_hybrid.cpp b/src/angle_hybrid.cpp
index 64d7221..524cc71 100644
--- a/src/angle_hybrid.cpp
+++ b/src/angle_hybrid.cpp
@@ -55,7 +55,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define EXTRA 1000
 
diff --git a/src/angle_hybrid.h b/src/angle_hybrid.h
index 4ee4b8f..f3bc787 100644
--- a/src/angle_hybrid.h
+++ b/src/angle_hybrid.h
@@ -55,7 +55,7 @@ AngleStyle(hybrid,AngleHybrid)
 #include "stdio.h"
 #include "angle.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class AngleHybrid : public Angle {
  public:
diff --git a/src/associative_pointer_array.h b/src/associative_pointer_array.h
index 5591ab7..86c8534 100644
--- a/src/associative_pointer_array.h
+++ b/src/associative_pointer_array.h
@@ -48,7 +48,7 @@
 #include <algorithm>
 #include "memory.h"
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
   #define ID_LEN 100
 
@@ -132,5 +132,5 @@ class AssociativePointerArray
   #include "associative_pointer_array_I.h"
   // *************************************
 
-} /* LAMMPS_NS */
+} /* LIGGGHTS_NS */
 #endif /* ASSOCIATIVEPOINTERARRAY_H_ */
diff --git a/src/atom.cpp b/src/atom.cpp
index 6970cfa..1a0e498 100644
--- a/src/atom.cpp
+++ b/src/atom.cpp
@@ -75,7 +75,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define DELTA 1
 #define DELTA_MEMSTR 1024
diff --git a/src/atom.h b/src/atom.h
index cccbb76..f9791fe 100644
--- a/src/atom.h
+++ b/src/atom.h
@@ -48,7 +48,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Atom : protected Pointers {
  public:
diff --git a/src/atom_map.cpp b/src/atom_map.cpp
index 0612777..4182823 100644
--- a/src/atom_map.cpp
+++ b/src/atom_map.cpp
@@ -49,7 +49,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define EXTRA 1000
 
diff --git a/src/atom_vec.cpp b/src/atom_vec.cpp
index 6d223bb..756c621 100644
--- a/src/atom_vec.cpp
+++ b/src/atom_vec.cpp
@@ -50,7 +50,7 @@
 #include "domain.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/atom_vec.h b/src/atom_vec.h
index fe4d098..dce4e40 100644
--- a/src/atom_vec.h
+++ b/src/atom_vec.h
@@ -49,7 +49,7 @@
 #include "stdio.h"
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class AtomVec : protected Pointers {
  public:
diff --git a/src/atom_vec_atomic.cpp b/src/atom_vec_atomic.cpp
index 8815519..cc7f4c1 100644
--- a/src/atom_vec_atomic.cpp
+++ b/src/atom_vec_atomic.cpp
@@ -53,7 +53,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define DELTA 10000
 
diff --git a/src/atom_vec_atomic.h b/src/atom_vec_atomic.h
index f372b0d..b48009b 100644
--- a/src/atom_vec_atomic.h
+++ b/src/atom_vec_atomic.h
@@ -54,7 +54,7 @@ AtomStyle(atomic,AtomVecAtomic)
 
 #include "atom_vec.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class AtomVecAtomic : public AtomVec {
  public:
diff --git a/src/atom_vec_charge.cpp b/src/atom_vec_charge.cpp
index df01698..81a040d 100644
--- a/src/atom_vec_charge.cpp
+++ b/src/atom_vec_charge.cpp
@@ -53,7 +53,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define DELTA 10000
 
diff --git a/src/atom_vec_charge.h b/src/atom_vec_charge.h
index 4c40f31..b0e5189 100644
--- a/src/atom_vec_charge.h
+++ b/src/atom_vec_charge.h
@@ -54,7 +54,7 @@ AtomStyle(charge,AtomVecCharge)
 
 #include "atom_vec.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class AtomVecCharge : public AtomVec {
  public:
diff --git a/src/atom_vec_ellipsoid.cpp b/src/atom_vec_ellipsoid.cpp
index f1730b5..63f9222 100644
--- a/src/atom_vec_ellipsoid.cpp
+++ b/src/atom_vec_ellipsoid.cpp
@@ -60,7 +60,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace MathConst;
 
 #define DELTA 10000
diff --git a/src/atom_vec_ellipsoid.h b/src/atom_vec_ellipsoid.h
index 5ee02d2..89f973c 100644
--- a/src/atom_vec_ellipsoid.h
+++ b/src/atom_vec_ellipsoid.h
@@ -54,7 +54,7 @@ AtomStyle(ellipsoid,AtomVecEllipsoid)
 
 #include "atom_vec.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class AtomVecEllipsoid : public AtomVec {
  public:
diff --git a/src/atom_vec_hybrid.cpp b/src/atom_vec_hybrid.cpp
index b88ac96..14ebafb 100644
--- a/src/atom_vec_hybrid.cpp
+++ b/src/atom_vec_hybrid.cpp
@@ -53,7 +53,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define DELTA 10000
 
diff --git a/src/atom_vec_hybrid.h b/src/atom_vec_hybrid.h
index edebc83..00ed609 100644
--- a/src/atom_vec_hybrid.h
+++ b/src/atom_vec_hybrid.h
@@ -55,7 +55,7 @@ AtomStyle(hybrid,AtomVecHybrid)
 #include "stdio.h"
 #include "atom_vec.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class AtomVecHybrid : public AtomVec {
  public:
diff --git a/src/atom_vec_line.cpp b/src/atom_vec_line.cpp
index c4d956b..1536bf8 100644
--- a/src/atom_vec_line.cpp
+++ b/src/atom_vec_line.cpp
@@ -56,7 +56,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define DELTA 10000
 #define DELTA_BONUS 10000
diff --git a/src/atom_vec_line.h b/src/atom_vec_line.h
index 41077ba..593a1eb 100644
--- a/src/atom_vec_line.h
+++ b/src/atom_vec_line.h
@@ -54,7 +54,7 @@ AtomStyle(line,AtomVecLine)
 
 #include "atom_vec.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class AtomVecLine : public AtomVec {
  public:
diff --git a/src/atom_vec_sph.cpp b/src/atom_vec_sph.cpp
index 9e739eb..3c09e0e 100644
--- a/src/atom_vec_sph.cpp
+++ b/src/atom_vec_sph.cpp
@@ -54,7 +54,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define DELTA 10000
 
diff --git a/src/atom_vec_sph.h b/src/atom_vec_sph.h
index d9f5656..fdaf2de 100644
--- a/src/atom_vec_sph.h
+++ b/src/atom_vec_sph.h
@@ -52,7 +52,7 @@ AtomStyle(sph,AtomVecSPH)
 
 #include "atom_vec.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class AtomVecSPH : public AtomVec {
  public:
diff --git a/src/atom_vec_sph_var.cpp b/src/atom_vec_sph_var.cpp
index 63fcb61..0323462 100644
--- a/src/atom_vec_sph_var.cpp
+++ b/src/atom_vec_sph_var.cpp
@@ -50,7 +50,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define DELTA 10000
 
diff --git a/src/atom_vec_sph_var.h b/src/atom_vec_sph_var.h
index c6faf5a..d35f482 100644
--- a/src/atom_vec_sph_var.h
+++ b/src/atom_vec_sph_var.h
@@ -48,7 +48,7 @@ AtomStyle(sph/var,AtomVecSPH2)
 
 #include "atom_vec.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class AtomVecSPH2 : public AtomVec {
  public:
diff --git a/src/atom_vec_sphere.cpp b/src/atom_vec_sphere.cpp
index c5e90ea..2311a3c 100644
--- a/src/atom_vec_sphere.cpp
+++ b/src/atom_vec_sphere.cpp
@@ -65,7 +65,7 @@
 #include "error.h"
 #include "domain_wedge.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace MathConst;
 
 #define DELTA 10000
diff --git a/src/atom_vec_sphere.h b/src/atom_vec_sphere.h
index 7bba40f..69560b6 100644
--- a/src/atom_vec_sphere.h
+++ b/src/atom_vec_sphere.h
@@ -62,7 +62,7 @@ AtomStyle(granular,AtomVecSphere)
 
 #include "atom_vec.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class AtomVecSphere : public AtomVec {
  public:
diff --git a/src/atom_vec_sphere_w.cpp b/src/atom_vec_sphere_w.cpp
index 757d64b..e7649b2 100644
--- a/src/atom_vec_sphere_w.cpp
+++ b/src/atom_vec_sphere_w.cpp
@@ -45,7 +45,7 @@
 #ifndef DOMAIN_WEDGE_REAL_H
 #define DOMAIN_WEDGE_REAL_H
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/bond.cpp b/src/bond.cpp
index 3b63e45..a26420e 100644
--- a/src/bond.cpp
+++ b/src/bond.cpp
@@ -53,7 +53,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* -----------------------------------------------------------------------
    set bond contribution to Vdwl energy to 0.0
diff --git a/src/bond.h b/src/bond.h
index 2b4c43a..922d2af 100644
--- a/src/bond.h
+++ b/src/bond.h
@@ -49,7 +49,7 @@
 #include "stdio.h"
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Bond : protected Pointers {
   friend class ThrOMP;
diff --git a/src/bond_hybrid.cpp b/src/bond_hybrid.cpp
index 504eca2..a06888f 100644
--- a/src/bond_hybrid.cpp
+++ b/src/bond_hybrid.cpp
@@ -55,7 +55,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define EXTRA 1000
 
diff --git a/src/bond_hybrid.h b/src/bond_hybrid.h
index 69dd14e..5263068 100644
--- a/src/bond_hybrid.h
+++ b/src/bond_hybrid.h
@@ -55,7 +55,7 @@ BondStyle(hybrid,BondHybrid)
 #include "stdio.h"
 #include "bond.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class BondHybrid : public Bond {
   friend class Force;
diff --git a/src/bounding_box.cpp b/src/bounding_box.cpp
index c5a44d9..9e8c647 100644
--- a/src/bounding_box.cpp
+++ b/src/bounding_box.cpp
@@ -45,7 +45,7 @@
 #include "bounding_box.h"
 #include <algorithm>
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
 
   BoundingBox::BoundingBox()
@@ -87,4 +87,4 @@ namespace LAMMPS_NS
     zHi = std::max(zHi, (zHi + length * vec[2]));
   }
 
-} /* namespace LAMMPS_NS */
+} /* namespace LIGGGHTS_NS */
diff --git a/src/bounding_box.h b/src/bounding_box.h
index ea814f7..5fe516e 100644
--- a/src/bounding_box.h
+++ b/src/bounding_box.h
@@ -47,7 +47,7 @@
 
 #include "mpi_liggghts.h"
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
 
 class BoundingBox
@@ -180,5 +180,5 @@ class BoundingBox
     bool dirty;
 };
 
-} /* LAMMPS_NS */
+} /* LIGGGHTS_NS */
 #endif /* BOUNDINGBOX_H_ */
diff --git a/src/cfd_datacoupling.cpp b/src/cfd_datacoupling.cpp
index 85f85be..ba0afd7 100644
--- a/src/cfd_datacoupling.cpp
+++ b/src/cfd_datacoupling.cpp
@@ -52,7 +52,7 @@
 #include "fix_cfd_coupling.h"
 #include "pair_gran.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define MAXLENGTH 30
 
diff --git a/src/cfd_datacoupling.h b/src/cfd_datacoupling.h
index ce07ad4..582b181 100644
--- a/src/cfd_datacoupling.h
+++ b/src/cfd_datacoupling.h
@@ -44,7 +44,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class CfdDatacoupling : protected Pointers {
  public:
diff --git a/src/cfd_datacoupling_file.cpp b/src/cfd_datacoupling_file.cpp
index f802abb..ff65d13 100644
--- a/src/cfd_datacoupling_file.cpp
+++ b/src/cfd_datacoupling_file.cpp
@@ -64,7 +64,7 @@
 #define sleep Sleep
 #endif
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace std;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/cfd_datacoupling_file.h b/src/cfd_datacoupling_file.h
index 1eff021..17ddea6 100644
--- a/src/cfd_datacoupling_file.h
+++ b/src/cfd_datacoupling_file.h
@@ -50,7 +50,7 @@
 
 #include "cfd_datacoupling.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class CfdDatacouplingFile : public CfdDatacoupling {
  public:
diff --git a/src/cfd_datacoupling_mpi.cpp b/src/cfd_datacoupling_mpi.cpp
index 7493589..0af67ea 100644
--- a/src/cfd_datacoupling_mpi.cpp
+++ b/src/cfd_datacoupling_mpi.cpp
@@ -54,7 +54,7 @@
 #include "fix_multisphere.h"
 #include "cfd_datacoupling_mpi.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define DELTA 10000
 
diff --git a/src/cfd_datacoupling_mpi.h b/src/cfd_datacoupling_mpi.h
index 330068f..ca04b43 100644
--- a/src/cfd_datacoupling_mpi.h
+++ b/src/cfd_datacoupling_mpi.h
@@ -54,7 +54,7 @@
 #include "properties.h"
 #include "mpi.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class CfdDatacouplingMPI : public CfdDatacoupling {
  public:
diff --git a/src/cfd_datacoupling_simple.h b/src/cfd_datacoupling_simple.h
index ff8293f..4dd611f 100644
--- a/src/cfd_datacoupling_simple.h
+++ b/src/cfd_datacoupling_simple.h
@@ -43,7 +43,7 @@
 
 #include "cfd_datacoupling.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class CfdDatacouplingSimple : public CfdDatacoupling {
  public:
diff --git a/src/cfd_regionmodel.h b/src/cfd_regionmodel.h
index 624ec38..5ec85c7 100644
--- a/src/cfd_regionmodel.h
+++ b/src/cfd_regionmodel.h
@@ -44,7 +44,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class CfdRegionmodel : protected Pointers {
  public:
diff --git a/src/cfd_regionmodel_none.cpp b/src/cfd_regionmodel_none.cpp
index 867608c..04236c5 100644
--- a/src/cfd_regionmodel_none.cpp
+++ b/src/cfd_regionmodel_none.cpp
@@ -53,7 +53,7 @@
 
 #define DELTA 10000
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/cfd_regionmodel_none.h b/src/cfd_regionmodel_none.h
index a23e9a3..f4ed4ac 100644
--- a/src/cfd_regionmodel_none.h
+++ b/src/cfd_regionmodel_none.h
@@ -44,7 +44,7 @@
 
 #include "cfd_regionmodel.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class CfdRegionmodelNone : public CfdRegionmodel {
  public:
diff --git a/src/change_box.cpp b/src/change_box.cpp
index c9e9b7d..f6a9303 100644
--- a/src/change_box.cpp
+++ b/src/change_box.cpp
@@ -61,7 +61,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 enum{XYZ=0,TILT,BOUNDARY,ORTHO,TRICLINIC,SET,REMAP};
 enum{FINAL=0,DELTA,SCALE};
diff --git a/src/change_box.h b/src/change_box.h
index 475a894..efeda62 100644
--- a/src/change_box.h
+++ b/src/change_box.h
@@ -54,7 +54,7 @@ CommandStyle(change_box,ChangeBox)
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ChangeBox : protected Pointers {
  public:
diff --git a/src/citeme.cpp b/src/citeme.cpp
index ce5916e..d32b426 100644
--- a/src/citeme.cpp
+++ b/src/citeme.cpp
@@ -48,7 +48,7 @@
 #include "universe.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 static const char cite_header[] =
   "This LAMMPS simulation made specific use of work described in the\n"
diff --git a/src/citeme.h b/src/citeme.h
index 62020b4..4cdad88 100644
--- a/src/citeme.h
+++ b/src/citeme.h
@@ -50,7 +50,7 @@
 #include "stdio.h"
 #include <set>
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class CiteMe : protected Pointers {
  public:
diff --git a/src/cohesion_model_sjkr.h b/src/cohesion_model_sjkr.h
index c8de4c8..8ce7dd8 100644
--- a/src/cohesion_model_sjkr.h
+++ b/src/cohesion_model_sjkr.h
@@ -54,7 +54,7 @@ COHESION_MODEL(COHESION_SJKR,sjkr,1)
 namespace LIGGGHTS {
 namespace ContactModels {
   using namespace std;
-  using namespace LAMMPS_NS;
+  using namespace LIGGGHTS_NS;
 
   template<>
   class CohesionModel<COHESION_SJKR> : protected Pointers {
diff --git a/src/cohesion_model_sjkr2.h b/src/cohesion_model_sjkr2.h
index 149bad2..2eb8ac8 100644
--- a/src/cohesion_model_sjkr2.h
+++ b/src/cohesion_model_sjkr2.h
@@ -54,7 +54,7 @@ COHESION_MODEL(COHESION_SJKR2,sjkr2,2)
 namespace LIGGGHTS {
 namespace ContactModels {
   using namespace std;
-  using namespace LAMMPS_NS;
+  using namespace LIGGGHTS_NS;
 
   template<>
   class CohesionModel<COHESION_SJKR2> : protected Pointers {
diff --git a/src/comm.cpp b/src/comm.cpp
index 775092e..a337b09 100644
--- a/src/comm.cpp
+++ b/src/comm.cpp
@@ -86,7 +86,7 @@
 #include "omp.h"
 #endif
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define BUFFACTOR 1.5
 #define BUFMIN 1000
diff --git a/src/comm.h b/src/comm.h
index 03c1c2e..8be610e 100644
--- a/src/comm.h
+++ b/src/comm.h
@@ -55,7 +55,7 @@
 #include "pointers.h"
 #include <vector>
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Comm : protected Pointers {
  friend class Info;
diff --git a/src/comm_I.h b/src/comm_I.h
index 7456806..6a5cd6a 100644
--- a/src/comm_I.h
+++ b/src/comm_I.h
@@ -45,7 +45,7 @@
 #include "atom.h"
 #include "domain_wedge.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ----------------------------------------------------------------------
    decide if use comm optimizations for granular systems
diff --git a/src/compute.cpp b/src/compute.cpp
index 0d75efe..f882f4d 100644
--- a/src/compute.cpp
+++ b/src/compute.cpp
@@ -58,7 +58,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define DELTA 4
 #define BIG 2000000000
diff --git a/src/compute.h b/src/compute.h
index 6895dc6..307541a 100644
--- a/src/compute.h
+++ b/src/compute.h
@@ -48,7 +48,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Compute : protected Pointers {
  public:
diff --git a/src/compute_atom_molecule.cpp b/src/compute_atom_molecule.cpp
index 4155a3f..68b3190 100644
--- a/src/compute_atom_molecule.cpp
+++ b/src/compute_atom_molecule.cpp
@@ -56,7 +56,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 enum{COMPUTE,FIX,VARIABLE};
 
diff --git a/src/compute_atom_molecule.h b/src/compute_atom_molecule.h
index 9b95682..421115d 100644
--- a/src/compute_atom_molecule.h
+++ b/src/compute_atom_molecule.h
@@ -54,7 +54,7 @@ ComputeStyle(atom/molecule,ComputeAtomMolecule)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeAtomMolecule : public Compute {
  public:
diff --git a/src/compute_bond_local.cpp b/src/compute_bond_local.cpp
index d79ee2d..a122f7b 100644
--- a/src/compute_bond_local.cpp
+++ b/src/compute_bond_local.cpp
@@ -55,7 +55,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define DELTA 10000
 
diff --git a/src/compute_bond_local.h b/src/compute_bond_local.h
index 12a2afe..5d53f83 100644
--- a/src/compute_bond_local.h
+++ b/src/compute_bond_local.h
@@ -54,7 +54,7 @@ ComputeStyle(bond/local,ComputeBondLocal)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeBondLocal : public Compute {
  public:
diff --git a/src/compute_centro_atom.cpp b/src/compute_centro_atom.cpp
index f719d24..76e01ec 100644
--- a/src/compute_centro_atom.cpp
+++ b/src/compute_centro_atom.cpp
@@ -62,7 +62,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_centro_atom.h b/src/compute_centro_atom.h
index 64471a9..34fcaf5 100644
--- a/src/compute_centro_atom.h
+++ b/src/compute_centro_atom.h
@@ -54,7 +54,7 @@ ComputeStyle(centro/atom,ComputeCentroAtom)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeCentroAtom : public Compute {
  public:
diff --git a/src/compute_cluster_atom.cpp b/src/compute_cluster_atom.cpp
index e0e6424..5be42a2 100644
--- a/src/compute_cluster_atom.cpp
+++ b/src/compute_cluster_atom.cpp
@@ -59,7 +59,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_cluster_atom.h b/src/compute_cluster_atom.h
index f24453b..45810f6 100644
--- a/src/compute_cluster_atom.h
+++ b/src/compute_cluster_atom.h
@@ -54,7 +54,7 @@ ComputeStyle(cluster/atom,ComputeClusterAtom)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeClusterAtom : public Compute {
  public:
diff --git a/src/compute_cna_atom.cpp b/src/compute_cna_atom.cpp
index aaf999b..1472e0d 100644
--- a/src/compute_cna_atom.cpp
+++ b/src/compute_cna_atom.cpp
@@ -63,7 +63,7 @@
 #include "error.h"
 #include "math.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define MAXNEAR 16
 #define MAXCOMMON 8
diff --git a/src/compute_cna_atom.h b/src/compute_cna_atom.h
index 37d8839..40ac9d7 100644
--- a/src/compute_cna_atom.h
+++ b/src/compute_cna_atom.h
@@ -54,7 +54,7 @@ ComputeStyle(cna/atom,ComputeCNAAtom)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeCNAAtom : public Compute {
  public:
diff --git a/src/compute_com.cpp b/src/compute_com.cpp
index 308c1f3..0ba24ff 100644
--- a/src/compute_com.cpp
+++ b/src/compute_com.cpp
@@ -48,7 +48,7 @@
 #include "group.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_com.h b/src/compute_com.h
index cac6f59..916223b 100644
--- a/src/compute_com.h
+++ b/src/compute_com.h
@@ -54,7 +54,7 @@ ComputeStyle(com,ComputeCOM)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeCOM : public Compute {
  public:
diff --git a/src/compute_com_molecule.cpp b/src/compute_com_molecule.cpp
index cf05c79..2fb791d 100644
--- a/src/compute_com_molecule.cpp
+++ b/src/compute_com_molecule.cpp
@@ -50,7 +50,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_com_molecule.h b/src/compute_com_molecule.h
index 6b65489..fa39fc2 100644
--- a/src/compute_com_molecule.h
+++ b/src/compute_com_molecule.h
@@ -54,7 +54,7 @@ ComputeStyle(com/molecule,ComputeCOMMolecule)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeCOMMolecule : public Compute {
  public:
diff --git a/src/compute_contact_atom.cpp b/src/compute_contact_atom.cpp
index 29acee2..4cdee10 100644
--- a/src/compute_contact_atom.cpp
+++ b/src/compute_contact_atom.cpp
@@ -65,7 +65,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_contact_atom.h b/src/compute_contact_atom.h
index f5d2c90..363a44f 100644
--- a/src/compute_contact_atom.h
+++ b/src/compute_contact_atom.h
@@ -60,7 +60,7 @@ ComputeStyle(contact/atom,ComputeContactAtom)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeContactAtom : public Compute {
  public:
diff --git a/src/compute_coord_atom.cpp b/src/compute_coord_atom.cpp
index 9497653..87d8452 100644
--- a/src/compute_coord_atom.cpp
+++ b/src/compute_coord_atom.cpp
@@ -65,7 +65,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_coord_atom.h b/src/compute_coord_atom.h
index f391ca0..6fa984b 100644
--- a/src/compute_coord_atom.h
+++ b/src/compute_coord_atom.h
@@ -60,7 +60,7 @@ ComputeStyle(coord/atom,ComputeCoordAtom)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeCoordAtom : public Compute {
  public:
diff --git a/src/compute_displace_atom.cpp b/src/compute_displace_atom.cpp
index 09033f0..cee1047 100644
--- a/src/compute_displace_atom.cpp
+++ b/src/compute_displace_atom.cpp
@@ -56,7 +56,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_displace_atom.h b/src/compute_displace_atom.h
index 33e00b8..439b749 100644
--- a/src/compute_displace_atom.h
+++ b/src/compute_displace_atom.h
@@ -54,7 +54,7 @@ ComputeStyle(displace/atom,ComputeDisplaceAtom)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeDisplaceAtom : public Compute {
  public:
diff --git a/src/compute_erotate_multisphere.cpp b/src/compute_erotate_multisphere.cpp
index a0f811e..ed27121 100644
--- a/src/compute_erotate_multisphere.cpp
+++ b/src/compute_erotate_multisphere.cpp
@@ -47,7 +47,7 @@
 #include "fix_multisphere.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_erotate_multisphere.h b/src/compute_erotate_multisphere.h
index ca430cb..18e99a4 100644
--- a/src/compute_erotate_multisphere.h
+++ b/src/compute_erotate_multisphere.h
@@ -49,7 +49,7 @@ ComputeStyle(erotate/multisphere,ComputeERotateMultisphere)
 
 #include "compute_ke_multisphere.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeERotateMultisphere : public ComputeKEMultisphere {
  public:
diff --git a/src/compute_erotate_sphere.cpp b/src/compute_erotate_sphere.cpp
index 6baf45a..819479b 100644
--- a/src/compute_erotate_sphere.cpp
+++ b/src/compute_erotate_sphere.cpp
@@ -61,7 +61,7 @@
 #include "group.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define INERTIA 0.4          // moment of inertia prefactor for sphere
 
diff --git a/src/compute_erotate_sphere.h b/src/compute_erotate_sphere.h
index d0e76f7..b6f4845 100644
--- a/src/compute_erotate_sphere.h
+++ b/src/compute_erotate_sphere.h
@@ -60,7 +60,7 @@ ComputeStyle(erotate/sphere,ComputeERotateSphere)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeERotateSphere : public Compute {
  public:
diff --git a/src/compute_erotate_sphere_atom.cpp b/src/compute_erotate_sphere_atom.cpp
index dded181..edafd0b 100644
--- a/src/compute_erotate_sphere_atom.cpp
+++ b/src/compute_erotate_sphere_atom.cpp
@@ -60,7 +60,7 @@
 #include "error.h"
 #include "fix_multisphere.h" 
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define INERTIA 0.4          // moment of inertia prefactor for sphere
 
diff --git a/src/compute_erotate_sphere_atom.h b/src/compute_erotate_sphere_atom.h
index 0353fb3..530b380 100644
--- a/src/compute_erotate_sphere_atom.h
+++ b/src/compute_erotate_sphere_atom.h
@@ -60,7 +60,7 @@ ComputeStyle(erotate/sphere/atom,ComputeErotateSphereAtom)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeErotateSphereAtom : public Compute {
  public:
diff --git a/src/compute_group_group.cpp b/src/compute_group_group.cpp
index 7601a33..ab544a1 100644
--- a/src/compute_group_group.cpp
+++ b/src/compute_group_group.cpp
@@ -66,7 +66,7 @@
 #include "domain.h"
 #include "math_const.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace MathConst;
 
 #define SMALL 0.00001
diff --git a/src/compute_group_group.h b/src/compute_group_group.h
index 9b4bca0..e06cf1f 100644
--- a/src/compute_group_group.h
+++ b/src/compute_group_group.h
@@ -54,7 +54,7 @@ ComputeStyle(group/group,ComputeGroupGroup)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeGroupGroup : public Compute {
  public:
diff --git a/src/compute_gyration.cpp b/src/compute_gyration.cpp
index 1609628..be2534e 100644
--- a/src/compute_gyration.cpp
+++ b/src/compute_gyration.cpp
@@ -51,7 +51,7 @@
 #include "domain.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_gyration.h b/src/compute_gyration.h
index f4e9f28..617aef6 100644
--- a/src/compute_gyration.h
+++ b/src/compute_gyration.h
@@ -54,7 +54,7 @@ ComputeStyle(gyration,ComputeGyration)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeGyration : public Compute {
  public:
diff --git a/src/compute_gyration_molecule.cpp b/src/compute_gyration_molecule.cpp
index 5773087..a2ca055 100644
--- a/src/compute_gyration_molecule.cpp
+++ b/src/compute_gyration_molecule.cpp
@@ -52,7 +52,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_gyration_molecule.h b/src/compute_gyration_molecule.h
index 886df70..34e659f 100644
--- a/src/compute_gyration_molecule.h
+++ b/src/compute_gyration_molecule.h
@@ -54,7 +54,7 @@ ComputeStyle(gyration/molecule,ComputeGyrationMolecule)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeGyrationMolecule : public Compute {
  public:
diff --git a/src/compute_inertia_molecule.cpp b/src/compute_inertia_molecule.cpp
index f44c9ec..80684b2 100644
--- a/src/compute_inertia_molecule.cpp
+++ b/src/compute_inertia_molecule.cpp
@@ -50,7 +50,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_inertia_molecule.h b/src/compute_inertia_molecule.h
index 5de2c94..fd2be6a 100644
--- a/src/compute_inertia_molecule.h
+++ b/src/compute_inertia_molecule.h
@@ -54,7 +54,7 @@ ComputeStyle(inertia/molecule,ComputeInertiaMolecule)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeInertiaMolecule : public Compute {
  public:
diff --git a/src/compute_ke.cpp b/src/compute_ke.cpp
index 8444887..fca8dd0 100644
--- a/src/compute_ke.cpp
+++ b/src/compute_ke.cpp
@@ -54,7 +54,7 @@
 #include "modify.h" 
 #include "fix_multisphere.h" 
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_ke.h b/src/compute_ke.h
index ae88dc3..0a86563 100644
--- a/src/compute_ke.h
+++ b/src/compute_ke.h
@@ -54,7 +54,7 @@ ComputeStyle(ke,ComputeKE)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeKE : public Compute {
  public:
diff --git a/src/compute_ke_atom.cpp b/src/compute_ke_atom.cpp
index a0cedb6..e56fd55 100644
--- a/src/compute_ke_atom.cpp
+++ b/src/compute_ke_atom.cpp
@@ -54,7 +54,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_ke_atom.h b/src/compute_ke_atom.h
index 7063d1c..d848c38 100644
--- a/src/compute_ke_atom.h
+++ b/src/compute_ke_atom.h
@@ -54,7 +54,7 @@ ComputeStyle(ke/atom,ComputeKEAtom)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeKEAtom : public Compute {
  public:
diff --git a/src/compute_ke_multisphere.cpp b/src/compute_ke_multisphere.cpp
index f465c0c..6cf491b 100644
--- a/src/compute_ke_multisphere.cpp
+++ b/src/compute_ke_multisphere.cpp
@@ -47,7 +47,7 @@
 #include "fix_multisphere.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_ke_multisphere.h b/src/compute_ke_multisphere.h
index 499d070..f6a7b54 100644
--- a/src/compute_ke_multisphere.h
+++ b/src/compute_ke_multisphere.h
@@ -49,7 +49,7 @@ ComputeStyle(ke/multisphere,ComputeKEMultisphere)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeKEMultisphere : public Compute {
  public:
diff --git a/src/compute_msd.cpp b/src/compute_msd.cpp
index 0f0e9dc..f46890d 100644
--- a/src/compute_msd.cpp
+++ b/src/compute_msd.cpp
@@ -53,7 +53,7 @@
 #include "fix_store.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_msd.h b/src/compute_msd.h
index 477abd3..9dd5647 100644
--- a/src/compute_msd.h
+++ b/src/compute_msd.h
@@ -54,7 +54,7 @@ ComputeStyle(msd,ComputeMSD)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeMSD : public Compute {
  public:
diff --git a/src/compute_msd_molecule.cpp b/src/compute_msd_molecule.cpp
index ad81f4a..7e91126 100644
--- a/src/compute_msd_molecule.cpp
+++ b/src/compute_msd_molecule.cpp
@@ -50,7 +50,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_msd_molecule.h b/src/compute_msd_molecule.h
index 940301f..586c174 100644
--- a/src/compute_msd_molecule.h
+++ b/src/compute_msd_molecule.h
@@ -54,7 +54,7 @@ ComputeStyle(msd/molecule,ComputeMSDMolecule)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeMSDMolecule : public Compute {
  public:
diff --git a/src/compute_nparticles_tracer_region.cpp b/src/compute_nparticles_tracer_region.cpp
index 8692ffb..823de3d 100644
--- a/src/compute_nparticles_tracer_region.cpp
+++ b/src/compute_nparticles_tracer_region.cpp
@@ -53,7 +53,7 @@
 #include "fix_property_atom_tracer.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_nparticles_tracer_region.h b/src/compute_nparticles_tracer_region.h
index 93f3d69..0d35ea7 100644
--- a/src/compute_nparticles_tracer_region.h
+++ b/src/compute_nparticles_tracer_region.h
@@ -50,7 +50,7 @@ ComputeStyle(nparticles/tracer/region,ComputeNparticlesTracerRegion)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeNparticlesTracerRegion : public Compute {
 
diff --git a/src/compute_pair_gran_local.cpp b/src/compute_pair_gran_local.cpp
index 1da8190..623b188 100644
--- a/src/compute_pair_gran_local.cpp
+++ b/src/compute_pair_gran_local.cpp
@@ -60,7 +60,7 @@
 #include "fix_wall_gran.h"
 #include "vector_liggghts.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define DELTA 10000
 
diff --git a/src/compute_pair_gran_local.h b/src/compute_pair_gran_local.h
index 4faf795..6d51b03 100644
--- a/src/compute_pair_gran_local.h
+++ b/src/compute_pair_gran_local.h
@@ -51,7 +51,7 @@ ComputeStyle(wall/gran/local,ComputePairGranLocal)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputePairGranLocal : public Compute {
 
diff --git a/src/compute_pe.cpp b/src/compute_pe.cpp
index 753b87f..d6f13d7 100644
--- a/src/compute_pe.cpp
+++ b/src/compute_pe.cpp
@@ -59,7 +59,7 @@
 #include "domain.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_pe.h b/src/compute_pe.h
index 9f8400f..847d548 100644
--- a/src/compute_pe.h
+++ b/src/compute_pe.h
@@ -54,7 +54,7 @@ ComputeStyle(pe,ComputePE)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputePE : public Compute {
  public:
diff --git a/src/compute_pe_atom.cpp b/src/compute_pe_atom.cpp
index 3feced0..bb14511 100644
--- a/src/compute_pe_atom.cpp
+++ b/src/compute_pe_atom.cpp
@@ -58,7 +58,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_pe_atom.h b/src/compute_pe_atom.h
index dd0a3bd..bd7c14a 100644
--- a/src/compute_pe_atom.h
+++ b/src/compute_pe_atom.h
@@ -54,7 +54,7 @@ ComputeStyle(pe/atom,ComputePEAtom)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputePEAtom : public Compute {
  public:
diff --git a/src/compute_pressure.cpp b/src/compute_pressure.cpp
index 72e7873..31e076a 100644
--- a/src/compute_pressure.cpp
+++ b/src/compute_pressure.cpp
@@ -61,7 +61,7 @@
 #include "kspace.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_pressure.h b/src/compute_pressure.h
index 40b3d53..31d7429 100644
--- a/src/compute_pressure.h
+++ b/src/compute_pressure.h
@@ -54,7 +54,7 @@ ComputeStyle(pressure,ComputePressure)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputePressure : public Compute {
  public:
diff --git a/src/compute_property_atom.cpp b/src/compute_property_atom.cpp
index 620bc36..6ecb605 100644
--- a/src/compute_property_atom.cpp
+++ b/src/compute_property_atom.cpp
@@ -55,7 +55,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_property_atom.h b/src/compute_property_atom.h
index 540ea09..26552bb 100644
--- a/src/compute_property_atom.h
+++ b/src/compute_property_atom.h
@@ -54,7 +54,7 @@ ComputeStyle(property/atom,ComputePropertyAtom)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputePropertyAtom : public Compute {
  public:
diff --git a/src/compute_property_local.cpp b/src/compute_property_local.cpp
index 455fb8e..deb90da 100644
--- a/src/compute_property_local.cpp
+++ b/src/compute_property_local.cpp
@@ -56,7 +56,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 enum{NONE,NEIGH,PAIR,BOND,ANGLE,DIHEDRAL,IMPROPER};
 
diff --git a/src/compute_property_local.h b/src/compute_property_local.h
index a7a9380..0a8772e 100644
--- a/src/compute_property_local.h
+++ b/src/compute_property_local.h
@@ -54,7 +54,7 @@ ComputeStyle(property/local,ComputePropertyLocal)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputePropertyLocal : public Compute {
  public:
diff --git a/src/compute_property_molecule.cpp b/src/compute_property_molecule.cpp
index 27de343..b77103d 100644
--- a/src/compute_property_molecule.cpp
+++ b/src/compute_property_molecule.cpp
@@ -50,7 +50,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_property_molecule.h b/src/compute_property_molecule.h
index 7cb761a..9d9e55a 100644
--- a/src/compute_property_molecule.h
+++ b/src/compute_property_molecule.h
@@ -54,7 +54,7 @@ ComputeStyle(property/molecule,ComputePropertyMolecule)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputePropertyMolecule : public Compute {
  public:
diff --git a/src/compute_rdf.cpp b/src/compute_rdf.cpp
index f3caa57..91ba02d 100644
--- a/src/compute_rdf.cpp
+++ b/src/compute_rdf.cpp
@@ -64,7 +64,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace MathConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/compute_rdf.h b/src/compute_rdf.h
index 65660aa..988c34d 100644
--- a/src/compute_rdf.h
+++ b/src/compute_rdf.h
@@ -55,7 +55,7 @@ ComputeStyle(rdf,ComputeRDF)
 #include "stdio.h"
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeRDF : public Compute {
  public:
diff --git a/src/compute_reduce.cpp b/src/compute_reduce.cpp
index 33e9b74..1a9e63a 100644
--- a/src/compute_reduce.cpp
+++ b/src/compute_reduce.cpp
@@ -66,7 +66,7 @@ Christoph Kloss (DCS)
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 enum{SUM,MINN,MAXX,AVE};
 enum{X,V,F,COMPUTE,FIX,VARIABLE,RHO,P}; 
diff --git a/src/compute_reduce.h b/src/compute_reduce.h
index b895400..1cad02e 100644
--- a/src/compute_reduce.h
+++ b/src/compute_reduce.h
@@ -62,7 +62,7 @@ ComputeStyle(reduce/sph,ComputeReduce)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeReduce : public Compute {
  public:
diff --git a/src/compute_reduce_region.cpp b/src/compute_reduce_region.cpp
index e0ba535..8294246 100644
--- a/src/compute_reduce_region.cpp
+++ b/src/compute_reduce_region.cpp
@@ -64,7 +64,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 enum{SUM,MINN,MAXX,AVE};
 enum{X,V,F,COMPUTE,FIX,VARIABLE,RHO,P}; 
diff --git a/src/compute_reduce_region.h b/src/compute_reduce_region.h
index 26fc03a..e580d7c 100644
--- a/src/compute_reduce_region.h
+++ b/src/compute_reduce_region.h
@@ -60,7 +60,7 @@ ComputeStyle(reduce/region,ComputeReduceRegion)
 
 #include "compute_reduce.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeReduceRegion : public ComputeReduce {
  public:
diff --git a/src/compute_rigid.cpp b/src/compute_rigid.cpp
index 6a3e296..a6f4ff5 100644
--- a/src/compute_rigid.cpp
+++ b/src/compute_rigid.cpp
@@ -52,7 +52,7 @@
 #include "container.h"
 #include "fix_multisphere.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_rigid.h b/src/compute_rigid.h
index d4c6ca3..ebd32f5 100644
--- a/src/compute_rigid.h
+++ b/src/compute_rigid.h
@@ -51,7 +51,7 @@ ComputeStyle(multisphere,ComputeRigid)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeRigid : public Compute {
  public:
diff --git a/src/compute_slice.cpp b/src/compute_slice.cpp
index 8534349..4d9a2a6 100644
--- a/src/compute_slice.cpp
+++ b/src/compute_slice.cpp
@@ -54,7 +54,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 enum{COMPUTE,FIX};
 
diff --git a/src/compute_slice.h b/src/compute_slice.h
index 828acd5..13240c9 100644
--- a/src/compute_slice.h
+++ b/src/compute_slice.h
@@ -54,7 +54,7 @@ ComputeStyle(slice,ComputeSlice)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeSlice : public Compute {
  public:
diff --git a/src/compute_stress_atom.cpp b/src/compute_stress_atom.cpp
index c07e046..606228e 100644
--- a/src/compute_stress_atom.cpp
+++ b/src/compute_stress_atom.cpp
@@ -67,7 +67,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_stress_atom.h b/src/compute_stress_atom.h
index 2feadd1..2f71e74 100644
--- a/src/compute_stress_atom.h
+++ b/src/compute_stress_atom.h
@@ -60,7 +60,7 @@ ComputeStyle(stress/atom,ComputeStressAtom)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeStressAtom : public Compute {
  public:
diff --git a/src/compute_surface.cpp b/src/compute_surface.cpp
index 7dd8e37..f714ecd 100644
--- a/src/compute_surface.cpp
+++ b/src/compute_surface.cpp
@@ -59,7 +59,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_surface.h b/src/compute_surface.h
index 60ed811..3071c9d 100644
--- a/src/compute_surface.h
+++ b/src/compute_surface.h
@@ -49,7 +49,7 @@ ComputeStyle(surface,ComputeSurface)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeSurface : public Compute {
 
diff --git a/src/compute_temp.cpp b/src/compute_temp.cpp
index 6aa06fb..6eefd07 100644
--- a/src/compute_temp.cpp
+++ b/src/compute_temp.cpp
@@ -55,7 +55,7 @@
 #include "group.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/compute_temp.h b/src/compute_temp.h
index 7e09716..f6701f1 100644
--- a/src/compute_temp.h
+++ b/src/compute_temp.h
@@ -54,7 +54,7 @@ ComputeStyle(temp,ComputeTemp)
 
 #include "compute.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ComputeTemp : public Compute {
  public:
diff --git a/src/contact_models.h b/src/contact_models.h
index 7ec608a..2d54451 100644
--- a/src/contact_models.h
+++ b/src/contact_models.h
@@ -54,7 +54,7 @@
 #include "settings.h"
 #include "contact_model_constants.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 namespace LIGGGHTS {
 
diff --git a/src/container_base.cpp b/src/container_base.cpp
index 64b57b2..6725b33 100644
--- a/src/container_base.cpp
+++ b/src/container_base.cpp
@@ -48,7 +48,7 @@
 
 #define GROW 100
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
   const char * ContainerBase::AVERAGESUFFIX = "_average";
   const char * ContainerBase::MEANSQUARESUFFIX = "_meansquare";
diff --git a/src/container_base.h b/src/container_base.h
index 9d48e78..0f0c342 100644
--- a/src/container_base.h
+++ b/src/container_base.h
@@ -46,7 +46,7 @@
 
 #include "string.h"
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
   // buffer operation types (for push and pop)
 
diff --git a/src/create_atoms.cpp b/src/create_atoms.cpp
index cc837c5..a47818a 100644
--- a/src/create_atoms.cpp
+++ b/src/create_atoms.cpp
@@ -65,7 +65,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define BIG      1.0e30
 #define EPSILON  1.0e-6
diff --git a/src/create_atoms.h b/src/create_atoms.h
index 5809e88..9562940 100644
--- a/src/create_atoms.h
+++ b/src/create_atoms.h
@@ -60,7 +60,7 @@ CommandStyle(create_atoms,CreateAtoms)
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class CreateAtoms : protected Pointers {
  public:
diff --git a/src/create_box.cpp b/src/create_box.cpp
index 2d07b6a..8b01abc 100644
--- a/src/create_box.cpp
+++ b/src/create_box.cpp
@@ -62,7 +62,7 @@
 #include "update.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/create_box.h b/src/create_box.h
index e7bfbe8..456ae24 100644
--- a/src/create_box.h
+++ b/src/create_box.h
@@ -60,7 +60,7 @@ CommandStyle(create_box,CreateBox)
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class CreateBox : protected Pointers {
  public:
diff --git a/src/custom_value_tracker.cpp b/src/custom_value_tracker.cpp
index e44e413..dfeb7b7 100644
--- a/src/custom_value_tracker.cpp
+++ b/src/custom_value_tracker.cpp
@@ -43,7 +43,7 @@
 
 #include "custom_value_tracker.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
   /* ----------------------------------------------------------------------
    constructor, destructor
diff --git a/src/custom_value_tracker.h b/src/custom_value_tracker.h
index 7d5facb..46b3351 100644
--- a/src/custom_value_tracker.h
+++ b/src/custom_value_tracker.h
@@ -52,7 +52,7 @@
 #include <string>
 #include <vector>
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
   class CustomValueTracker : protected Pointers
   {
@@ -177,5 +177,5 @@ namespace LAMMPS_NS
   #include "custom_value_tracker_I.h"
   // *************************************
 
-} /* LAMMPS_NS */
+} /* LIGGGHTS_NS */
 #endif
diff --git a/src/debug_liggghts.h b/src/debug_liggghts.h
index ce9c96a..22e9a42 100644
--- a/src/debug_liggghts.h
+++ b/src/debug_liggghts.h
@@ -51,7 +51,7 @@
 #include "container.h"
 #include "atom.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 inline void __trace__()
 {
diff --git a/src/delete_atoms.cpp b/src/delete_atoms.cpp
index 4a18458..e32483e 100644
--- a/src/delete_atoms.cpp
+++ b/src/delete_atoms.cpp
@@ -68,7 +68,7 @@
 
 #include <map>
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 // allocate space for static class variable
 
diff --git a/src/delete_atoms.h b/src/delete_atoms.h
index 806bc60..577155b 100644
--- a/src/delete_atoms.h
+++ b/src/delete_atoms.h
@@ -61,7 +61,7 @@ CommandStyle(delete_atoms,DeleteAtoms)
 #include "pointers.h"
 #include <map>
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class DeleteAtoms : protected Pointers {
  public:
diff --git a/src/delete_bonds.cpp b/src/delete_bonds.cpp
index c9b5c77..e4354ee 100644
--- a/src/delete_bonds.cpp
+++ b/src/delete_bonds.cpp
@@ -57,7 +57,7 @@
 #include "special.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 enum{MULTI,ATOM,BOND,ANGLE,DIHEDRAL,IMPROPER,STATS};
 
diff --git a/src/delete_bonds.h b/src/delete_bonds.h
index 63803c8..473d626 100644
--- a/src/delete_bonds.h
+++ b/src/delete_bonds.h
@@ -54,7 +54,7 @@ CommandStyle(delete_bonds,DeleteBonds)
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class DeleteBonds : protected Pointers {
  public:
diff --git a/src/dihedral.cpp b/src/dihedral.cpp
index 698556b..4c4efa7 100644
--- a/src/dihedral.cpp
+++ b/src/dihedral.cpp
@@ -54,7 +54,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ----------------------------------------------------------------------
    set dihedral contribution to Vdwl and Coulombic energy to 0.0
diff --git a/src/dihedral.h b/src/dihedral.h
index 4c3e46e..adebc9f 100644
--- a/src/dihedral.h
+++ b/src/dihedral.h
@@ -49,7 +49,7 @@
 #include "stdio.h"
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Dihedral : protected Pointers {
   friend class ThrOMP;
diff --git a/src/dihedral_hybrid.cpp b/src/dihedral_hybrid.cpp
index 1d73416..4e23cf8 100644
--- a/src/dihedral_hybrid.cpp
+++ b/src/dihedral_hybrid.cpp
@@ -55,7 +55,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define EXTRA 1000
 
diff --git a/src/dihedral_hybrid.h b/src/dihedral_hybrid.h
index 416c4f6..0517525 100644
--- a/src/dihedral_hybrid.h
+++ b/src/dihedral_hybrid.h
@@ -55,7 +55,7 @@ DihedralStyle(hybrid,DihedralHybrid)
 #include "stdio.h"
 #include "dihedral.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class DihedralHybrid : public Dihedral {
  public:
diff --git a/src/displace_atoms.cpp b/src/displace_atoms.cpp
index 2ae7d8b..1f8aba2 100644
--- a/src/displace_atoms.cpp
+++ b/src/displace_atoms.cpp
@@ -60,7 +60,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace MathConst;
 
 enum{MOVE,RAMP,RANDOM,ROTATE};
diff --git a/src/displace_atoms.h b/src/displace_atoms.h
index 2921ee9..1b05329 100644
--- a/src/displace_atoms.h
+++ b/src/displace_atoms.h
@@ -54,7 +54,7 @@ CommandStyle(displace_atoms,DisplaceAtoms)
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class DisplaceAtoms : protected Pointers {
  public:
diff --git a/src/domain.cpp b/src/domain.cpp
index 414801a..798881c 100644
--- a/src/domain.cpp
+++ b/src/domain.cpp
@@ -76,7 +76,7 @@
 #include "error.h"
 #include "neighbor.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace MathConst;
 
 #define BIG   1.0e20
diff --git a/src/domain.h b/src/domain.h
index d377a89..02c10d7 100644
--- a/src/domain.h
+++ b/src/domain.h
@@ -62,7 +62,7 @@
 
 #define SMALL_DMBRDR 1.0e-8 
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Domain : protected Pointers {
  public:
diff --git a/src/domain_I.h b/src/domain_I.h
index e08e8f4..81ae131 100644
--- a/src/domain_I.h
+++ b/src/domain_I.h
@@ -42,7 +42,7 @@
 #ifndef LMP_DOMAIN_I_H
 #define LMP_DOMAIN_I_H
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ----------------------------------------------------------------------
    check if coordinate in domain, subdomain or extended subdomain
diff --git a/src/domain_wedge_dummy.h b/src/domain_wedge_dummy.h
index 4c2839e..f5aa4ca 100644
--- a/src/domain_wedge_dummy.h
+++ b/src/domain_wedge_dummy.h
@@ -46,7 +46,7 @@
 
 #include "domain.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class DomainWedge : public Domain
 {
diff --git a/src/dump.cpp b/src/dump.cpp
index ef68c60..3de0756 100644
--- a/src/dump.cpp
+++ b/src/dump.cpp
@@ -59,7 +59,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 // allocate space for static class variable
 
diff --git a/src/dump.h b/src/dump.h
index 92544c3..0bc5eb3 100644
--- a/src/dump.h
+++ b/src/dump.h
@@ -50,7 +50,7 @@
 #include "stdio.h"
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Dump : protected Pointers {
 
diff --git a/src/dump_atom_vtk.cpp b/src/dump_atom_vtk.cpp
index 8db7872..10beaaa 100644
--- a/src/dump_atom_vtk.cpp
+++ b/src/dump_atom_vtk.cpp
@@ -58,7 +58,7 @@
 #include<vtkUnstructuredGrid.h>
 #include<vtkXMLUnstructuredGridWriter.h>
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/dump_atom_vtk.h b/src/dump_atom_vtk.h
index 4bad7e3..33fe37c 100644
--- a/src/dump_atom_vtk.h
+++ b/src/dump_atom_vtk.h
@@ -51,7 +51,7 @@ DumpStyle(atom/vtk,DumpATOMVTK)
 #include <fstream>
 #include "update.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class DumpATOMVTK : public Dump {
  public:
diff --git a/src/dump_custom.cpp b/src/dump_custom.cpp
index c19a89d..fa55b6b 100644
--- a/src/dump_custom.cpp
+++ b/src/dump_custom.cpp
@@ -67,7 +67,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 // customize by adding keyword
 // also customize compute_atom_property.cpp
diff --git a/src/dump_custom.h b/src/dump_custom.h
index bf9e6ec..5b825cc 100644
--- a/src/dump_custom.h
+++ b/src/dump_custom.h
@@ -60,7 +60,7 @@ DumpStyle(custom,DumpCustom)
 
 #include "dump.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class DumpCustom : public Dump {
  public:
diff --git a/src/dump_custom_vtk.cpp b/src/dump_custom_vtk.cpp
index ed54097..73a84fb 100644
--- a/src/dump_custom_vtk.cpp
+++ b/src/dump_custom_vtk.cpp
@@ -88,7 +88,7 @@
 #include <vtkXMLUnstructuredGridWriter.h>
 #include <vtkXMLPUnstructuredGridWriter.h>
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 // customize by
 // * adding an enum constant (add vector components in consecutive order)
diff --git a/src/dump_custom_vtk.h b/src/dump_custom_vtk.h
index 48c221c..c3c8ae2 100644
--- a/src/dump_custom_vtk.h
+++ b/src/dump_custom_vtk.h
@@ -68,7 +68,7 @@ class vtkAbstractArray;
 class vtkRectilinearGrid;
 class vtkUnstructuredGrid;
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 /**
  * @brief DumpCustomVTK class
diff --git a/src/dump_decomposition_vtk.cpp b/src/dump_decomposition_vtk.cpp
index a09535d..09eba14 100644
--- a/src/dump_decomposition_vtk.cpp
+++ b/src/dump_decomposition_vtk.cpp
@@ -50,7 +50,7 @@
 #include "modify.h"
 #include "comm.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define BIG      1.0e30
 
diff --git a/src/dump_decomposition_vtk.h b/src/dump_decomposition_vtk.h
index 01fa27c..bcbe3f3 100644
--- a/src/dump_decomposition_vtk.h
+++ b/src/dump_decomposition_vtk.h
@@ -50,7 +50,7 @@ DumpStyle(decomposition/vtk,DumpDecompositionVTK)
 
 #include "dump.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class DumpDecompositionVTK : public Dump {
  public:
diff --git a/src/dump_euler_vtk.cpp b/src/dump_euler_vtk.cpp
index b7b07df..90f07c3 100644
--- a/src/dump_euler_vtk.cpp
+++ b/src/dump_euler_vtk.cpp
@@ -53,7 +53,7 @@
 #include "comm.h"
 #include <stdint.h>
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/dump_euler_vtk.h b/src/dump_euler_vtk.h
index 0c7b34e..e8bd7a7 100644
--- a/src/dump_euler_vtk.h
+++ b/src/dump_euler_vtk.h
@@ -50,7 +50,7 @@ DumpStyle(euler/vtk,DumpEulerVTK)
 
 #include "dump.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class DumpEulerVTK : public Dump {
 
diff --git a/src/dump_image.cpp b/src/dump_image.cpp
index dae5016..5e6ec04 100644
--- a/src/dump_image.cpp
+++ b/src/dump_image.cpp
@@ -60,7 +60,7 @@
 #include "error.h"
 #include "memory.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace MathConst;
 
 #define BIG 1.0e20
diff --git a/src/dump_image.h b/src/dump_image.h
index 99628aa..029a5fe 100644
--- a/src/dump_image.h
+++ b/src/dump_image.h
@@ -54,7 +54,7 @@ DumpStyle(image,DumpImage)
 
 #include "dump_custom.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class DumpImage : public DumpCustom {
  public:
diff --git a/src/dump_local.cpp b/src/dump_local.cpp
index df4ecc0..6e0880e 100644
--- a/src/dump_local.cpp
+++ b/src/dump_local.cpp
@@ -57,7 +57,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 enum{INT,DOUBLE};
 
diff --git a/src/dump_local.h b/src/dump_local.h
index 7eea021..d00f234 100644
--- a/src/dump_local.h
+++ b/src/dump_local.h
@@ -54,7 +54,7 @@ DumpStyle(local,DumpLocal)
 
 #include "dump.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class DumpLocal : public Dump {
  public:
diff --git a/src/dump_local_gran_vtk.cpp b/src/dump_local_gran_vtk.cpp
index 725daca..95b0e8b 100644
--- a/src/dump_local_gran_vtk.cpp
+++ b/src/dump_local_gran_vtk.cpp
@@ -83,7 +83,7 @@
 #include <vtkXMLUnstructuredGridWriter.h>
 #include <vtkXMLPUnstructuredGridWriter.h>
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 enum{INT,DOUBLE,STRING};       // same as in DumpCFG
 enum{VTK,VTP,VTU,PVTP,PVTU};   // file formats
diff --git a/src/dump_local_gran_vtk.h b/src/dump_local_gran_vtk.h
index 739e6df..18e746d 100644
--- a/src/dump_local_gran_vtk.h
+++ b/src/dump_local_gran_vtk.h
@@ -61,7 +61,7 @@ class vtkAbstractArray;
 class vtkRectilinearGrid;
 class vtkUnstructuredGrid;
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 /**
  * @brief DumpLocalGranVTK class
diff --git a/src/dump_mesh_stl.cpp b/src/dump_mesh_stl.cpp
index b96dfff..26d8f0e 100644
--- a/src/dump_mesh_stl.cpp
+++ b/src/dump_mesh_stl.cpp
@@ -57,7 +57,7 @@
 #include "comm.h"
 #include <stdint.h>
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 enum
 {
diff --git a/src/dump_mesh_stl.h b/src/dump_mesh_stl.h
index cd06849..156d839 100644
--- a/src/dump_mesh_stl.h
+++ b/src/dump_mesh_stl.h
@@ -53,7 +53,7 @@ DumpStyle(stl,DumpMeshSTL)
 
 #include "dump.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class DumpMeshSTL : public Dump {
  public:
diff --git a/src/dump_mesh_vtk.cpp b/src/dump_mesh_vtk.cpp
index 08ca887..6f2595e 100644
--- a/src/dump_mesh_vtk.cpp
+++ b/src/dump_mesh_vtk.cpp
@@ -56,7 +56,7 @@
 #include "comm.h"
 #include <stdint.h>
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 enum
 {
diff --git a/src/dump_mesh_vtk.h b/src/dump_mesh_vtk.h
index 6198916..1425144 100644
--- a/src/dump_mesh_vtk.h
+++ b/src/dump_mesh_vtk.h
@@ -52,7 +52,7 @@ DumpStyle(mesh/gran/VTK,DumpMeshVTK)
 #include "dump.h"
 #include "container.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class DumpMeshVTK : public Dump {
 
diff --git a/src/dump_movie.cpp b/src/dump_movie.cpp
index e9c3b02..f042cc2 100644
--- a/src/dump_movie.cpp
+++ b/src/dump_movie.cpp
@@ -56,7 +56,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/dump_movie.h b/src/dump_movie.h
index 235042b..7f3acd5 100644
--- a/src/dump_movie.h
+++ b/src/dump_movie.h
@@ -54,7 +54,7 @@ DumpStyle(movie,DumpMovie)
 
 #include "dump_image.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class DumpMovie : public DumpImage {
  public:
diff --git a/src/dump_xyz.cpp b/src/dump_xyz.cpp
index 90f6faf..5023a04 100644
--- a/src/dump_xyz.cpp
+++ b/src/dump_xyz.cpp
@@ -51,7 +51,7 @@
 #include "memory.h"
 #include "update.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define ONELINE 128
 #define DELTA 1048576
diff --git a/src/dump_xyz.h b/src/dump_xyz.h
index 1430162..edb613d 100644
--- a/src/dump_xyz.h
+++ b/src/dump_xyz.h
@@ -54,7 +54,7 @@ DumpStyle(xyz,DumpXYZ)
 
 #include "dump.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class DumpXYZ : public Dump {
  public:
diff --git a/src/error.cpp b/src/error.cpp
index 50e0d40..2a0be33 100644
--- a/src/error.cpp
+++ b/src/error.cpp
@@ -59,7 +59,7 @@
 #include "compute.h" 
 #include "string.h" 
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/error.h b/src/error.h
index 05dfb1d..dedf978 100644
--- a/src/error.h
+++ b/src/error.h
@@ -54,7 +54,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Error : protected Pointers {
  public:
diff --git a/src/finish.cpp b/src/finish.cpp
index 22e0782..2861924 100644
--- a/src/finish.cpp
+++ b/src/finish.cpp
@@ -64,7 +64,7 @@
 #include "modify.h"
 #include "fix.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/finish.h b/src/finish.h
index 02ee672..6af5941 100644
--- a/src/finish.h
+++ b/src/finish.h
@@ -48,7 +48,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Finish : protected Pointers {
  public:
diff --git a/src/fix.cpp b/src/fix.cpp
index 22e14f0..c5d64cc 100644
--- a/src/fix.cpp
+++ b/src/fix.cpp
@@ -58,7 +58,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix.h b/src/fix.h
index 4626727..9860de7 100644
--- a/src/fix.h
+++ b/src/fix.h
@@ -54,7 +54,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Fix : protected Pointers {
  public:
diff --git a/src/fix_adapt.cpp b/src/fix_adapt.cpp
index faeb995..08c784b 100644
--- a/src/fix_adapt.cpp
+++ b/src/fix_adapt.cpp
@@ -69,7 +69,7 @@
 #include "modify.h" 
 #include "update.h" 
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 using namespace MathConst;
 
diff --git a/src/fix_adapt.h b/src/fix_adapt.h
index a5b0fac..417d332 100644
--- a/src/fix_adapt.h
+++ b/src/fix_adapt.h
@@ -60,7 +60,7 @@ FixStyle(adapt,FixAdapt)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixAdapt : public Fix {
  public:
diff --git a/src/fix_addforce.cpp b/src/fix_addforce.cpp
index 11c9da3..5a2a3ac 100644
--- a/src/fix_addforce.cpp
+++ b/src/fix_addforce.cpp
@@ -58,7 +58,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 enum{NONE,CONSTANT,EQUAL,ATOM};
diff --git a/src/fix_addforce.h b/src/fix_addforce.h
index f404e10..beae4c8 100644
--- a/src/fix_addforce.h
+++ b/src/fix_addforce.h
@@ -54,7 +54,7 @@ FixStyle(addforce,FixAddForce)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixAddForce : public Fix {
  public:
diff --git a/src/fix_ave_atom.cpp b/src/fix_ave_atom.cpp
index 804901f..5756805 100644
--- a/src/fix_ave_atom.cpp
+++ b/src/fix_ave_atom.cpp
@@ -57,7 +57,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 enum{X,V,F,COMPUTE,FIX,VARIABLE};
diff --git a/src/fix_ave_atom.h b/src/fix_ave_atom.h
index 26c0382..eaa2f44 100644
--- a/src/fix_ave_atom.h
+++ b/src/fix_ave_atom.h
@@ -55,7 +55,7 @@ FixStyle(ave/atom,FixAveAtom)
 #include "stdio.h"
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixAveAtom : public Fix {
  public:
diff --git a/src/fix_ave_correlate.cpp b/src/fix_ave_correlate.cpp
index 335a78f..e6dc56f 100644
--- a/src/fix_ave_correlate.cpp
+++ b/src/fix_ave_correlate.cpp
@@ -62,7 +62,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 enum{COMPUTE,FIX,VARIABLE};
diff --git a/src/fix_ave_correlate.h b/src/fix_ave_correlate.h
index 89edbdf..c8ca9ee 100644
--- a/src/fix_ave_correlate.h
+++ b/src/fix_ave_correlate.h
@@ -55,7 +55,7 @@ FixStyle(ave/correlate,FixAveCorrelate)
 #include "stdio.h"
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixAveCorrelate : public Fix {
  public:
diff --git a/src/fix_ave_euler.cpp b/src/fix_ave_euler.cpp
index 13b72aa..1e77f4d 100644
--- a/src/fix_ave_euler.cpp
+++ b/src/fix_ave_euler.cpp
@@ -62,7 +62,7 @@
 
 #define INVOKED_PERATOM 8
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_ave_euler.h b/src/fix_ave_euler.h
index 5269ef9..2da80d0 100644
--- a/src/fix_ave_euler.h
+++ b/src/fix_ave_euler.h
@@ -53,7 +53,7 @@ FixStyle(ave/euler/stress,FixAveEuler)
 #include "fix.h"
 #include "vector_liggghts.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixAveEuler : public Fix {
 
diff --git a/src/fix_ave_histo.cpp b/src/fix_ave_histo.cpp
index 668255a..3ace144 100644
--- a/src/fix_ave_histo.cpp
+++ b/src/fix_ave_histo.cpp
@@ -58,7 +58,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 enum{X,V,F,COMPUTE,FIX,VARIABLE};
diff --git a/src/fix_ave_histo.h b/src/fix_ave_histo.h
index 516c468..2abe425 100644
--- a/src/fix_ave_histo.h
+++ b/src/fix_ave_histo.h
@@ -55,7 +55,7 @@ FixStyle(ave/histo,FixAveHisto)
 #include "stdio.h"
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixAveHisto : public Fix {
  public:
diff --git a/src/fix_ave_spatial.cpp b/src/fix_ave_spatial.cpp
index 1607958..c3dce92 100644
--- a/src/fix_ave_spatial.cpp
+++ b/src/fix_ave_spatial.cpp
@@ -64,7 +64,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 enum{LOWER,CENTER,UPPER,COORD};
diff --git a/src/fix_ave_spatial.h b/src/fix_ave_spatial.h
index 021e461..489df05 100644
--- a/src/fix_ave_spatial.h
+++ b/src/fix_ave_spatial.h
@@ -55,7 +55,7 @@ FixStyle(ave/spatial,FixAveSpatial)
 #include "stdio.h"
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixAveSpatial : public Fix {
  public:
diff --git a/src/fix_ave_time.cpp b/src/fix_ave_time.cpp
index c074603..582168e 100644
--- a/src/fix_ave_time.cpp
+++ b/src/fix_ave_time.cpp
@@ -61,7 +61,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 enum{COMPUTE,FIX,VARIABLE};
diff --git a/src/fix_ave_time.h b/src/fix_ave_time.h
index 18fa1ae..9bc1e0c 100644
--- a/src/fix_ave_time.h
+++ b/src/fix_ave_time.h
@@ -55,7 +55,7 @@ FixStyle(ave/time,FixAveTime)
 #include "stdio.h"
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixAveTime : public Fix {
  public:
diff --git a/src/fix_aveforce.cpp b/src/fix_aveforce.cpp
index d191b10..84908d6 100644
--- a/src/fix_aveforce.cpp
+++ b/src/fix_aveforce.cpp
@@ -58,7 +58,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 enum{NONE,CONSTANT,EQUAL};
diff --git a/src/fix_aveforce.h b/src/fix_aveforce.h
index c611f7c..1e0faef 100644
--- a/src/fix_aveforce.h
+++ b/src/fix_aveforce.h
@@ -54,7 +54,7 @@ FixStyle(aveforce,FixAveForce)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixAveForce : public Fix {
  public:
diff --git a/src/fix_base_liggghts.cpp b/src/fix_base_liggghts.cpp
index c72ff57..0e2fe5e 100644
--- a/src/fix_base_liggghts.cpp
+++ b/src/fix_base_liggghts.cpp
@@ -56,7 +56,7 @@
 #include "fix_multisphere.h"
 #include "multisphere_parallel.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_base_liggghts.h b/src/fix_base_liggghts.h
index a46c44d..90606ef 100644
--- a/src/fix_base_liggghts.h
+++ b/src/fix_base_liggghts.h
@@ -51,7 +51,7 @@
 #include "container.h"
 #include "region.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixBaseLiggghts : public Fix {
 
diff --git a/src/fix_box_relax.cpp b/src/fix_box_relax.cpp
index e16d734..2a4a482 100644
--- a/src/fix_box_relax.cpp
+++ b/src/fix_box_relax.cpp
@@ -62,7 +62,7 @@
 #include "error.h"
 #include "math_extra.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 enum{NONE,XYZ,XY,YZ,XZ};
diff --git a/src/fix_box_relax.h b/src/fix_box_relax.h
index 31d21d1..4d7b644 100644
--- a/src/fix_box_relax.h
+++ b/src/fix_box_relax.h
@@ -54,7 +54,7 @@ FixStyle(box/relax,FixBoxRelax)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixBoxRelax : public Fix {
  public:
diff --git a/src/fix_buoyancy.cpp b/src/fix_buoyancy.cpp
index a5424c1..2d31541 100644
--- a/src/fix_buoyancy.cpp
+++ b/src/fix_buoyancy.cpp
@@ -55,7 +55,7 @@
 #include "mpi_liggghts.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_buoyancy.h b/src/fix_buoyancy.h
index 51b6497..19b8442 100644
--- a/src/fix_buoyancy.h
+++ b/src/fix_buoyancy.h
@@ -49,7 +49,7 @@ FixStyle(buoyancy,FixBuoyancy)
 
 #include "fix_base_liggghts.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixBuoyancy : public FixBaseLiggghts {
 
diff --git a/src/fix_cfd_coupling.cpp b/src/fix_cfd_coupling.cpp
index 1c48612..34b3ce4 100644
--- a/src/fix_cfd_coupling.cpp
+++ b/src/fix_cfd_coupling.cpp
@@ -60,7 +60,7 @@
 #include "cfd_regionmodel.h"
 #include "style_cfd_regionmodel.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_cfd_coupling.h b/src/fix_cfd_coupling.h
index 8a5362d..9f580a3 100644
--- a/src/fix_cfd_coupling.h
+++ b/src/fix_cfd_coupling.h
@@ -50,7 +50,7 @@ FixStyle(couple/cfd,FixCfdCoupling)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixCfdCoupling : public Fix {
  friend class CfdRegionmodel;
diff --git a/src/fix_cfd_coupling_convection.cpp b/src/fix_cfd_coupling_convection.cpp
index 1d68199..6b212e7 100644
--- a/src/fix_cfd_coupling_convection.cpp
+++ b/src/fix_cfd_coupling_convection.cpp
@@ -55,7 +55,7 @@
 #include "fix_cfd_coupling_convection.h"
 #include "fix_property_atom.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_cfd_coupling_convection.h b/src/fix_cfd_coupling_convection.h
index 82d3468..2293416 100644
--- a/src/fix_cfd_coupling_convection.h
+++ b/src/fix_cfd_coupling_convection.h
@@ -50,7 +50,7 @@ FixStyle(couple/cfd/convection,FixCfdCouplingConvection)
 
 #include "fix_cfd_coupling.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixCfdCouplingConvection : public Fix {
 
diff --git a/src/fix_cfd_coupling_convection_impl.cpp b/src/fix_cfd_coupling_convection_impl.cpp
index 59fc1ce..3d643d8 100644
--- a/src/fix_cfd_coupling_convection_impl.cpp
+++ b/src/fix_cfd_coupling_convection_impl.cpp
@@ -57,7 +57,7 @@
 #include "neighbor.h"
 #include "fix_scalar_transport_equation.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_cfd_coupling_convection_impl.h b/src/fix_cfd_coupling_convection_impl.h
index 1f4f907..555a467 100644
--- a/src/fix_cfd_coupling_convection_impl.h
+++ b/src/fix_cfd_coupling_convection_impl.h
@@ -51,7 +51,7 @@ FixStyle(couple/cfd/convectiveImpl,FixCfdCouplingConvectiveImpl)
 
 #include "fix_cfd_coupling.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixCfdCouplingConvectiveImpl : public Fix {
 
diff --git a/src/fix_cfd_coupling_convection_species.cpp b/src/fix_cfd_coupling_convection_species.cpp
index dec892b..b47c973 100644
--- a/src/fix_cfd_coupling_convection_species.cpp
+++ b/src/fix_cfd_coupling_convection_species.cpp
@@ -56,7 +56,7 @@
 #include "fix_property_global.h"
 #include "properties.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_cfd_coupling_convection_species.h b/src/fix_cfd_coupling_convection_species.h
index 9eb4e77..5140e31 100644
--- a/src/fix_cfd_coupling_convection_species.h
+++ b/src/fix_cfd_coupling_convection_species.h
@@ -49,7 +49,7 @@ FixStyle(couple/cfd/speciesConvection,FixCfdCouplingConvectionSpecies)
 
 #include "fix_cfd_coupling.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixCfdCouplingConvectionSpecies : public Fix {
 
diff --git a/src/fix_cfd_coupling_force.cpp b/src/fix_cfd_coupling_force.cpp
index 843c446..33beb44 100644
--- a/src/fix_cfd_coupling_force.cpp
+++ b/src/fix_cfd_coupling_force.cpp
@@ -54,7 +54,7 @@
 #include "fix_cfd_coupling_force.h"
 #include "fix_property_atom.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_cfd_coupling_force.h b/src/fix_cfd_coupling_force.h
index 0947af1..c01d061 100644
--- a/src/fix_cfd_coupling_force.h
+++ b/src/fix_cfd_coupling_force.h
@@ -51,7 +51,7 @@ FixStyle(couple/cfd/dragforce,FixCfdCouplingForce)
 
 #include "fix_cfd_coupling.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixCfdCouplingForce : public Fix  {
  public:
diff --git a/src/fix_cfd_coupling_force_implicit.cpp b/src/fix_cfd_coupling_force_implicit.cpp
index ed72aa2..b908391 100644
--- a/src/fix_cfd_coupling_force_implicit.cpp
+++ b/src/fix_cfd_coupling_force_implicit.cpp
@@ -55,7 +55,7 @@
 #include "fix_cfd_coupling_force_implicit.h"
 #include "fix_property_atom.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_cfd_coupling_force_implicit.h b/src/fix_cfd_coupling_force_implicit.h
index e1ade66..aaf6665 100644
--- a/src/fix_cfd_coupling_force_implicit.h
+++ b/src/fix_cfd_coupling_force_implicit.h
@@ -50,7 +50,7 @@ FixStyle(couple/cfd/force/implicit,FixCfdCouplingForceImplicit)
 
 #include "fix_cfd_coupling_force.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixCfdCouplingForceImplicit : public FixCfdCouplingForce  {
   friend class FixNVESuperquadric;
diff --git a/src/fix_check_timestep_gran.cpp b/src/fix_check_timestep_gran.cpp
index a510a26..b145c11 100644
--- a/src/fix_check_timestep_gran.cpp
+++ b/src/fix_check_timestep_gran.cpp
@@ -60,7 +60,7 @@
 #include "global_properties.h"
 #include <algorithm>
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 using namespace MODEL_PARAMS;
 
diff --git a/src/fix_check_timestep_gran.h b/src/fix_check_timestep_gran.h
index deb64d0..8785f99 100644
--- a/src/fix_check_timestep_gran.h
+++ b/src/fix_check_timestep_gran.h
@@ -50,7 +50,7 @@ FixStyle(check/timestep/gran,FixCheckTimestepGran)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixCheckTimestepGran : public Fix {
  public:
diff --git a/src/fix_check_timestep_sph.cpp b/src/fix_check_timestep_sph.cpp
index 4afd902..81bf7ab 100644
--- a/src/fix_check_timestep_sph.cpp
+++ b/src/fix_check_timestep_sph.cpp
@@ -57,7 +57,7 @@
 #include "mpi_liggghts.h"
 #include "sph_kernels.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 #define BIG 1000000.
diff --git a/src/fix_check_timestep_sph.h b/src/fix_check_timestep_sph.h
index f3b870a..408ec76 100644
--- a/src/fix_check_timestep_sph.h
+++ b/src/fix_check_timestep_sph.h
@@ -49,7 +49,7 @@ FixStyle(check/timestep/sph,FixCheckTimestepSph)
 
 #include "fix_sph.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixCheckTimestepSph : public FixSph {
  public:
diff --git a/src/fix_contact_atom_counter_dummy.h b/src/fix_contact_atom_counter_dummy.h
index 11e9518..168958b 100644
--- a/src/fix_contact_atom_counter_dummy.h
+++ b/src/fix_contact_atom_counter_dummy.h
@@ -44,7 +44,7 @@
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixContactAtomCounter : public Fix {
 
diff --git a/src/fix_contact_atom_counter_wall_dummy.h b/src/fix_contact_atom_counter_wall_dummy.h
index 5c14d61..ff1e20b 100644
--- a/src/fix_contact_atom_counter_wall_dummy.h
+++ b/src/fix_contact_atom_counter_wall_dummy.h
@@ -44,7 +44,7 @@
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixContactAtomCounterWall : public Fix {
 
diff --git a/src/fix_contact_history.cpp b/src/fix_contact_history.cpp
index 00b23fb..1368ae3 100644
--- a/src/fix_contact_history.cpp
+++ b/src/fix_contact_history.cpp
@@ -66,7 +66,7 @@
 #include "error.h"
 #include <algorithm>
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_contact_history.h b/src/fix_contact_history.h
index 5dcaf4d..a56a4f7 100644
--- a/src/fix_contact_history.h
+++ b/src/fix_contact_history.h
@@ -62,7 +62,7 @@ FixStyle(contacthistory,FixContactHistory)
 #include "my_page.h"
 #include "vector_liggghts.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixContactHistory : public Fix {
   friend class Neighbor;
diff --git a/src/fix_contact_history_mesh.cpp b/src/fix_contact_history_mesh.cpp
index bd833ca..53e2819 100644
--- a/src/fix_contact_history_mesh.cpp
+++ b/src/fix_contact_history_mesh.cpp
@@ -60,7 +60,7 @@
 #include "omp.h"
 #endif
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_contact_history_mesh.h b/src/fix_contact_history_mesh.h
index e6816bb..97d061b 100644
--- a/src/fix_contact_history_mesh.h
+++ b/src/fix_contact_history_mesh.h
@@ -58,7 +58,7 @@ FixStyle(contacthistory/mesh,FixContactHistoryMesh)
 #include "error.h"
 #include "tri_mesh.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixContactHistoryMesh : public FixContactHistory {
   friend class Neighbor;
diff --git a/src/fix_contact_property_atom_dummy.h b/src/fix_contact_property_atom_dummy.h
index ebbe696..f2965c6 100644
--- a/src/fix_contact_property_atom_dummy.h
+++ b/src/fix_contact_property_atom_dummy.h
@@ -44,7 +44,7 @@
 
 #include "fix_contact_history.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixContactPropertyAtom : public FixContactHistory {
 
diff --git a/src/fix_contact_property_atom_wall_dummy.h b/src/fix_contact_property_atom_wall_dummy.h
index ef77f69..6fa18f2 100644
--- a/src/fix_contact_property_atom_wall_dummy.h
+++ b/src/fix_contact_property_atom_wall_dummy.h
@@ -43,7 +43,7 @@
 
 #include "fix_contact_property_atom.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixContactPropertyAtomWall : public FixContactPropertyAtom {
   friend class Neighbor;
diff --git a/src/fix_deform.cpp b/src/fix_deform.cpp
index 07d95b1..5610748 100644
--- a/src/fix_deform.cpp
+++ b/src/fix_deform.cpp
@@ -65,7 +65,7 @@
 #include "variable.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 using namespace MathConst;
 
diff --git a/src/fix_deform.h b/src/fix_deform.h
index e5a94a4..4c2b67f 100644
--- a/src/fix_deform.h
+++ b/src/fix_deform.h
@@ -54,7 +54,7 @@ FixStyle(deform,FixDeform)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixDeform : public Fix {
  public:
diff --git a/src/fix_deform_check.cpp b/src/fix_deform_check.cpp
index b0d6f84..0ae7223 100644
--- a/src/fix_deform_check.cpp
+++ b/src/fix_deform_check.cpp
@@ -62,7 +62,7 @@
 #include "variable.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 using namespace MathConst;
 
diff --git a/src/fix_deform_check.h b/src/fix_deform_check.h
index 1e81b5e..7de3d62 100644
--- a/src/fix_deform_check.h
+++ b/src/fix_deform_check.h
@@ -55,7 +55,7 @@ FixStyle(deform/check,FixDeformCheck)
 
 #include "fix_deform.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixDeformCheck : public FixDeform {
  public:
diff --git a/src/fix_diam_max.cpp b/src/fix_diam_max.cpp
index efa25ab..adeb576 100644
--- a/src/fix_diam_max.cpp
+++ b/src/fix_diam_max.cpp
@@ -44,7 +44,7 @@
 #include "math_extra_liggghts.h"
 #include "fix_particledistribution_discrete.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace MathExtraLiggghts;
 using namespace FixConst;
 
diff --git a/src/fix_diam_max.h b/src/fix_diam_max.h
index c717014..93ee3b1 100644
--- a/src/fix_diam_max.h
+++ b/src/fix_diam_max.h
@@ -51,7 +51,7 @@ FixStyle(diam/max,FixDiamMax)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixDiamMax : public Fix {
  public:
diff --git a/src/fix_drag.cpp b/src/fix_drag.cpp
index fc4210e..bf362a2 100644
--- a/src/fix_drag.cpp
+++ b/src/fix_drag.cpp
@@ -54,7 +54,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_drag.h b/src/fix_drag.h
index 261225d..9437246 100644
--- a/src/fix_drag.h
+++ b/src/fix_drag.h
@@ -54,7 +54,7 @@ FixStyle(drag,FixDrag)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixDrag : public Fix {
  public:
diff --git a/src/fix_dt_reset.cpp b/src/fix_dt_reset.cpp
index 6691e8e..f679fc1 100644
--- a/src/fix_dt_reset.cpp
+++ b/src/fix_dt_reset.cpp
@@ -61,7 +61,7 @@
 #include "comm.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 #define BIG 1.0e20
diff --git a/src/fix_dt_reset.h b/src/fix_dt_reset.h
index 0899df6..11435cf 100644
--- a/src/fix_dt_reset.h
+++ b/src/fix_dt_reset.h
@@ -54,7 +54,7 @@ FixStyle(dt/reset,FixDtReset)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixDtReset : public Fix {
  public:
diff --git a/src/fix_dummy2.h b/src/fix_dummy2.h
index 5d5e89d..a0c78b4 100644
--- a/src/fix_dummy2.h
+++ b/src/fix_dummy2.h
@@ -1,7 +1,7 @@
 #ifndef LMP_FIX_DUMMY2_H
 #define LMP_FIX_DUMMY2_H
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixContactPropertyAtom : public Fix {
 
diff --git a/src/fix_efield.cpp b/src/fix_efield.cpp
index f9e5de1..78bd10b 100644
--- a/src/fix_efield.cpp
+++ b/src/fix_efield.cpp
@@ -61,7 +61,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 enum{CONSTANT,EQUAL,ATOM};
diff --git a/src/fix_efield.h b/src/fix_efield.h
index a958c83..94bcdbe 100644
--- a/src/fix_efield.h
+++ b/src/fix_efield.h
@@ -54,7 +54,7 @@ FixStyle(efield,FixEfield)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixEfield : public Fix {
  public:
diff --git a/src/fix_enforce2d.cpp b/src/fix_enforce2d.cpp
index 1af9d07..eaa972f 100644
--- a/src/fix_enforce2d.cpp
+++ b/src/fix_enforce2d.cpp
@@ -51,7 +51,7 @@
 #include "respa.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_enforce2d.h b/src/fix_enforce2d.h
index 3487eb4..8d38e9e 100644
--- a/src/fix_enforce2d.h
+++ b/src/fix_enforce2d.h
@@ -54,7 +54,7 @@ FixStyle(enforce2d,FixEnforce2D)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixEnforce2D : public Fix {
  public:
diff --git a/src/fix_external.cpp b/src/fix_external.cpp
index d51b497..bbfc612 100644
--- a/src/fix_external.cpp
+++ b/src/fix_external.cpp
@@ -53,7 +53,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 enum{PF_CALLBACK,PF_ARRAY};
diff --git a/src/fix_external.h b/src/fix_external.h
index 0f3bba9..19b481b 100644
--- a/src/fix_external.h
+++ b/src/fix_external.h
@@ -54,7 +54,7 @@ FixStyle(external,FixExternal)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixExternal : public Fix {
  public:
diff --git a/src/fix_fiber_spring_simple.cpp b/src/fix_fiber_spring_simple.cpp
index 304f6dd..f188580 100644
--- a/src/fix_fiber_spring_simple.cpp
+++ b/src/fix_fiber_spring_simple.cpp
@@ -73,7 +73,7 @@
 #include "properties.h"
 #include "respa.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 #define SMALL 1.0e-10
diff --git a/src/fix_fiber_spring_simple.h b/src/fix_fiber_spring_simple.h
index 225b02e..1009b56 100644
--- a/src/fix_fiber_spring_simple.h
+++ b/src/fix_fiber_spring_simple.h
@@ -59,7 +59,7 @@ FixStyle(fiber/spring/simple,FixFiberSpringSimple)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixFiberSpringSimple : public Fix {
  public:
diff --git a/src/fix_freeze.cpp b/src/fix_freeze.cpp
index d6e021e..436c447 100644
--- a/src/fix_freeze.cpp
+++ b/src/fix_freeze.cpp
@@ -53,7 +53,7 @@
 #include "respa.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_freeze.h b/src/fix_freeze.h
index f0825da..97b3b4b 100644
--- a/src/fix_freeze.h
+++ b/src/fix_freeze.h
@@ -54,7 +54,7 @@ FixStyle(freeze,FixFreeze)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixFreeze : public Fix {
  public:
diff --git a/src/fix_gravity.cpp b/src/fix_gravity.cpp
index 2bdcfb7..f20b187 100644
--- a/src/fix_gravity.cpp
+++ b/src/fix_gravity.cpp
@@ -66,7 +66,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 using namespace MathConst;
 
diff --git a/src/fix_gravity.h b/src/fix_gravity.h
index 8c09b18..8df4b34 100644
--- a/src/fix_gravity.h
+++ b/src/fix_gravity.h
@@ -60,7 +60,7 @@ FixStyle(gravity,FixGravity)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixGravity : public Fix {
   friend class FixPour;
diff --git a/src/fix_heat_gran.cpp b/src/fix_heat_gran.cpp
index b73de97..7d42c3b 100644
--- a/src/fix_heat_gran.cpp
+++ b/src/fix_heat_gran.cpp
@@ -51,7 +51,7 @@
 #include "pair_gran.h"
 #include "stdlib.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_heat_gran.h b/src/fix_heat_gran.h
index d6dc84a..56b211f 100644
--- a/src/fix_heat_gran.h
+++ b/src/fix_heat_gran.h
@@ -46,7 +46,7 @@
 
 static const double SMALL_FIX_HEAT_GRAN = 1.e-6;
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
   class FixHeatGran : public Fix {
   public:
diff --git a/src/fix_heat_gran_conduction.cpp b/src/fix_heat_gran_conduction.cpp
index e7eac80..b5280d0 100644
--- a/src/fix_heat_gran_conduction.cpp
+++ b/src/fix_heat_gran_conduction.cpp
@@ -53,7 +53,7 @@
 #include "neigh_list.h"
 #include "pair_gran.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 // modes for conduction contact area calaculation
diff --git a/src/fix_heat_gran_conduction.h b/src/fix_heat_gran_conduction.h
index 866187b..a69070d 100644
--- a/src/fix_heat_gran_conduction.h
+++ b/src/fix_heat_gran_conduction.h
@@ -51,7 +51,7 @@ FixStyle(heat/gran,FixHeatGranCond)
 
 #include "fix_heat_gran.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
   class FixHeatGranCond : public FixHeatGran {
   public:
diff --git a/src/fix_insert.cpp b/src/fix_insert.cpp
index 6051ca1..0d67f68 100644
--- a/src/fix_insert.cpp
+++ b/src/fix_insert.cpp
@@ -65,7 +65,7 @@
 #include "region_neighbor_list.h"
 #include "superquadric_flag.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 #define EPSILON 0.001
diff --git a/src/fix_insert.h b/src/fix_insert.h
index 3929265..877dfed 100644
--- a/src/fix_insert.h
+++ b/src/fix_insert.h
@@ -50,7 +50,7 @@
 #include "bounding_box.h"
 #include "region_neighbor_list.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixInsert : public Fix {
  public:
diff --git a/src/fix_insert_pack.cpp b/src/fix_insert_pack.cpp
index b5972a3..f8f1b29 100644
--- a/src/fix_insert_pack.cpp
+++ b/src/fix_insert_pack.cpp
@@ -65,7 +65,7 @@
 
 #define SEED_OFFSET 12
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_insert_pack.h b/src/fix_insert_pack.h
index 3dfb7e4..325da3c 100644
--- a/src/fix_insert_pack.h
+++ b/src/fix_insert_pack.h
@@ -51,7 +51,7 @@ FixStyle(insert/pack,FixInsertPack)
 
 #include "fix_insert.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixInsertPack : public FixInsert {
  public:
diff --git a/src/fix_insert_rate_region.cpp b/src/fix_insert_rate_region.cpp
index 9febc22..6bc9e11 100644
--- a/src/fix_insert_rate_region.cpp
+++ b/src/fix_insert_rate_region.cpp
@@ -61,7 +61,7 @@
 
 #define SEED_OFFSET 12
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_insert_rate_region.h b/src/fix_insert_rate_region.h
index c76a609..ffcb978 100644
--- a/src/fix_insert_rate_region.h
+++ b/src/fix_insert_rate_region.h
@@ -50,7 +50,7 @@ FixStyle(insert/rate/region,FixInsertRateRegion)
 
 #include "fix_insert_pack.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixInsertRateRegion : public FixInsertPack  {
  public:
diff --git a/src/fix_insert_stream.cpp b/src/fix_insert_stream.cpp
index 53cb54c..d0b3733 100644
--- a/src/fix_insert_stream.cpp
+++ b/src/fix_insert_stream.cpp
@@ -66,7 +66,7 @@
 
 enum{FACE_NONE,FACE_MESH,FACE_CIRCLE};
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 #define FIX_INSERT_NTRY_SUBBOX 500
diff --git a/src/fix_insert_stream.h b/src/fix_insert_stream.h
index 0adb361..7f646dc 100644
--- a/src/fix_insert_stream.h
+++ b/src/fix_insert_stream.h
@@ -53,7 +53,7 @@ FixStyle(insert/stream,FixInsertStream)
 #include "fix_insert.h"
 #include "vector_liggghts.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixInsertStream : public FixInsert {
 
diff --git a/src/fix_lb_coupling_onetoone.cpp b/src/fix_lb_coupling_onetoone.cpp
index 614a48e..8776123 100644
--- a/src/fix_lb_coupling_onetoone.cpp
+++ b/src/fix_lb_coupling_onetoone.cpp
@@ -50,7 +50,7 @@
 #include <iomanip>
 #include <iostream>
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
   FixLbCouplingOnetoone::FixLbCouplingOnetoone(LAMMPS *lmp, int narg, char **arg)
     : Fix(lmp,narg,arg), fix_dragforce_(0), fix_hdtorque_(0)
   {
@@ -169,4 +169,4 @@ namespace LAMMPS_NS {
     fix_hdtorque_->do_reverse_comm();
   }
 
-}; /* LAMMPS_NS */
+}; /* LIGGGHTS_NS */
diff --git a/src/fix_lb_coupling_onetoone.h b/src/fix_lb_coupling_onetoone.h
index b51c38b..6c40ce5 100644
--- a/src/fix_lb_coupling_onetoone.h
+++ b/src/fix_lb_coupling_onetoone.h
@@ -48,7 +48,7 @@ FixStyle(couple/lb/onetoone,FixLbCouplingOnetoone)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
   class FixLbCouplingOnetoone : public Fix {
   public:
     FixLbCouplingOnetoone(class LAMMPS * lmp, int narg, char ** arg);
@@ -70,7 +70,7 @@ namespace LAMMPS_NS {
     class FixPropertyAtom* fix_hdtorque_; // hdtorque = hydrodynamic torque
   }; /* class FixLbCouplingOnetoone */
 
-}; /* LAMMPS_NS */
+}; /* LIGGGHTS_NS */
 
 #endif /* FIX_LB_COUPLING_ONETOONE */
 #endif /* FIX_CLASS */
diff --git a/src/fix_lineforce.cpp b/src/fix_lineforce.cpp
index 12391cc..33f64cf 100644
--- a/src/fix_lineforce.cpp
+++ b/src/fix_lineforce.cpp
@@ -53,7 +53,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_lineforce.h b/src/fix_lineforce.h
index 986c23d..27f1624 100644
--- a/src/fix_lineforce.h
+++ b/src/fix_lineforce.h
@@ -54,7 +54,7 @@ FixStyle(lineforce,FixLineForce)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixLineForce : public Fix {
  public:
diff --git a/src/fix_massflow_mesh.cpp b/src/fix_massflow_mesh.cpp
index 68ade60..8251d91 100644
--- a/src/fix_massflow_mesh.cpp
+++ b/src/fix_massflow_mesh.cpp
@@ -60,7 +60,7 @@
 
 #include <algorithm>
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace MathExtraLiggghts;
 using namespace FixConst;
 
diff --git a/src/fix_massflow_mesh.h b/src/fix_massflow_mesh.h
index 56049d1..b0653bf 100644
--- a/src/fix_massflow_mesh.h
+++ b/src/fix_massflow_mesh.h
@@ -53,7 +53,7 @@ FixStyle(massflow/mesh,FixMassflowMesh)
 
 using namespace std;
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixMassflowMesh : public Fix {
 
diff --git a/src/fix_mesh.cpp b/src/fix_mesh.cpp
index 554e945..a1f8a3b 100644
--- a/src/fix_mesh.cpp
+++ b/src/fix_mesh.cpp
@@ -63,7 +63,7 @@
 #include "comm.h"
 #include "math_extra.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 #define EPSILON_V 0.00001
diff --git a/src/fix_mesh.h b/src/fix_mesh.h
index 5c8419f..22a10b0 100644
--- a/src/fix_mesh.h
+++ b/src/fix_mesh.h
@@ -50,7 +50,7 @@
 
 #include "fix_base_liggghts.h"
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
   class FixMesh : public FixBaseLiggghts
   {
@@ -144,7 +144,7 @@ namespace LAMMPS_NS
         class FixPropertyGlobal *fix_capacity_;
   };
 
-} /* namespace LAMMPS_NS */
+} /* namespace LIGGGHTS_NS */
 
 #endif
 #endif
diff --git a/src/fix_mesh_surface.cpp b/src/fix_mesh_surface.cpp
index ba09ef1..d3c54ce 100644
--- a/src/fix_mesh_surface.cpp
+++ b/src/fix_mesh_surface.cpp
@@ -64,7 +64,7 @@
 #include "comm.h"
 #include "math_extra.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 #define EPSILON_V 0.00001
diff --git a/src/fix_mesh_surface.h b/src/fix_mesh_surface.h
index b4609ed..49908b5 100644
--- a/src/fix_mesh_surface.h
+++ b/src/fix_mesh_surface.h
@@ -62,7 +62,7 @@ FixStyle(mesh/surface/planar,FixMeshSurface)
 #include "fix_neighlist_mesh.h"
 #include "custom_value_tracker.h"
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
   class FixMeshSurface : public FixMesh
   {
@@ -156,7 +156,7 @@ namespace LAMMPS_NS
         bool curvature_tolerant_;
   };
 
-} /* namespace LAMMPS_NS */
+} /* namespace LIGGGHTS_NS */
 
 #endif /* LMP_FIX_MESH_H */
 #endif /* FIX_CLASS */
diff --git a/src/fix_mesh_surface_stress.cpp b/src/fix_mesh_surface_stress.cpp
index edb65e8..2c6524f 100644
--- a/src/fix_mesh_surface_stress.cpp
+++ b/src/fix_mesh_surface_stress.cpp
@@ -55,7 +55,7 @@
 #include "fix_property_global.h"
 #include "fix_gravity.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 #define EPSILON 0.0001
diff --git a/src/fix_mesh_surface_stress.h b/src/fix_mesh_surface_stress.h
index 9078be0..0e9febe 100644
--- a/src/fix_mesh_surface_stress.h
+++ b/src/fix_mesh_surface_stress.h
@@ -50,7 +50,7 @@ FixStyle(mesh/surface/stress,FixMeshSurfaceStress)
 
 #include "fix_mesh_surface.h"
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
   class FixMeshSurfaceStress : public FixMeshSurface
   {
@@ -162,7 +162,7 @@ namespace LAMMPS_NS
         ScalarContainer<double> *wear_step_;
   };
 
-} /* namespace LAMMPS_NS */
+} /* namespace LIGGGHTS_NS */
 
 #endif
 #endif
diff --git a/src/fix_mesh_surface_stress_servo.cpp b/src/fix_mesh_surface_stress_servo.cpp
index 980f607..65026e8 100644
--- a/src/fix_mesh_surface_stress_servo.cpp
+++ b/src/fix_mesh_surface_stress_servo.cpp
@@ -58,7 +58,7 @@
 #include "fix_property_global.h"
 #include "modified_andrew.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 using MODIFIED_ANDREW_AUX::Circle;
 
diff --git a/src/fix_mesh_surface_stress_servo.h b/src/fix_mesh_surface_stress_servo.h
index 78d57c9..486e72a 100644
--- a/src/fix_mesh_surface_stress_servo.h
+++ b/src/fix_mesh_surface_stress_servo.h
@@ -57,7 +57,7 @@ FixStyle(mesh/surface/stress/servo,FixMeshSurfaceStressServo)
 #include "math.h"
 #include "fix_mesh_surface_stress.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
   class FixMeshSurfaceStressServo : public FixMeshSurfaceStress {
 
diff --git a/src/fix_minimize.cpp b/src/fix_minimize.cpp
index 0b5fc6b..fd063c3 100644
--- a/src/fix_minimize.cpp
+++ b/src/fix_minimize.cpp
@@ -50,7 +50,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_minimize.h b/src/fix_minimize.h
index de51f3e..2677136 100644
--- a/src/fix_minimize.h
+++ b/src/fix_minimize.h
@@ -54,7 +54,7 @@ FixStyle(MINIMIZE,FixMinimize)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixMinimize : public Fix {
   friend class MinLineSearch;
diff --git a/src/fix_momentum.cpp b/src/fix_momentum.cpp
index f5a4758..b1a613e 100644
--- a/src/fix_momentum.cpp
+++ b/src/fix_momentum.cpp
@@ -52,7 +52,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ----------------------------------------------------------------------
diff --git a/src/fix_momentum.h b/src/fix_momentum.h
index 8e6d68c..fec5134 100644
--- a/src/fix_momentum.h
+++ b/src/fix_momentum.h
@@ -54,7 +54,7 @@ FixStyle(momentum,FixMomentum)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixMomentum : public Fix {
  public:
diff --git a/src/fix_move.cpp b/src/fix_move.cpp
index 4f34008..9cedb0f 100644
--- a/src/fix_move.cpp
+++ b/src/fix_move.cpp
@@ -62,7 +62,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 using namespace MathConst;
 
diff --git a/src/fix_move.h b/src/fix_move.h
index 137bf38..71e7f56 100644
--- a/src/fix_move.h
+++ b/src/fix_move.h
@@ -55,7 +55,7 @@ FixStyle(move,FixMove)
 #include "stdio.h"
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixMove : public Fix {
  public:
diff --git a/src/fix_move_mesh.cpp b/src/fix_move_mesh.cpp
index 518bad6..a36e592 100644
--- a/src/fix_move_mesh.cpp
+++ b/src/fix_move_mesh.cpp
@@ -52,7 +52,7 @@
 #include "mesh_mover.h"
 #include "container.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_move_mesh.h b/src/fix_move_mesh.h
index c194496..88f95c6 100644
--- a/src/fix_move_mesh.h
+++ b/src/fix_move_mesh.h
@@ -54,10 +54,10 @@ FixStyle(move/mesh/gran,FixMoveMesh) // for backward compatibility
 #include "fix.h"
 #include "container.h"
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
 
-  class FixMoveMesh : public LAMMPS_NS::Fix
+  class FixMoveMesh : public LIGGGHTS_NS::Fix
   {
       public:
 
@@ -99,6 +99,6 @@ namespace LAMMPS_NS
 
         double reference_point_[3];
   };
-} /* namespace LAMMPS_NS */
+} /* namespace LIGGGHTS_NS */
 #endif
 #endif
diff --git a/src/fix_multisphere.cpp b/src/fix_multisphere.cpp
index c196e29..e31a920 100644
--- a/src/fix_multisphere.cpp
+++ b/src/fix_multisphere.cpp
@@ -67,7 +67,7 @@
 #include "math_extra_liggghts.h"
 #include "math_const.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 using namespace MathConst;
 
diff --git a/src/fix_multisphere.h b/src/fix_multisphere.h
index d374957..44104d3 100644
--- a/src/fix_multisphere.h
+++ b/src/fix_multisphere.h
@@ -59,7 +59,7 @@ FixStyle(multisphere/nointegration,FixMultisphere)
 
 using namespace std;
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 enum
 {
diff --git a/src/fix_neighlist_mesh.cpp b/src/fix_neighlist_mesh.cpp
index 52490f3..a2df515 100644
--- a/src/fix_neighlist_mesh.cpp
+++ b/src/fix_neighlist_mesh.cpp
@@ -57,7 +57,7 @@
 #include <algorithm>
 #include "atom_vec_ellipsoid.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 #define SMALL_DELTA skin/(70.*M_PI)
diff --git a/src/fix_neighlist_mesh.h b/src/fix_neighlist_mesh.h
index 5f17d52..d3a92ee 100644
--- a/src/fix_neighlist_mesh.h
+++ b/src/fix_neighlist_mesh.h
@@ -57,7 +57,7 @@ FixStyle(neighlist/mesh,FixNeighlistMesh)
 #include <vector>
 #include <algorithm>
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
 
 struct BinBoundary {
@@ -165,7 +165,7 @@ private:
     void checkBin(AtomVecEllipsoid::Bonus *bonus, std::vector<int>& neighbors, int& nchecked, double contactDistanceFactor, int *mask, int nlocal, int iBin, int iTri, bool haveNonSpherical, int *ellipsoid, double *shape);
 };
 
-} /* namespace LAMMPS_NS */
+} /* namespace LIGGGHTS_NS */
 
 #endif /* FIX_MESH_NEIGHLIST_H_ */
 #endif /* FIX_CLASS */
diff --git a/src/fix_nve.cpp b/src/fix_nve.cpp
index 44b6e0a..c688dca 100644
--- a/src/fix_nve.cpp
+++ b/src/fix_nve.cpp
@@ -52,7 +52,7 @@
 #include "respa.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_nve.h b/src/fix_nve.h
index b739d25..2e114fe 100644
--- a/src/fix_nve.h
+++ b/src/fix_nve.h
@@ -54,7 +54,7 @@ FixStyle(nve,FixNVE)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixNVE : public Fix {
  public:
diff --git a/src/fix_nve_limit.cpp b/src/fix_nve_limit.cpp
index 4fee76e..45d7751 100644
--- a/src/fix_nve_limit.cpp
+++ b/src/fix_nve_limit.cpp
@@ -52,7 +52,7 @@
 #include "comm.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_nve_limit.h b/src/fix_nve_limit.h
index 74cfe3a..f69b9a9 100644
--- a/src/fix_nve_limit.h
+++ b/src/fix_nve_limit.h
@@ -54,7 +54,7 @@ FixStyle(nve/limit,FixNVELimit)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixNVELimit : public Fix {
  public:
diff --git a/src/fix_nve_noforce.cpp b/src/fix_nve_noforce.cpp
index 1ed7bd4..070123a 100644
--- a/src/fix_nve_noforce.cpp
+++ b/src/fix_nve_noforce.cpp
@@ -51,7 +51,7 @@
 #include "respa.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_nve_noforce.h b/src/fix_nve_noforce.h
index 773cfc6..ce04c5d 100644
--- a/src/fix_nve_noforce.h
+++ b/src/fix_nve_noforce.h
@@ -54,7 +54,7 @@ FixStyle(nve/noforce,FixNVENoforce)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixNVENoforce : public Fix {
  public:
diff --git a/src/fix_nve_sph.cpp b/src/fix_nve_sph.cpp
index 976400e..2ce7636 100644
--- a/src/fix_nve_sph.cpp
+++ b/src/fix_nve_sph.cpp
@@ -48,7 +48,7 @@
 #include "respa.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_nve_sph.h b/src/fix_nve_sph.h
index 1cdd0b4..a09157f 100644
--- a/src/fix_nve_sph.h
+++ b/src/fix_nve_sph.h
@@ -50,7 +50,7 @@ FixStyle(nve/sph,FixNVESph)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixNVESph : public Fix {
  public:
diff --git a/src/fix_nve_sph_stationary.cpp b/src/fix_nve_sph_stationary.cpp
index 6a18531..e9c91b0 100644
--- a/src/fix_nve_sph_stationary.cpp
+++ b/src/fix_nve_sph_stationary.cpp
@@ -46,7 +46,7 @@
 #include "update.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_nve_sph_stationary.h b/src/fix_nve_sph_stationary.h
index 5be9458..00bc6c6 100644
--- a/src/fix_nve_sph_stationary.h
+++ b/src/fix_nve_sph_stationary.h
@@ -49,7 +49,7 @@ FixStyle(nve/sph/stationary,FixNVESphStationary)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixNVESphStationary : public Fix {
  public:
diff --git a/src/fix_nve_sphere.cpp b/src/fix_nve_sphere.cpp
index 1042757..eae5a28 100644
--- a/src/fix_nve_sphere.cpp
+++ b/src/fix_nve_sphere.cpp
@@ -61,7 +61,7 @@
 #include "error.h"
 #include "domain.h" 
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 #define INERTIA 0.4          // moment of inertia prefactor for sphere
diff --git a/src/fix_nve_sphere.h b/src/fix_nve_sphere.h
index eb05e35..081499b 100644
--- a/src/fix_nve_sphere.h
+++ b/src/fix_nve_sphere.h
@@ -60,7 +60,7 @@ FixStyle(nve/sphere,FixNVESphere)
 
 #include "fix_nve.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixNVESphere : public FixNVE {
  public:
diff --git a/src/fix_particledistribution_discrete.cpp b/src/fix_particledistribution_discrete.cpp
index 8688df2..30ea673 100644
--- a/src/fix_particledistribution_discrete.cpp
+++ b/src/fix_particledistribution_discrete.cpp
@@ -59,7 +59,7 @@
 #include "particleToInsert.h"
 #include "comm.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 #define LMP_DEBUGMODE_SPHERE false
diff --git a/src/fix_particledistribution_discrete.h b/src/fix_particledistribution_discrete.h
index 784edb5..438b23c 100644
--- a/src/fix_particledistribution_discrete.h
+++ b/src/fix_particledistribution_discrete.h
@@ -55,7 +55,7 @@ FixStyle(particledistribution/discrete/massbased,FixParticledistributionDiscrete
 
 enum{RAN_STYLE_CONSTANT_FPD,RAN_STYLE_UNIFORM_FPD,RAN_STYLE_GAUSSIAN_FPD};
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixParticledistributionDiscrete : public Fix {
  public:
diff --git a/src/fix_planeforce.cpp b/src/fix_planeforce.cpp
index 5ed8de6..d1f25e5 100644
--- a/src/fix_planeforce.cpp
+++ b/src/fix_planeforce.cpp
@@ -53,7 +53,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_planeforce.h b/src/fix_planeforce.h
index 4b26b9b..87f4f1e 100644
--- a/src/fix_planeforce.h
+++ b/src/fix_planeforce.h
@@ -54,7 +54,7 @@ FixStyle(planeforce,FixPlaneForce)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixPlaneForce : public Fix {
  public:
diff --git a/src/fix_print.cpp b/src/fix_print.cpp
index e36f2ff..4b540c8 100644
--- a/src/fix_print.cpp
+++ b/src/fix_print.cpp
@@ -54,7 +54,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_print.h b/src/fix_print.h
index 3948c92..6f06179 100644
--- a/src/fix_print.h
+++ b/src/fix_print.h
@@ -55,7 +55,7 @@ FixStyle(print,FixPrint)
 #include "stdio.h"
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixPrint : public Fix {
  public:
diff --git a/src/fix_property_atom.cpp b/src/fix_property_atom.cpp
index 19446d2..a0b6975 100644
--- a/src/fix_property_atom.cpp
+++ b/src/fix_property_atom.cpp
@@ -59,7 +59,7 @@
 
 #include "mpi_liggghts.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 #define EPSILON 0.001
diff --git a/src/fix_property_atom.h b/src/fix_property_atom.h
index 666baa8..73eac60 100644
--- a/src/fix_property_atom.h
+++ b/src/fix_property_atom.h
@@ -51,7 +51,7 @@ FixStyle(property/atom,FixPropertyAtom)
 #include "fix.h"
 #include "input.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 enum
 {
diff --git a/src/fix_property_atom_timetracer.cpp b/src/fix_property_atom_timetracer.cpp
index d384f84..b529f51 100644
--- a/src/fix_property_atom_timetracer.cpp
+++ b/src/fix_property_atom_timetracer.cpp
@@ -54,7 +54,7 @@
 #include "math_extra_liggghts.h"
 #include "fix_property_atom_timetracer.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_property_atom_timetracer.h b/src/fix_property_atom_timetracer.h
index 3f90086..5e16fae 100644
--- a/src/fix_property_atom_timetracer.h
+++ b/src/fix_property_atom_timetracer.h
@@ -50,7 +50,7 @@ FixStyle(property/atom/timetracer,FixPropertyAtomTimeTracer)
 #include "fix_property_atom.h"
 #include <vector>
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixPropertyAtomTimeTracer : public FixPropertyAtom {
 
diff --git a/src/fix_property_atom_tracer.cpp b/src/fix_property_atom_tracer.cpp
index 1f6bbb9..d66b84a 100644
--- a/src/fix_property_atom_tracer.cpp
+++ b/src/fix_property_atom_tracer.cpp
@@ -55,7 +55,7 @@
 #include "math_extra_liggghts.h"
 #include "fix_property_atom_tracer.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_property_atom_tracer.h b/src/fix_property_atom_tracer.h
index 2d2b9ff..11fff21 100644
--- a/src/fix_property_atom_tracer.h
+++ b/src/fix_property_atom_tracer.h
@@ -49,7 +49,7 @@ FixStyle(property/atom/tracer,FixPropertyAtomTracer)
 
 #include "fix_property_atom.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 enum
 {
diff --git a/src/fix_property_atom_tracer_stream.cpp b/src/fix_property_atom_tracer_stream.cpp
index bc14fb4..1e8bfcd 100644
--- a/src/fix_property_atom_tracer_stream.cpp
+++ b/src/fix_property_atom_tracer_stream.cpp
@@ -54,7 +54,7 @@
 
 #include <algorithm>
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_property_atom_tracer_stream.h b/src/fix_property_atom_tracer_stream.h
index faa36f6..210c3c0 100644
--- a/src/fix_property_atom_tracer_stream.h
+++ b/src/fix_property_atom_tracer_stream.h
@@ -64,7 +64,7 @@ namespace FixPropertyAtomTracerStreamAux {
 using namespace std;
 using FixPropertyAtomTracerStreamAux::Releasedata;
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixPropertyAtomTracerStream : public FixPropertyAtomTracer {
 
diff --git a/src/fix_property_global.cpp b/src/fix_property_global.cpp
index a9daf7e..a20ff9c 100644
--- a/src/fix_property_global.cpp
+++ b/src/fix_property_global.cpp
@@ -54,7 +54,7 @@
 #include "neighbor.h"
 #include "fix_property_global.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 #define EPSILON 0.001
diff --git a/src/fix_property_global.h b/src/fix_property_global.h
index 8f59090..6c22dc2 100644
--- a/src/fix_property_global.h
+++ b/src/fix_property_global.h
@@ -52,7 +52,7 @@ FixStyle(property/atomtypepair,FixPropertyGlobal)
 #include "fix.h"
 #include "input.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 enum
 {
diff --git a/src/fix_read_restart.cpp b/src/fix_read_restart.cpp
index 7d56cd3..df933cf 100644
--- a/src/fix_read_restart.cpp
+++ b/src/fix_read_restart.cpp
@@ -49,7 +49,7 @@
 #include "memory.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_read_restart.h b/src/fix_read_restart.h
index aa97fe4..ab360e4 100644
--- a/src/fix_read_restart.h
+++ b/src/fix_read_restart.h
@@ -54,7 +54,7 @@ FixStyle(READ_RESTART,FixReadRestart)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixReadRestart : public Fix {
  public:
diff --git a/src/fix_region_variable.cpp b/src/fix_region_variable.cpp
index 59fa0b9..5047da2 100644
--- a/src/fix_region_variable.cpp
+++ b/src/fix_region_variable.cpp
@@ -52,7 +52,7 @@
 #include "domain.h"
 #include "fix_region_variable.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_region_variable.h b/src/fix_region_variable.h
index 7c39b8f..14244c8 100644
--- a/src/fix_region_variable.h
+++ b/src/fix_region_variable.h
@@ -50,7 +50,7 @@ FixStyle(region/variable,FixRegionVariable)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixRegionVariable : public Fix {
  public:
diff --git a/src/fix_remove.h b/src/fix_remove.h
index 8e9cc83..8dff33a 100644
--- a/src/fix_remove.h
+++ b/src/fix_remove.h
@@ -1 +1 @@
-namespace LAMMPS_NS {class FixRemove { public: void delete_bodies(){} };}
+namespace LIGGGHTS_NS {class FixRemove { public: void delete_bodies(){} };}
diff --git a/src/fix_respa.cpp b/src/fix_respa.cpp
index 627c79f..d9037e5 100644
--- a/src/fix_respa.cpp
+++ b/src/fix_respa.cpp
@@ -50,7 +50,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_respa.h b/src/fix_respa.h
index 17d8098..ec8f098 100644
--- a/src/fix_respa.h
+++ b/src/fix_respa.h
@@ -54,7 +54,7 @@ FixStyle(RESPA,FixRespa)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixRespa : public Fix {
   friend class Respa;
diff --git a/src/fix_rigid.cpp b/src/fix_rigid.cpp
index 579ae07..ea61b40 100644
--- a/src/fix_rigid.cpp
+++ b/src/fix_rigid.cpp
@@ -71,7 +71,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 using namespace MathConst;
 
diff --git a/src/fix_rigid.h b/src/fix_rigid.h
index bbca968..74528f1 100644
--- a/src/fix_rigid.h
+++ b/src/fix_rigid.h
@@ -59,7 +59,7 @@ FixStyle(rigid,FixRigid)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixRigid : public Fix {
  friend class FixTemplateMultisphere;
diff --git a/src/fix_scalar_transport_equation.cpp b/src/fix_scalar_transport_equation.cpp
index 99ad710..fcb9d5e 100644
--- a/src/fix_scalar_transport_equation.cpp
+++ b/src/fix_scalar_transport_equation.cpp
@@ -66,7 +66,7 @@
 #include "pair_gran.h"
 #include "mpi_liggghts.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 #define SMALL 1e-8
diff --git a/src/fix_scalar_transport_equation.h b/src/fix_scalar_transport_equation.h
index c859706..4e5835a 100644
--- a/src/fix_scalar_transport_equation.h
+++ b/src/fix_scalar_transport_equation.h
@@ -54,7 +54,7 @@ FixStyle(transportequation/scalar,FixScalarTransportEquation)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixScalarTransportEquation : public Fix {
  public:
diff --git a/src/fix_setforce.cpp b/src/fix_setforce.cpp
index 8bfb896..65c991f 100644
--- a/src/fix_setforce.cpp
+++ b/src/fix_setforce.cpp
@@ -58,7 +58,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 enum{NONE,CONSTANT,EQUAL,ATOM};
diff --git a/src/fix_setforce.h b/src/fix_setforce.h
index 30d6806..bdf064d 100644
--- a/src/fix_setforce.h
+++ b/src/fix_setforce.h
@@ -54,7 +54,7 @@ FixStyle(setforce,FixSetForce)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixSetForce : public Fix {
  public:
diff --git a/src/fix_sph.cpp b/src/fix_sph.cpp
index 6f202d9..b25f9e9 100644
--- a/src/fix_sph.cpp
+++ b/src/fix_sph.cpp
@@ -59,7 +59,7 @@
 #include "fix_property_atom.h"
 #include "fix_property_global.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_sph.h b/src/fix_sph.h
index 74bd1b0..ffb6ad1 100644
--- a/src/fix_sph.h
+++ b/src/fix_sph.h
@@ -42,7 +42,7 @@
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixSph : public Fix {
  public:
diff --git a/src/fix_sph_density_continuity.cpp b/src/fix_sph_density_continuity.cpp
index 2e7f6a4..a382699 100644
--- a/src/fix_sph_density_continuity.cpp
+++ b/src/fix_sph_density_continuity.cpp
@@ -56,7 +56,7 @@
 #include "fix_property_atom.h"
 #include "timer.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_sph_density_continuity.h b/src/fix_sph_density_continuity.h
index c68299e..ca0b647 100644
--- a/src/fix_sph_density_continuity.h
+++ b/src/fix_sph_density_continuity.h
@@ -48,7 +48,7 @@ FixStyle(sph/density/continuity,FixSphDensityContinuity)
 
 #include "fix_sph.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixSphDensityContinuity : public FixSph {
  public:
diff --git a/src/fix_sph_density_corr.cpp b/src/fix_sph_density_corr.cpp
index 83d47e3..cb00873 100644
--- a/src/fix_sph_density_corr.cpp
+++ b/src/fix_sph_density_corr.cpp
@@ -57,7 +57,7 @@
 #include "fix_property_atom.h"
 #include "timer.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_sph_density_corr.h b/src/fix_sph_density_corr.h
index 72b1868..2ab053b 100644
--- a/src/fix_sph_density_corr.h
+++ b/src/fix_sph_density_corr.h
@@ -48,7 +48,7 @@ FixStyle(sph/density/corr,FixSphDensityCorr)
 
 #include "fix_sph.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
   enum {CORR_SHEPARD,CORR_MLS};
 
diff --git a/src/fix_sph_density_summation.cpp b/src/fix_sph_density_summation.cpp
index 7b9aa54..99783e9 100644
--- a/src/fix_sph_density_summation.cpp
+++ b/src/fix_sph_density_summation.cpp
@@ -59,7 +59,7 @@
 #include "fix_property_atom.h"
 #include "timer.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_sph_density_summation.h b/src/fix_sph_density_summation.h
index a07096c..ebab9e1 100644
--- a/src/fix_sph_density_summation.h
+++ b/src/fix_sph_density_summation.h
@@ -49,7 +49,7 @@ FixStyle(sph/density/summation,FixSPHDensitySum)
 
 #include "fix_sph.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixSPHDensitySum : public FixSph {
  public:
diff --git a/src/fix_sph_pressure.cpp b/src/fix_sph_pressure.cpp
index a2acef5..09175a5 100644
--- a/src/fix_sph_pressure.cpp
+++ b/src/fix_sph_pressure.cpp
@@ -59,7 +59,7 @@
 #include "error.h"
 #include "timer.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_sph_pressure.h b/src/fix_sph_pressure.h
index e320032..a7663f4 100644
--- a/src/fix_sph_pressure.h
+++ b/src/fix_sph_pressure.h
@@ -51,7 +51,7 @@ FixStyle(sph/pressure,FixSPHPressure)
 
 #include "fix_sph.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
   enum {PRESSURESTYLE_ABSOLUT,PRESSURESTYLE_TAIT,PRESSURESTYLE_RELATIV};
 
diff --git a/src/fix_spring.cpp b/src/fix_spring.cpp
index d8e10ee..00c7719 100644
--- a/src/fix_spring.cpp
+++ b/src/fix_spring.cpp
@@ -59,7 +59,7 @@
 #include "force.h"
 #include "group.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 #define SMALL 1.0e-10
diff --git a/src/fix_spring.h b/src/fix_spring.h
index e04d32b..c547b55 100644
--- a/src/fix_spring.h
+++ b/src/fix_spring.h
@@ -54,7 +54,7 @@ FixStyle(spring,FixSpring)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixSpring : public Fix {
  public:
diff --git a/src/fix_spring_rg.cpp b/src/fix_spring_rg.cpp
index 35f9fd7..b468429 100644
--- a/src/fix_spring_rg.cpp
+++ b/src/fix_spring_rg.cpp
@@ -60,7 +60,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_spring_rg.h b/src/fix_spring_rg.h
index c631580..7884c08 100644
--- a/src/fix_spring_rg.h
+++ b/src/fix_spring_rg.h
@@ -54,7 +54,7 @@ FixStyle(spring/rg,FixSpringRG)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixSpringRG : public Fix {
  public:
diff --git a/src/fix_spring_self.cpp b/src/fix_spring_self.cpp
index f28e044..c9b857b 100644
--- a/src/fix_spring_self.cpp
+++ b/src/fix_spring_self.cpp
@@ -58,7 +58,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_spring_self.h b/src/fix_spring_self.h
index 98188f0..7f33284 100644
--- a/src/fix_spring_self.h
+++ b/src/fix_spring_self.h
@@ -54,7 +54,7 @@ FixStyle(spring/self,FixSpringSelf)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixSpringSelf : public Fix {
  public:
diff --git a/src/fix_store.cpp b/src/fix_store.cpp
index 9996399..d5592de 100644
--- a/src/fix_store.cpp
+++ b/src/fix_store.cpp
@@ -51,7 +51,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_store.h b/src/fix_store.h
index cb5614f..a61bbbd 100644
--- a/src/fix_store.h
+++ b/src/fix_store.h
@@ -54,7 +54,7 @@ FixStyle(STORE,FixStore)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixStore : public Fix {
  public:
diff --git a/src/fix_store_force.cpp b/src/fix_store_force.cpp
index 18640bf..b1a68a6 100644
--- a/src/fix_store_force.cpp
+++ b/src/fix_store_force.cpp
@@ -52,7 +52,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_store_force.h b/src/fix_store_force.h
index a55e81b..5ba2dba 100644
--- a/src/fix_store_force.h
+++ b/src/fix_store_force.h
@@ -54,7 +54,7 @@ FixStyle(store/force,FixStoreForce)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixStoreForce : public Fix {
  public:
diff --git a/src/fix_store_state.cpp b/src/fix_store_state.cpp
index 0594cf8..374be27 100644
--- a/src/fix_store_state.cpp
+++ b/src/fix_store_state.cpp
@@ -59,7 +59,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 enum{KEYWORD,COMPUTE,FIX,VARIABLE};
diff --git a/src/fix_store_state.h b/src/fix_store_state.h
index d7c9449..1f11bb9 100644
--- a/src/fix_store_state.h
+++ b/src/fix_store_state.h
@@ -54,7 +54,7 @@ FixStyle(store/state,FixStoreState)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixStoreState : public Fix {
  public:
diff --git a/src/fix_template_multiplespheres.cpp b/src/fix_template_multiplespheres.cpp
index 061d822..fc5e06f 100644
--- a/src/fix_template_multiplespheres.cpp
+++ b/src/fix_template_multiplespheres.cpp
@@ -69,7 +69,7 @@ a Fortran version of the MC integrator
 #include "particleToInsert.h"
 #include "input_multisphere.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace LMP_PROBABILITY_NS;
 
 #define LARGE 1e8
diff --git a/src/fix_template_multiplespheres.h b/src/fix_template_multiplespheres.h
index eb88d13..d6ceb52 100644
--- a/src/fix_template_multiplespheres.h
+++ b/src/fix_template_multiplespheres.h
@@ -51,7 +51,7 @@ FixStyle(particletemplate/multiplespheres,FixTemplateMultiplespheres)
 #include "fix.h"
 #include "fix_template_sphere.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixTemplateMultiplespheres : public FixTemplateSphere {
  public:
diff --git a/src/fix_template_multisphere.cpp b/src/fix_template_multisphere.cpp
index 8a1fb2d..2296b62 100644
--- a/src/fix_template_multisphere.cpp
+++ b/src/fix_template_multisphere.cpp
@@ -71,7 +71,7 @@ a Fortran version of the MC integrator
 #include "particleToInsert_multisphere.h"
 #include "input_multisphere.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace LMP_PROBABILITY_NS;
 using namespace FixConst;
 
diff --git a/src/fix_template_multisphere.h b/src/fix_template_multisphere.h
index 66bb9fc..2763d35 100644
--- a/src/fix_template_multisphere.h
+++ b/src/fix_template_multisphere.h
@@ -51,7 +51,7 @@ FixStyle(particletemplate/multisphere,FixTemplateMultisphere)
 #include "fix_template_multiplespheres.h"
 #include "vector_liggghts.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixTemplateMultisphere : public FixTemplateMultiplespheres {
  public:
diff --git a/src/fix_template_sphere.cpp b/src/fix_template_sphere.cpp
index 2982a39..9f90a3c 100644
--- a/src/fix_template_sphere.cpp
+++ b/src/fix_template_sphere.cpp
@@ -60,7 +60,7 @@
 #include "fix_region_variable.h"
 #include "group.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace LMP_PROBABILITY_NS;
 using namespace FixConst;
 
diff --git a/src/fix_template_sphere.h b/src/fix_template_sphere.h
index 5024cf2..a7fb498 100644
--- a/src/fix_template_sphere.h
+++ b/src/fix_template_sphere.h
@@ -51,7 +51,7 @@ FixStyle(particletemplate/sphere,FixTemplateSphere)
 #include "fix.h"
 #include "probability_distribution.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixTemplateSphere : public Fix {
  public:
diff --git a/src/fix_viscous.cpp b/src/fix_viscous.cpp
index 9a6ce58..f6ea76a 100644
--- a/src/fix_viscous.cpp
+++ b/src/fix_viscous.cpp
@@ -53,7 +53,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_viscous.h b/src/fix_viscous.h
index 7d4f6d6..8e133ae 100644
--- a/src/fix_viscous.h
+++ b/src/fix_viscous.h
@@ -54,7 +54,7 @@ FixStyle(viscous,FixViscous)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixViscous : public Fix {
  public:
diff --git a/src/fix_wall.cpp b/src/fix_wall.cpp
index 41dc052..bc26e1f 100644
--- a/src/fix_wall.cpp
+++ b/src/fix_wall.cpp
@@ -58,7 +58,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 enum{XLO=0,XHI=1,YLO=2,YHI=3,ZLO=4,ZHI=5};
diff --git a/src/fix_wall.h b/src/fix_wall.h
index 9b73d26..a18b717 100644
--- a/src/fix_wall.h
+++ b/src/fix_wall.h
@@ -48,7 +48,7 @@
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixWall : public Fix {
  public:
diff --git a/src/fix_wall_gran.cpp b/src/fix_wall_gran.cpp
index 2b33b12..261663e 100644
--- a/src/fix_wall_gran.cpp
+++ b/src/fix_wall_gran.cpp
@@ -79,9 +79,9 @@
   #include "math_extra_liggghts_superquadric.h"
 #endif
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
-using namespace LAMMPS_NS::PRIMITIVE_WALL_DEFINITIONS;
+using namespace LIGGGHTS_NS::PRIMITIVE_WALL_DEFINITIONS;
 using namespace LIGGGHTS::Walls;
 using namespace LIGGGHTS::ContactModels;
 
diff --git a/src/fix_wall_gran.h b/src/fix_wall_gran.h
index fd31a38..4730fd7 100644
--- a/src/fix_wall_gran.h
+++ b/src/fix_wall_gran.h
@@ -58,7 +58,7 @@ FixStyle(wall/gran,FixWallGran)
 
 namespace LCM = LIGGGHTS::ContactModels;
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixWallGran : public Fix, public LIGGGHTS::IContactHistorySetup {
 
diff --git a/src/fix_wall_region.cpp b/src/fix_wall_region.cpp
index 4fdaa14..849a87c 100644
--- a/src/fix_wall_region.cpp
+++ b/src/fix_wall_region.cpp
@@ -58,7 +58,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 enum{LJ93,LJ126,COLLOID,HARMONIC};
diff --git a/src/fix_wall_region.h b/src/fix_wall_region.h
index fad0e70..0b67779 100644
--- a/src/fix_wall_region.h
+++ b/src/fix_wall_region.h
@@ -54,7 +54,7 @@ FixStyle(wall/region,FixWallRegion)
 
 #include "fix.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixWallRegion : public Fix {
  public:
diff --git a/src/fix_wall_region_sph.cpp b/src/fix_wall_region_sph.cpp
index 9366ec1..0762d3f 100644
--- a/src/fix_wall_region_sph.cpp
+++ b/src/fix_wall_region_sph.cpp
@@ -56,7 +56,7 @@
 #include "force.h"
 #include "pair.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/fix_wall_region_sph.h b/src/fix_wall_region_sph.h
index 786c0da..6fe616a 100644
--- a/src/fix_wall_region_sph.h
+++ b/src/fix_wall_region_sph.h
@@ -48,7 +48,7 @@ FixStyle(wall/region/sph,FixWallRegionSph)
 
 #include "fix_sph.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixWallRegionSph : public FixSph {
  public:
diff --git a/src/fix_wall_sph.cpp b/src/fix_wall_sph.cpp
index cf18648..bb40d0c 100644
--- a/src/fix_wall_sph.cpp
+++ b/src/fix_wall_sph.cpp
@@ -52,7 +52,7 @@
 #include "sph_kernels.h"
 #include "fix_wall_sph.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 enum{XPLANE,YPLANE,ZPLANE,ZCYLINDER};    // XYZ PLANE need to be 0,1,2
diff --git a/src/fix_wall_sph.h b/src/fix_wall_sph.h
index 2365569..921c13d 100644
--- a/src/fix_wall_sph.h
+++ b/src/fix_wall_sph.h
@@ -48,7 +48,7 @@ FixStyle(wall/sph,FixWallSph)
 
 #include "fix_sph.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class FixWallSph : public FixSph {
  public:
diff --git a/src/force.cpp b/src/force.cpp
index 9335512..f0d26be 100644
--- a/src/force.cpp
+++ b/src/force.cpp
@@ -75,7 +75,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/force.h b/src/force.h
index dac1b24..8746ace 100644
--- a/src/force.h
+++ b/src/force.h
@@ -57,7 +57,7 @@
 #include <map>
 #include <string>
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Force : protected Pointers {
  friend class Coarsegraining;
diff --git a/src/general_container.h b/src/general_container.h
index daaed3f..5166437 100644
--- a/src/general_container.h
+++ b/src/general_container.h
@@ -55,7 +55,7 @@ inline int GROW_CONTAINER()
 
 using namespace LAMMPS_MEMORY_NS;
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
 
   template<typename T, int NUM_VEC, int LEN_VEC>
diff --git a/src/granular_pair_style.h b/src/granular_pair_style.h
index de5a8e4..d4cf5ec 100644
--- a/src/granular_pair_style.h
+++ b/src/granular_pair_style.h
@@ -56,14 +56,14 @@ namespace PairStyles {
    */
   class IGranularPairStyle {
   public:
-    typedef LAMMPS_NS::PairGran ParentType;
+    typedef LIGGGHTS_NS::PairGran ParentType;
 
     virtual ~IGranularPairStyle();
     virtual void settings(int nargs, char ** args) = 0;
     virtual void init_granular() = 0;
     virtual void write_restart_settings(FILE * fp) = 0;
     virtual void read_restart_settings(FILE * fp, int64_t hashcode = -1) = 0;
-    virtual void compute_force(LAMMPS_NS::PairGran * pg, int eflag, int vflag, int addflag) = 0;
+    virtual void compute_force(LIGGGHTS_NS::PairGran * pg, int eflag, int vflag, int addflag) = 0;
 
     virtual int bond_history_offset() = 0;
     virtual double stressStrainExponent() = 0;
diff --git a/src/granular_wall.h b/src/granular_wall.h
index fbf5cbc..a3b36cf 100644
--- a/src/granular_wall.h
+++ b/src/granular_wall.h
@@ -46,12 +46,12 @@
 #include "fix_mesh_surface.h"
 #include "contact_interface.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
   class FixWallGran;
 }
 
 namespace LIGGGHTS {
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 namespace Walls {
 
diff --git a/src/group.cpp b/src/group.cpp
index 493bd77..2f7100c 100644
--- a/src/group.cpp
+++ b/src/group.cpp
@@ -63,7 +63,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define MAX_GROUP 32
 
diff --git a/src/group.h b/src/group.h
index 36928da..4518f1e 100644
--- a/src/group.h
+++ b/src/group.h
@@ -49,7 +49,7 @@
 #include "stdio.h"
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Group : protected Pointers {
  public:
diff --git a/src/histogram.h b/src/histogram.h
index 4107871..a99a707 100644
--- a/src/histogram.h
+++ b/src/histogram.h
@@ -48,7 +48,7 @@
 #include "atom.h"
 #include <vector>
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 template<typename T>
 class Histogram : protected Pointers
diff --git a/src/image.cpp b/src/image.cpp
index cbe4f93..aabe9a8 100644
--- a/src/image.cpp
+++ b/src/image.cpp
@@ -71,7 +71,7 @@
 #include "version.h"
 #endif
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace MathConst;
 
 #define NCOLORS 140
diff --git a/src/image.h b/src/image.h
index 1215060..7acc797 100644
--- a/src/image.h
+++ b/src/image.h
@@ -50,7 +50,7 @@
 #include "stdio.h"
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Image : protected Pointers {
  public:
diff --git a/src/improper.cpp b/src/improper.cpp
index 3ecef02..aa8d29b 100644
--- a/src/improper.cpp
+++ b/src/improper.cpp
@@ -53,7 +53,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/improper.h b/src/improper.h
index d5b8c06..dba9145 100644
--- a/src/improper.h
+++ b/src/improper.h
@@ -49,7 +49,7 @@
 #include "stdio.h"
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Improper : protected Pointers {
   friend class ThrOMP;
diff --git a/src/improper_hybrid.cpp b/src/improper_hybrid.cpp
index 945850c..c2d3f48 100644
--- a/src/improper_hybrid.cpp
+++ b/src/improper_hybrid.cpp
@@ -55,7 +55,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define EXTRA 1000
 
diff --git a/src/improper_hybrid.h b/src/improper_hybrid.h
index a72c259..481e8fa 100644
--- a/src/improper_hybrid.h
+++ b/src/improper_hybrid.h
@@ -55,7 +55,7 @@ ImproperStyle(hybrid,ImproperHybrid)
 #include "stdio.h"
 #include "improper.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ImproperHybrid : public Improper {
  public:
diff --git a/src/input.cpp b/src/input.cpp
index 49b3529..d4bc812 100644
--- a/src/input.cpp
+++ b/src/input.cpp
@@ -88,7 +88,7 @@
 #include "omp.h"
 #endif
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define DELTALINE 256
 #define DELTA 4
diff --git a/src/input.h b/src/input.h
index 769671c..ff4e066 100644
--- a/src/input.h
+++ b/src/input.h
@@ -57,7 +57,7 @@
 #include <map>
 #include <string>
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Input : protected Pointers {
 
diff --git a/src/input_mesh_tet.cpp b/src/input_mesh_tet.cpp
index f5b6988..1b6e28f 100644
--- a/src/input_mesh_tet.cpp
+++ b/src/input_mesh_tet.cpp
@@ -56,7 +56,7 @@
 #include "input_mesh_tet.h"
 #include "region_mesh_tet.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define MAXLINE 2048
 #define DELTA 4
diff --git a/src/input_mesh_tet.h b/src/input_mesh_tet.h
index 1e9149c..6227155 100644
--- a/src/input_mesh_tet.h
+++ b/src/input_mesh_tet.h
@@ -45,7 +45,7 @@
 #include "stdio.h"
 #include "input.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class InputMeshTet : protected Input {
  public:
diff --git a/src/input_mesh_tri.cpp b/src/input_mesh_tri.cpp
index 15a28dd..4933b90 100644
--- a/src/input_mesh_tri.cpp
+++ b/src/input_mesh_tri.cpp
@@ -56,7 +56,7 @@
 #include "input_mesh_tri.h"
 #include "tri_mesh.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 InputMeshTri::InputMeshTri(LAMMPS *lmp, int argc, char **argv) : Input(lmp, argc, argv),
 verbose_(false),
diff --git a/src/input_mesh_tri.h b/src/input_mesh_tri.h
index 6458daf..85f59b2 100644
--- a/src/input_mesh_tri.h
+++ b/src/input_mesh_tri.h
@@ -45,7 +45,7 @@
 #include "stdio.h"
 #include "input.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class InputMeshTri : protected Input
 {
diff --git a/src/input_multisphere.cpp b/src/input_multisphere.cpp
index 3af4d6e..ce8dd5d 100644
--- a/src/input_multisphere.cpp
+++ b/src/input_multisphere.cpp
@@ -71,7 +71,7 @@
 #include "memory.h"
 #include "input_multisphere.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define MAXLINE 2048
 #define DELTA 4
diff --git a/src/input_multisphere.h b/src/input_multisphere.h
index b291d97..f2717b8 100644
--- a/src/input_multisphere.h
+++ b/src/input_multisphere.h
@@ -45,7 +45,7 @@
 #include "stdio.h"
 #include "input.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class InputMultisphere : protected Input {
  public:
diff --git a/src/integrate.cpp b/src/integrate.cpp
index 3b7bcdb..ec117f4 100644
--- a/src/integrate.cpp
+++ b/src/integrate.cpp
@@ -52,7 +52,7 @@
 #include "modify.h"
 #include "compute.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/integrate.h b/src/integrate.h
index e909c7f..f2677ae 100644
--- a/src/integrate.h
+++ b/src/integrate.h
@@ -48,7 +48,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Integrate : protected Pointers {
  public:
diff --git a/src/irregular.cpp b/src/irregular.cpp
index 1e466ff..2515cc0 100644
--- a/src/irregular.cpp
+++ b/src/irregular.cpp
@@ -54,7 +54,7 @@
 #include "comm.h"
 #include "memory.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define BUFFACTOR 1.5
 #define BUFMIN 1000
diff --git a/src/irregular.h b/src/irregular.h
index 0af98db..fe1cdd9 100644
--- a/src/irregular.h
+++ b/src/irregular.h
@@ -48,7 +48,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Irregular : protected Pointers {
  public:
diff --git a/src/kspace.cpp b/src/kspace.cpp
index d6b1414..23780f0 100644
--- a/src/kspace.cpp
+++ b/src/kspace.cpp
@@ -56,7 +56,7 @@
 #include "suffix.h"
 #include "domain.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/kspace.h b/src/kspace.h
index f5579bc..8bff51a 100644
--- a/src/kspace.h
+++ b/src/kspace.h
@@ -56,7 +56,7 @@ typedef double FFT_SCALAR;
 #define MPI_FFT_SCALAR MPI_DOUBLE
 #endif
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class KSpace : protected Pointers {
   friend class ThrOMP;
diff --git a/src/lammps.cpp b/src/lammps.cpp
index 9cf679f..fd43ec8 100644
--- a/src/lammps.cpp
+++ b/src/lammps.cpp
@@ -85,7 +85,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ----------------------------------------------------------------------
    start up LAMMPS
diff --git a/src/lammps.h b/src/lammps.h
index 49f7c0c..e336e94 100644
--- a/src/lammps.h
+++ b/src/lammps.h
@@ -48,7 +48,7 @@
 
 #include "stdio.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class LAMMPS {
  public:
diff --git a/src/lattice.cpp b/src/lattice.cpp
index 7e70cbe..926b620 100644
--- a/src/lattice.cpp
+++ b/src/lattice.cpp
@@ -54,7 +54,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define BIG 1.0e30
 
diff --git a/src/lattice.h b/src/lattice.h
index 17ddf7a..b1bc84e 100644
--- a/src/lattice.h
+++ b/src/lattice.h
@@ -48,7 +48,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Lattice : protected Pointers {
  public:
diff --git a/src/library.cpp b/src/library.cpp
index e9b89de..a46327b 100644
--- a/src/library.cpp
+++ b/src/library.cpp
@@ -66,7 +66,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ----------------------------------------------------------------------
    create an instance of LAMMPS and return pointer to it
diff --git a/src/library_cfd_coupling.cpp b/src/library_cfd_coupling.cpp
index 5922219..b97d562 100644
--- a/src/library_cfd_coupling.cpp
+++ b/src/library_cfd_coupling.cpp
@@ -56,7 +56,7 @@
 #include "comm.h"
 #include "cfd_datacoupling.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define LMP_GROW_DELTA 11000
 
diff --git a/src/lmptype.h b/src/lmptype.h
index f8fd9a1..fb41e84 100644
--- a/src/lmptype.h
+++ b/src/lmptype.h
@@ -77,7 +77,7 @@
 #define PRId64 "ld"
 #endif
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 // reserve 2 hi bits in molecular system neigh list for special bonds flag
 // max local + ghost atoms per processor = 2^30 - 1
diff --git a/src/main.cpp b/src/main.cpp
index 1f9661a..3fede66 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -48,7 +48,7 @@
 #include "input.h"
 #include "string.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ----------------------------------------------------------------------
    main program to drive LAMMPS
diff --git a/src/math_complex.h b/src/math_complex.h
index 8b6bc54..1cc5c42 100644
--- a/src/math_complex.h
+++ b/src/math_complex.h
@@ -52,7 +52,7 @@
 
 #define COMPLEX_NULL        {0, 0}
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 typedef struct complex {
   double re, im; } complex;
diff --git a/src/math_const.h b/src/math_const.h
index bfb3748..2b5da13 100644
--- a/src/math_const.h
+++ b/src/math_const.h
@@ -46,7 +46,7 @@
 #ifndef LMP_MATH_CONST_H
 #define LMP_MATH_CONST_H
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 namespace MathConst {
   static const double THIRD  = 1.0/3.0;
diff --git a/src/math_extra_liggghts.h b/src/math_extra_liggghts.h
index de1b576..22403f6 100644
--- a/src/math_extra_liggghts.h
+++ b/src/math_extra_liggghts.h
@@ -58,7 +58,7 @@ namespace MathExtraLiggghts {
 
   inline void col_times3(const double m[3][3],const double *v, double *ans);
 
-  inline double mdet(const double m[3][3],LAMMPS_NS::Error *error);
+  inline double mdet(const double m[3][3],LIGGGHTS_NS::Error *error);
 
   //cubic root approx
   inline double cbrt_5d(double d);
@@ -87,8 +87,8 @@ namespace MathExtraLiggghts {
   inline int is_inside_tet(double *pos,double invmatrix[4][4]);
 
   inline void local_coosys_to_cartesian(double *global,double *local, double *ex_local, double *ey_local, double *ez_local);
-  inline void cartesian_coosys_to_local(double *local,double *global, double *ex_local, double *ey_local, double *ez_local,LAMMPS_NS::Error *error);
-  inline void cartesian_coosys_to_local_orthogonal(double *local,double *global, double *ex_local, double *ey_local, double *ez_local,LAMMPS_NS::Error *error);
+  inline void cartesian_coosys_to_local(double *local,double *global, double *ex_local, double *ey_local, double *ez_local,LIGGGHTS_NS::Error *error);
+  inline void cartesian_coosys_to_local_orthogonal(double *local,double *global, double *ex_local, double *ey_local, double *ez_local,LIGGGHTS_NS::Error *error);
 
   // quaternion operations
   inline void quat_normalize(double *q);
@@ -111,7 +111,7 @@ namespace MathExtraLiggghts {
   inline void calcBaryTriCoords(double *p, double **edgeVec, double *edgeLen, double *bary);
   inline void calcBaryTriCoords(double *p, double *edgeVec0, double *edgeVec1, double *edgeVec2, double *edgeLen, double *bary);
 
-  inline void random_unit_quat(LAMMPS_NS::RanPark *random,double *quat);
+  inline void random_unit_quat(LIGGGHTS_NS::RanPark *random,double *quat);
 
   inline bool is_int(char *str);
   inline void generateComplementBasis(double *uVec, double *vVec, double *direction);
@@ -139,7 +139,7 @@ void MathExtraLiggghts::col_times3(const double m[3][3],const double *v, double
 Matrix determinant
 ------------------------------------------------------------------------- */
 
-double MathExtraLiggghts::mdet(const double m[3][3],LAMMPS_NS::Error *error)
+double MathExtraLiggghts::mdet(const double m[3][3],LIGGGHTS_NS::Error *error)
 {
     UNUSED(error);
     return ( -m[0][2]*m[1][1]*m[2][0] + m[0][1]*m[1][2]*m[2][0] + m[0][2]*m[1][0]*m[2][1] - m[0][0]*m[1][2]*m[2][1] - m[0][1]*m[1][0]*m[2][2] + m[0][0]*m[1][1]*m[2][2] );
@@ -386,16 +386,16 @@ void MathExtraLiggghts::local_coosys_to_cartesian(double *global,double *local,
    transform from global to local coords
 ------------------------------------------------------------------------- */
 
-void MathExtraLiggghts::cartesian_coosys_to_local(double *local,double *global, double *ex_local, double *ey_local, double *ez_local,LAMMPS_NS::Error *error)
+void MathExtraLiggghts::cartesian_coosys_to_local(double *local,double *global, double *ex_local, double *ey_local, double *ez_local,LIGGGHTS_NS::Error *error)
 {
   UNUSED(error);
   double M[3][3] = {{0.,0.,0.},{0.,0.,0.},{0.,0.,0.}};
   double Mt[3][3] = {{0.,0.,0.},{0.,0.,0.},{0.,0.,0.}};
 
   // set up the matrix
-  LAMMPS_NS::vectorCopy3D(ex_local,M[0]);
-  LAMMPS_NS::vectorCopy3D(ey_local,M[1]);
-  LAMMPS_NS::vectorCopy3D(ez_local,M[2]);
+  LIGGGHTS_NS::vectorCopy3D(ex_local,M[0]);
+  LIGGGHTS_NS::vectorCopy3D(ey_local,M[1]);
+  LIGGGHTS_NS::vectorCopy3D(ez_local,M[2]);
   MathExtraLiggghts::transpose3(M,Mt);
 
   // solve
@@ -407,12 +407,12 @@ void MathExtraLiggghts::cartesian_coosys_to_local(double *local,double *global,
    faster for orthogonal matrix
 ------------------------------------------------------------------------- */
 
-void MathExtraLiggghts::cartesian_coosys_to_local_orthogonal(double *local,double *global, double *ex_local, double *ey_local, double *ez_local,LAMMPS_NS::Error *error)
+void MathExtraLiggghts::cartesian_coosys_to_local_orthogonal(double *local,double *global, double *ex_local, double *ey_local, double *ez_local,LIGGGHTS_NS::Error *error)
 {
   // check if orthogonal
-  double dot1 = LAMMPS_NS::vectorDot3D(ex_local,ey_local);
-  double dot2 = LAMMPS_NS::vectorDot3D(ey_local,ez_local);
-  double dot3 = LAMMPS_NS::vectorDot3D(ez_local,ex_local);
+  double dot1 = LIGGGHTS_NS::vectorDot3D(ex_local,ey_local);
+  double dot2 = LIGGGHTS_NS::vectorDot3D(ey_local,ez_local);
+  double dot3 = LIGGGHTS_NS::vectorDot3D(ez_local,ex_local);
   int flag = dot1 > TOLERANCE_ORTHO || dot2 > TOLERANCE_ORTHO || dot3 > TOLERANCE_ORTHO;
   if(flag) error->one(FLERR,"Insufficient accuracy: using MathExtraLiggghts::cartesian_coosys_to_local_orthogonal() for non-orthogonal coo-sys");
 
@@ -500,7 +500,7 @@ void MathExtraLiggghts::vec_quat_rotate(double *vec, double *quat)
 
     // return result
     vec_from_quat(resultQ,result);
-    LAMMPS_NS::vectorCopy3D(result,vec);
+    LIGGGHTS_NS::vectorCopy3D(result,vec);
 }
 
 /* ----------------------------------------------------------------------
@@ -584,9 +584,9 @@ bool MathExtraLiggghts::compDouble(double const a, double const b, double const
 void MathExtraLiggghts::calcBaryTriCoords(double *ap, double **edgeVec, double *edgeLen, double *bary)
 {
   
-  double a = LAMMPS_NS::vectorDot3D(ap,edgeVec[0]);
-  double b = LAMMPS_NS::vectorDot3D(ap,edgeVec[2]);
-  double c = LAMMPS_NS::vectorDot3D(edgeVec[0],edgeVec[2]);
+  double a = LIGGGHTS_NS::vectorDot3D(ap,edgeVec[0]);
+  double b = LIGGGHTS_NS::vectorDot3D(ap,edgeVec[2]);
+  double c = LIGGGHTS_NS::vectorDot3D(edgeVec[0],edgeVec[2]);
   double oneMinCSqr = 1 - c*c;
 
   bary[1] = (a - b*c)/(edgeLen[0] * oneMinCSqr);
@@ -599,9 +599,9 @@ void MathExtraLiggghts::calcBaryTriCoords(double *ap, double *edgeVec0, double *
 {
   UNUSED(edgeVec1);
   
-  double a = LAMMPS_NS::vectorDot3D(ap,edgeVec0);
-  double b = LAMMPS_NS::vectorDot3D(ap,edgeVec2);
-  double c = LAMMPS_NS::vectorDot3D(edgeVec0,edgeVec2);
+  double a = LIGGGHTS_NS::vectorDot3D(ap,edgeVec0);
+  double b = LIGGGHTS_NS::vectorDot3D(ap,edgeVec2);
+  double c = LIGGGHTS_NS::vectorDot3D(edgeVec0,edgeVec2);
   double oneMinCSqr = 1 - c*c;
 
   bary[1] = (a - b*c)/(edgeLen[0] * oneMinCSqr);
@@ -614,7 +614,7 @@ void MathExtraLiggghts::calcBaryTriCoords(double *ap, double *edgeVec0, double *
    from http://planning.cs.uiuc.edu/node198.html
 ------------------------------------------------------------------------- */
 
-void MathExtraLiggghts::random_unit_quat(LAMMPS_NS::RanPark *random,double *quat)
+void MathExtraLiggghts::random_unit_quat(LIGGGHTS_NS::RanPark *random,double *quat)
 {
     double u1 = random->uniform();
     double u2 = random->uniform();
diff --git a/src/math_special.h b/src/math_special.h
index 9257ba0..1d0b1db 100644
--- a/src/math_special.h
+++ b/src/math_special.h
@@ -48,7 +48,7 @@
 
 #include <math.h>
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 namespace MathSpecial {
 
diff --git a/src/math_vector.h b/src/math_vector.h
index 06d06bb..8028905 100644
--- a/src/math_vector.h
+++ b/src/math_vector.h
@@ -64,7 +64,7 @@
 #define FZERO 1e-15
 #define fzero(x) (((x)>-FZERO) && ((x)<FZERO))
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 typedef double vector[3];                // 0:x  1:y  2:z
 typedef int lvector[3];
diff --git a/src/memory.cpp b/src/memory.cpp
index 62ba767..c3d36e4 100644
--- a/src/memory.cpp
+++ b/src/memory.cpp
@@ -49,7 +49,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/memory.h b/src/memory.h
index d92a3e7..b1877d0 100644
--- a/src/memory.h
+++ b/src/memory.h
@@ -49,7 +49,7 @@
 #include "lmptype.h"
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Memory : protected Pointers {
  public:
diff --git a/src/memory_ns.h b/src/memory_ns.h
index e135ecd..944e85d 100644
--- a/src/memory_ns.h
+++ b/src/memory_ns.h
@@ -55,7 +55,7 @@
 #include "stdlib.h"
 #include "lmptype.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 namespace LAMMPS_MEMORY_NS {
 
@@ -221,6 +221,6 @@ namespace LAMMPS_MEMORY_NS {
           free(array[0]);
           free(array);
         }
-} /* LAMMPS_NS */
+} /* LIGGGHTS_NS */
 
 #endif /* MEMORY_H_ */
diff --git a/src/mesh_mover.cpp b/src/mesh_mover.cpp
index dd938d2..96d8cae 100644
--- a/src/mesh_mover.cpp
+++ b/src/mesh_mover.cpp
@@ -53,7 +53,7 @@
 #include "modify.h"
 #include "variable.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ----------------------------------------------------------------------
    MeshMoverLinear
diff --git a/src/mesh_mover.h b/src/mesh_mover.h
index 6b1493f..11064c8 100644
--- a/src/mesh_mover.h
+++ b/src/mesh_mover.h
@@ -52,7 +52,7 @@
 #include "fix_move_mesh.h"
 #include "force.h"
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
   class MeshMover : protected Pointers
   {
@@ -504,6 +504,6 @@ namespace LAMMPS_NS
         return 0;
     }
 
-} /* LAMMPS_NS */
+} /* LIGGGHTS_NS */
 
 #endif /* MESHMOVER_H_ */
diff --git a/src/min.cpp b/src/min.cpp
index ffb06c3..17123db 100644
--- a/src/min.cpp
+++ b/src/min.cpp
@@ -76,7 +76,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/min.h b/src/min.h
index 5225d8a..0584bf4 100644
--- a/src/min.h
+++ b/src/min.h
@@ -48,7 +48,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Min : protected Pointers {
  public:
diff --git a/src/min_cg.cpp b/src/min_cg.cpp
index 1db8c7f..da26025 100644
--- a/src/min_cg.cpp
+++ b/src/min_cg.cpp
@@ -53,7 +53,7 @@
 #include "output.h"
 #include "timer.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 // EPS_ENERGY = minimum normalization for energy tolerance
 
diff --git a/src/min_cg.h b/src/min_cg.h
index 02bc130..64427a5 100644
--- a/src/min_cg.h
+++ b/src/min_cg.h
@@ -54,7 +54,7 @@ MinimizeStyle(cg,MinCG)
 
 #include "min_linesearch.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class MinCG : public MinLineSearch {
  public:
diff --git a/src/min_linesearch.cpp b/src/min_linesearch.cpp
index 7db8dd7..a4b914f 100644
--- a/src/min_linesearch.cpp
+++ b/src/min_linesearch.cpp
@@ -67,7 +67,7 @@
 #include "timer.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 // ALPHA_MAX = max alpha allowed to avoid long backtracks
 // ALPHA_REDUCE = reduction ratio, should be in range [0.5,1)
diff --git a/src/min_linesearch.h b/src/min_linesearch.h
index 4028591..855c36b 100644
--- a/src/min_linesearch.h
+++ b/src/min_linesearch.h
@@ -48,7 +48,7 @@
 
 #include "min.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class MinLineSearch : public Min {
  public:
diff --git a/src/minimize.cpp b/src/minimize.cpp
index 95c482b..2123dee 100644
--- a/src/minimize.cpp
+++ b/src/minimize.cpp
@@ -53,7 +53,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/minimize.h b/src/minimize.h
index 206aa72..468aaca 100644
--- a/src/minimize.h
+++ b/src/minimize.h
@@ -54,7 +54,7 @@ CommandStyle(minimize,Minimize)
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Minimize : protected Pointers {
  public:
diff --git a/src/modified_andrew.cpp b/src/modified_andrew.cpp
index e50961e..c1a1cd0 100644
--- a/src/modified_andrew.cpp
+++ b/src/modified_andrew.cpp
@@ -51,7 +51,7 @@
 
 using MODIFIED_ANDREW_AUX::Circle;
 using MODIFIED_ANDREW_AUX::Point;
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/modified_andrew.h b/src/modified_andrew.h
index c6a06e6..c04a3c2 100644
--- a/src/modified_andrew.h
+++ b/src/modified_andrew.h
@@ -66,7 +66,7 @@ struct Circle {
 using MODIFIED_ANDREW_AUX::Point;
 using MODIFIED_ANDREW_AUX::Circle;
 
-namespace LAMMPS_NS{
+namespace LIGGGHTS_NS{
 
 class ModifiedAndrew : protected Pointers {
 
diff --git a/src/modify.cpp b/src/modify.cpp
index 8ed6a5d..3d3bdaf 100644
--- a/src/modify.cpp
+++ b/src/modify.cpp
@@ -72,7 +72,7 @@
 #include <map>
 #include <string>
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace FixConst;
 
 #define DELTA 4
diff --git a/src/modify.h b/src/modify.h
index 607e728..112b3be 100644
--- a/src/modify.h
+++ b/src/modify.h
@@ -58,7 +58,7 @@
 #include <map>
 #include <string>
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Modify : protected Pointers {
   friend class Info;
diff --git a/src/modify_liggghts.cpp b/src/modify_liggghts.cpp
index 3604eb2..f5bf493 100644
--- a/src/modify_liggghts.cpp
+++ b/src/modify_liggghts.cpp
@@ -56,7 +56,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ----------------------------------------------------------------------
    
diff --git a/src/mpi_liggghts.h b/src/mpi_liggghts.h
index 153e6c2..8d87b59 100644
--- a/src/mpi_liggghts.h
+++ b/src/mpi_liggghts.h
@@ -49,7 +49,7 @@
 // a poor man's inline MPI wrappers for LIGGGHTS
 /* ---------------------------------------------------------------------- */
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
 
 /* ----------------------------------------------------------------------
@@ -246,6 +246,6 @@ inline int MPI_Allgather_Vector(T *vector, int size ,T *&vector_all,MPI_Comm com
     return size_all;
 }
 
-}; // end namespace LAMMPS_NS
+}; // end namespace LIGGGHTS_NS
 
 #endif
diff --git a/src/multi_node_mesh.h b/src/multi_node_mesh.h
index 8a996d2..a3d97dc 100644
--- a/src/multi_node_mesh.h
+++ b/src/multi_node_mesh.h
@@ -55,7 +55,7 @@
 
 #define EPSILON_PRECISION 1e-8
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
   template<int NUM_NODES>
   class MultiNodeMesh : public AbstractMesh
@@ -264,5 +264,5 @@ namespace LAMMPS_NS
   #include "multi_node_mesh_I.h"
   // *************************************
 
-} /* LAMMPS_NS */
+} /* LIGGGHTS_NS */
 #endif /* MULTINODEMESH_H_ */
diff --git a/src/multi_node_mesh_parallel.h b/src/multi_node_mesh_parallel.h
index 14d119b..c7cb2d5 100644
--- a/src/multi_node_mesh_parallel.h
+++ b/src/multi_node_mesh_parallel.h
@@ -50,7 +50,7 @@
 #include "neighbor.h"
 #include "math_extra_liggghts.h"
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
   template<int NUM_NODES>
   class MultiNodeMeshParallel : public MultiNodeMesh<NUM_NODES>
@@ -219,5 +219,5 @@ namespace LAMMPS_NS
   #include "multi_node_mesh_parallel_buffer_I.h"
   // *************************************
 
-} /* LAMMPS_NS */
+} /* LIGGGHTS_NS */
 #endif /* MULTINODEMESH_H_ */
diff --git a/src/multi_vector_container.h b/src/multi_vector_container.h
index 38d93ea..a6961e5 100644
--- a/src/multi_vector_container.h
+++ b/src/multi_vector_container.h
@@ -48,7 +48,7 @@
 
 #include "general_container.h"
 
-namespace LAMMPS_NS{
+namespace LIGGGHTS_NS{
   template<typename T, int NUM_VEC, int LEN_VEC>
   class MultiVectorContainer : public GeneralContainer <T, NUM_VEC, LEN_VEC>
   {
@@ -94,5 +94,5 @@ namespace LAMMPS_NS{
 
   }
 
-} /* LAMMPS_NS */
+} /* LIGGGHTS_NS */
 #endif /* MULTIVECTORCONTAINER_H_ */
diff --git a/src/multisphere.h b/src/multisphere.h
index f3f3311..80cf924 100644
--- a/src/multisphere.h
+++ b/src/multisphere.h
@@ -48,7 +48,7 @@
 #include "update.h"
 #include <vector>
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
   class Multisphere : protected Pointers {
 
diff --git a/src/my_page.h b/src/my_page.h
index c76cc73..03eac87 100644
--- a/src/my_page.h
+++ b/src/my_page.h
@@ -81,7 +81,7 @@ methods:
 #define LAMMPS_MY_PAGE_H
 
 #include "stdlib.h"
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 template<class T>
 class MyPage {
diff --git a/src/my_pool_chunk.h b/src/my_pool_chunk.h
index 4f9b5e2..88da847 100644
--- a/src/my_pool_chunk.h
+++ b/src/my_pool_chunk.h
@@ -77,7 +77,7 @@ public varaibles:
 
 #include "stdlib.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 template<class T>
 class MyPoolChunk {
diff --git a/src/neigh_bond.cpp b/src/neigh_bond.cpp
index 5502ae8..04a6336 100644
--- a/src/neigh_bond.cpp
+++ b/src/neigh_bond.cpp
@@ -57,7 +57,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define BONDDELTA 10000
 
diff --git a/src/neigh_derive.cpp b/src/neigh_derive.cpp
index 0060b01..1c02297 100644
--- a/src/neigh_derive.cpp
+++ b/src/neigh_derive.cpp
@@ -49,7 +49,7 @@
 #include "my_page.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ----------------------------------------------------------------------
    build half list from full list
diff --git a/src/neigh_dummy.h b/src/neigh_dummy.h
index f3b9912..70e889e 100644
--- a/src/neigh_dummy.h
+++ b/src/neigh_dummy.h
@@ -1,6 +1,6 @@
 #include "neighbor.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 int Neighbor::multi_levels()
 { return 0; }
diff --git a/src/neigh_full.cpp b/src/neigh_full.cpp
index ffd7539..33fc433 100644
--- a/src/neigh_full.cpp
+++ b/src/neigh_full.cpp
@@ -51,7 +51,7 @@
 #include "group.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ----------------------------------------------------------------------
    N^2 search for all neighbors
diff --git a/src/neigh_gran.cpp b/src/neigh_gran.cpp
index 7dc35bf..0fa106a 100644
--- a/src/neigh_gran.cpp
+++ b/src/neigh_gran.cpp
@@ -57,7 +57,7 @@
 #include "fix_contact_history.h" 
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ----------------------------------------------------------------------
    granular particles
diff --git a/src/neigh_half_bin.cpp b/src/neigh_half_bin.cpp
index 6fe998d..1fe3a60 100644
--- a/src/neigh_half_bin.cpp
+++ b/src/neigh_half_bin.cpp
@@ -50,7 +50,7 @@
 #include "my_page.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ----------------------------------------------------------------------
    binned neighbor list construction with partial Newton's 3rd law
diff --git a/src/neigh_half_multi.cpp b/src/neigh_half_multi.cpp
index efcb56d..eafcb8a 100644
--- a/src/neigh_half_multi.cpp
+++ b/src/neigh_half_multi.cpp
@@ -50,7 +50,7 @@
 #include "my_page.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ----------------------------------------------------------------------
    binned neighbor list construction with partial Newton's 3rd law
diff --git a/src/neigh_half_nsq.cpp b/src/neigh_half_nsq.cpp
index 3027b24..8db175b 100644
--- a/src/neigh_half_nsq.cpp
+++ b/src/neigh_half_nsq.cpp
@@ -50,7 +50,7 @@
 #include "group.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ----------------------------------------------------------------------
    N^2 / 2 search for neighbor pairs with partial Newton's 3rd law
diff --git a/src/neigh_list.cpp b/src/neigh_list.cpp
index 6a63754..c2dadc3 100644
--- a/src/neigh_list.cpp
+++ b/src/neigh_list.cpp
@@ -59,7 +59,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define PGDELTA 1
 
diff --git a/src/neigh_list.h b/src/neigh_list.h
index a5a41aa..dc245da 100644
--- a/src/neigh_list.h
+++ b/src/neigh_list.h
@@ -55,7 +55,7 @@
 #include "pointers.h"
 #include "my_page.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class NeighList : protected Pointers {
  public:
diff --git a/src/neigh_mlg_dummy.h b/src/neigh_mlg_dummy.h
index 48ecd74..4984fba 100644
--- a/src/neigh_mlg_dummy.h
+++ b/src/neigh_mlg_dummy.h
@@ -1,6 +1,6 @@
 #ifndef LMP_NEIGHBOR_MULTI_LEVEL_GRID_H
 #define LMP_NEIGHBOR_MULTI_LEVEL_GRID_H
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
 
 class MultiLevelGrid
diff --git a/src/neigh_request.cpp b/src/neigh_request.cpp
index 346b84e..3500e26 100644
--- a/src/neigh_request.cpp
+++ b/src/neigh_request.cpp
@@ -47,7 +47,7 @@
 #include "atom.h"
 #include "memory.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/neigh_request.h b/src/neigh_request.h
index 6a7d961..17d7dd5 100644
--- a/src/neigh_request.h
+++ b/src/neigh_request.h
@@ -48,7 +48,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class NeighRequest : protected Pointers {
  public:
diff --git a/src/neigh_respa.cpp b/src/neigh_respa.cpp
index e63bfeb..e2c161b 100644
--- a/src/neigh_respa.cpp
+++ b/src/neigh_respa.cpp
@@ -51,7 +51,7 @@
 #include "my_page.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ----------------------------------------------------------------------
    multiple respa lists
diff --git a/src/neigh_stencil.cpp b/src/neigh_stencil.cpp
index 20c8b27..1a2690d 100644
--- a/src/neigh_stencil.cpp
+++ b/src/neigh_stencil.cpp
@@ -47,7 +47,7 @@
 #include "neigh_list.h"
 #include "atom.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ----------------------------------------------------------------------
    routines to create a stencil = list of bin offsets
diff --git a/src/neighbor.cpp b/src/neighbor.cpp
index 1540d62..eddcb4c 100644
--- a/src/neighbor.cpp
+++ b/src/neighbor.cpp
@@ -82,7 +82,7 @@
 #include "fix_contact_history.h"
 #include <assert.h>
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define RQDELTA 1
 #define EXDELTA 1
diff --git a/src/neighbor.h b/src/neighbor.h
index c8c9eab..6acbb79 100644
--- a/src/neighbor.h
+++ b/src/neighbor.h
@@ -55,7 +55,7 @@
 #include "pointers.h"
 #include <algorithm> 
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Neighbor : protected Pointers {
   friend class Cuda;
diff --git a/src/output.cpp b/src/output.cpp
index 6ff82a6..6483a05 100644
--- a/src/output.cpp
+++ b/src/output.cpp
@@ -66,7 +66,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define DELTA 1
 
diff --git a/src/output.h b/src/output.h
index 213b1ac..a6b837c 100644
--- a/src/output.h
+++ b/src/output.h
@@ -48,7 +48,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Output : protected Pointers {
  public:
diff --git a/src/pair.cpp b/src/pair.cpp
index f26d861..964fc3d 100644
--- a/src/pair.cpp
+++ b/src/pair.cpp
@@ -70,7 +70,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define EWALD_F   1.12837917
 
diff --git a/src/pair.h b/src/pair.h
index 89eec16..e7d7ca8 100644
--- a/src/pair.h
+++ b/src/pair.h
@@ -48,7 +48,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Pair : protected Pointers {
   friend class AngleSDK;
diff --git a/src/pair_gran.cpp b/src/pair_gran.cpp
index 0e591ab..18c9f98 100644
--- a/src/pair_gran.cpp
+++ b/src/pair_gran.cpp
@@ -76,7 +76,7 @@
 #include "compute_pair_gran_local.h"
 #include "pair_gran.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/pair_gran.h b/src/pair_gran.h
index 3e3c9ce..52b6d01 100644
--- a/src/pair_gran.h
+++ b/src/pair_gran.h
@@ -54,7 +54,7 @@
 
 namespace LCM = LIGGGHTS::ContactModels;
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class PairGran : public Pair, public LIGGGHTS::IContactHistorySetup {
 public:
diff --git a/src/pair_gran_base.h b/src/pair_gran_base.h
index 33fe26f..8fd11f2 100644
--- a/src/pair_gran_base.h
+++ b/src/pair_gran_base.h
@@ -69,7 +69,7 @@ using namespace ContactModels;
 
 namespace PairStyles {
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 template<typename ContactModel>
 class Granular : private Pointers, public IGranularPairStyle {
diff --git a/src/pair_gran_proxy.cpp b/src/pair_gran_proxy.cpp
index b6624f9..638cf77 100644
--- a/src/pair_gran_proxy.cpp
+++ b/src/pair_gran_proxy.cpp
@@ -48,7 +48,7 @@
 #include "granular_pair_style.h"
 #include "contact_models.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace LIGGGHTS::PairStyles;
 
 PairGranProxy::PairGranProxy(LAMMPS * lmp) : PairGran(lmp), impl(NULL)
diff --git a/src/pair_gran_proxy.h b/src/pair_gran_proxy.h
index aeef3d2..cbb2496 100644
--- a/src/pair_gran_proxy.h
+++ b/src/pair_gran_proxy.h
@@ -57,7 +57,7 @@ PairStyle(gran_bubble,PairGranProxy)
 #include "pair_gran.h"
 #include "granular_pair_style.h"
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
 class PairGranProxy : public PairGran
 {
diff --git a/src/pair_hybrid.cpp b/src/pair_hybrid.cpp
index 85b41f8..1a98b02 100644
--- a/src/pair_hybrid.cpp
+++ b/src/pair_hybrid.cpp
@@ -58,7 +58,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/pair_hybrid.h b/src/pair_hybrid.h
index ee90c0d..bce434a 100644
--- a/src/pair_hybrid.h
+++ b/src/pair_hybrid.h
@@ -55,7 +55,7 @@ PairStyle(hybrid,PairHybrid)
 #include "stdio.h"
 #include "pair.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class PairHybrid : public Pair {
  public:
diff --git a/src/pair_hybrid_overlay.cpp b/src/pair_hybrid_overlay.cpp
index 203bf0b..a7636bc 100644
--- a/src/pair_hybrid_overlay.cpp
+++ b/src/pair_hybrid_overlay.cpp
@@ -53,7 +53,7 @@
 #include "neigh_request.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/pair_hybrid_overlay.h b/src/pair_hybrid_overlay.h
index b16bc35..f19b2eb 100644
--- a/src/pair_hybrid_overlay.h
+++ b/src/pair_hybrid_overlay.h
@@ -54,7 +54,7 @@ PairStyle(hybrid/overlay,PairHybridOverlay)
 
 #include "pair_hybrid.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class PairHybridOverlay : public PairHybrid {
  public:
diff --git a/src/pair_soft.cpp b/src/pair_soft.cpp
index 3eff55a..a610d0c 100644
--- a/src/pair_soft.cpp
+++ b/src/pair_soft.cpp
@@ -57,7 +57,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace MathConst;
 
 /* ---------------------------------------------------------------------- */
diff --git a/src/pair_soft.h b/src/pair_soft.h
index aa5815b..061c5fc 100644
--- a/src/pair_soft.h
+++ b/src/pair_soft.h
@@ -54,7 +54,7 @@ PairStyle(soft,PairSoft)
 
 #include "pair.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class PairSoft : public Pair {
   friend class Pair;
diff --git a/src/pair_sph.cpp b/src/pair_sph.cpp
index ac9e72d..455b17e 100644
--- a/src/pair_sph.cpp
+++ b/src/pair_sph.cpp
@@ -64,7 +64,7 @@
 #include "fix_property_global.h"
 #include "timer.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/pair_sph.h b/src/pair_sph.h
index f2b22c5..dadee69 100644
--- a/src/pair_sph.h
+++ b/src/pair_sph.h
@@ -49,7 +49,7 @@
 
 #include "pair.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class PairSph : public Pair {
  public:
diff --git a/src/pair_sph_artvisc_tenscorr.cpp b/src/pair_sph_artvisc_tenscorr.cpp
index 83612c1..302315a 100644
--- a/src/pair_sph_artvisc_tenscorr.cpp
+++ b/src/pair_sph_artvisc_tenscorr.cpp
@@ -61,7 +61,7 @@
 #include "sph_kernels.h"
 #include "timer.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/pair_sph_artvisc_tenscorr.h b/src/pair_sph_artvisc_tenscorr.h
index 69fa6ee..731d2da 100644
--- a/src/pair_sph_artvisc_tenscorr.h
+++ b/src/pair_sph_artvisc_tenscorr.h
@@ -49,7 +49,7 @@ PairStyle(sph/artVisc/tensCorr,PairSphArtviscTenscorr)
 
 #include "pair_sph.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class PairSphArtviscTenscorr : public PairSph {
 
diff --git a/src/particleToInsert.cpp b/src/particleToInsert.cpp
index 7ceab92..4e6c753 100644
--- a/src/particleToInsert.cpp
+++ b/src/particleToInsert.cpp
@@ -51,7 +51,7 @@
 #include "math_extra_liggghts.h"
 #include "modify.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 ParticleToInsert::ParticleToInsert(LAMMPS* lmp,int ns) : Pointers(lmp)
 {
diff --git a/src/particleToInsert.h b/src/particleToInsert.h
index bc7075b..ae327d0 100644
--- a/src/particleToInsert.h
+++ b/src/particleToInsert.h
@@ -47,9 +47,9 @@
 #include "pointers.h"
 #include "region_neighbor_list.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
     class ParticleToInsert : protected Pointers
     {
      public:
diff --git a/src/particleToInsert_multisphere.cpp b/src/particleToInsert_multisphere.cpp
index aa12a00..8732b92 100644
--- a/src/particleToInsert_multisphere.cpp
+++ b/src/particleToInsert_multisphere.cpp
@@ -53,7 +53,7 @@
 #include "string.h"
 #include "math_extra_liggghts.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/particleToInsert_multisphere.h b/src/particleToInsert_multisphere.h
index 40c1bae..8a18086 100644
--- a/src/particleToInsert_multisphere.h
+++ b/src/particleToInsert_multisphere.h
@@ -44,9 +44,9 @@
 
 #include "particleToInsert.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
     class ParticleToInsertMultisphere : public ParticleToInsert
     {
         public:
diff --git a/src/pointers.h b/src/pointers.h
index 9cbb86a..9e05207 100644
--- a/src/pointers.h
+++ b/src/pointers.h
@@ -63,7 +63,7 @@
 #include "mpi.h"
 #include "lammps.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 // universal defines inside namespace
 
diff --git a/src/primitive_wall.h b/src/primitive_wall.h
index facc6b4..6f4c8c1 100644
--- a/src/primitive_wall.h
+++ b/src/primitive_wall.h
@@ -48,7 +48,7 @@
 #include "neighbor.h"
 #include "primitive_wall_definitions.h"
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
 
   /*
@@ -144,5 +144,5 @@ namespace LAMMPS_NS
 
     return 0;
   }
-} /* namespace LAMMPS_NS */
+} /* namespace LIGGGHTS_NS */
 #endif /* PRIMITIVEWALL_H_ */
diff --git a/src/primitive_wall_definitions.h b/src/primitive_wall_definitions.h
index 8cfc3b7..44fe79d 100644
--- a/src/primitive_wall_definitions.h
+++ b/src/primitive_wall_definitions.h
@@ -54,7 +54,7 @@
  *     chooseNeighlistTemplate() located at the bottom of this file
  */
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
   namespace PRIMITIVE_WALL_DEFINITIONS
   {
diff --git a/src/probability_distribution.h b/src/probability_distribution.h
index 5a15c59..68726bc 100644
--- a/src/probability_distribution.h
+++ b/src/probability_distribution.h
@@ -55,7 +55,7 @@ namespace LMP_PROBABILITY_NS {
   class PDF
   {
     public:
-      PDF(LAMMPS_NS::Error *error)
+      PDF(LIGGGHTS_NS::Error *error)
       {
           mu_ = sigma_ = min_ = max_ = 0.;
           h1_ = h2_ = 0.;
@@ -75,7 +75,7 @@ namespace LMP_PROBABILITY_NS {
       // if 1, pdf is shifted from number to mass based pdf
       int mass_shift_;
 
-      LAMMPS_NS::Error *error;
+      LIGGGHTS_NS::Error *error;
 
       inline int rand_style()
       { return rand_style_; }
@@ -118,7 +118,7 @@ namespace LMP_PROBABILITY_NS {
       return 0.;
   }
 
-  template <int RAND_STYLE> inline double rand_value(PDF *pdf,LAMMPS_NS::RanPark *rp)
+  template <int RAND_STYLE> inline double rand_value(PDF *pdf,LIGGGHTS_NS::RanPark *rp)
   {
       pdf->error->all(FLERR,"Faulty usage of Probability::rand");
       return 0.;
@@ -147,7 +147,7 @@ namespace LMP_PROBABILITY_NS {
      return pdf->mu_;
   }
 
-  template<> inline double rand_value<RANDOM_CONSTANT>(PDF *pdf,LAMMPS_NS::RanPark *rp)
+  template<> inline double rand_value<RANDOM_CONSTANT>(PDF *pdf,LIGGGHTS_NS::RanPark *rp)
   {
      return pdf->mu_;
   }
@@ -183,7 +183,7 @@ namespace LMP_PROBABILITY_NS {
         return sqrt(pdf->h1_/(2.*(pdf->h2_-0.5)));
   }
 
-  template<> inline double rand_value<RANDOM_UNIFORM>(PDF *pdf,LAMMPS_NS::RanPark *rp)
+  template<> inline double rand_value<RANDOM_UNIFORM>(PDF *pdf,LIGGGHTS_NS::RanPark *rp)
   {
      double rn =  rp->uniform();
      if(!pdf->mass_shift_)
@@ -221,7 +221,7 @@ namespace LMP_PROBABILITY_NS {
      return pdf->mu_;
   }
 
-  template<> inline double rand_value<RANDOM_GAUSSIAN>(PDF *pdf,LAMMPS_NS::RanPark *rp)
+  template<> inline double rand_value<RANDOM_GAUSSIAN>(PDF *pdf,LIGGGHTS_NS::RanPark *rp)
   {
      if(pdf->mass_shift_) pdf->error->all(FLERR,"mass distribution not implemented for gaussian");
      double value;
@@ -265,7 +265,7 @@ namespace LMP_PROBABILITY_NS {
      return exp(pdf->mu_ + 0.5 * pdf->sigma_ * pdf->sigma_);
   }
 
-  template<> inline double rand_value<RANDOM_LOGNORMAL>(PDF *pdf,LAMMPS_NS::RanPark *rp)
+  template<> inline double rand_value<RANDOM_LOGNORMAL>(PDF *pdf,LIGGGHTS_NS::RanPark *rp)
   {
      if(pdf->mass_shift_) pdf->error->all(FLERR,"mass distribution not implemented for lognormal");
      double value;
@@ -300,7 +300,7 @@ namespace LMP_PROBABILITY_NS {
       return 0.;
   }
 
-  inline double rand(PDF *pdf,LAMMPS_NS::RanPark *rp)
+  inline double rand(PDF *pdf,LIGGGHTS_NS::RanPark *rp)
   {
       if(pdf->rand_style_ == RANDOM_CONSTANT) return rand_value<RANDOM_CONSTANT>(pdf,rp);
       else if(pdf->rand_style_ == RANDOM_UNIFORM) return rand_value<RANDOM_UNIFORM>(pdf,rp);
diff --git a/src/procmap.cpp b/src/procmap.cpp
index abfe8ae..d7a415f 100644
--- a/src/procmap.cpp
+++ b/src/procmap.cpp
@@ -57,7 +57,7 @@
 #include <map>
 #include <string>
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define MAXLINE 128
 
diff --git a/src/procmap.h b/src/procmap.h
index 694661e..b6b5c63 100644
--- a/src/procmap.h
+++ b/src/procmap.h
@@ -48,7 +48,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ProcMap : protected Pointers {
  public:
diff --git a/src/properties.cpp b/src/properties.cpp
index 214d639..08bae69 100644
--- a/src/properties.cpp
+++ b/src/properties.cpp
@@ -54,7 +54,7 @@
 #define BIG 1e20
 #define SMALL 1e-6
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/properties.h b/src/properties.h
index 7c7d6b6..188b221 100644
--- a/src/properties.h
+++ b/src/properties.h
@@ -44,7 +44,7 @@
 #include "lammps.h"
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Properties: protected Pointers
 {
diff --git a/src/property_registry.cpp b/src/property_registry.cpp
index 044892b..09017e6 100644
--- a/src/property_registry.cpp
+++ b/src/property_registry.cpp
@@ -55,7 +55,7 @@
 #include "property_registry.h"
 
 using namespace std;
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 PropertyRegistry::PropertyRegistry(LAMMPS* lmp) : Pointers(lmp), properties(lmp)
 {
diff --git a/src/property_registry.h b/src/property_registry.h
index fcf2cad..9baad42 100644
--- a/src/property_registry.h
+++ b/src/property_registry.h
@@ -56,7 +56,7 @@
 #include "error.h"
 #include "modify.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 class PropertyRegistry;
 
diff --git a/src/random_mars.cpp b/src/random_mars.cpp
index e79bd8f..3556c59 100644
--- a/src/random_mars.cpp
+++ b/src/random_mars.cpp
@@ -50,7 +50,7 @@
 #include "random_mars.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/random_mars.h b/src/random_mars.h
index 73a6c7a..f51627b 100644
--- a/src/random_mars.h
+++ b/src/random_mars.h
@@ -48,7 +48,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class RanMars : protected Pointers {
  public:
diff --git a/src/random_park.cpp b/src/random_park.cpp
index 4c95b6d..df8ba83 100644
--- a/src/random_park.cpp
+++ b/src/random_park.cpp
@@ -49,7 +49,7 @@
 #include "random_park.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define IA 16807
 #define IM 2147483647
diff --git a/src/random_park.h b/src/random_park.h
index 790d356..8d65baa 100644
--- a/src/random_park.h
+++ b/src/random_park.h
@@ -48,7 +48,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class RanPark : protected Pointers {
   friend class Set;
diff --git a/src/read_data.cpp b/src/read_data.cpp
index 64bc34d..4686172 100644
--- a/src/read_data.cpp
+++ b/src/read_data.cpp
@@ -77,7 +77,7 @@
 #include "modify.h" 
 #include "fix.h" 
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define MAXLINE 256
 #define LB_FACTOR 1.1
diff --git a/src/read_data.h b/src/read_data.h
index 68062b7..adb687c 100644
--- a/src/read_data.h
+++ b/src/read_data.h
@@ -61,7 +61,7 @@ CommandStyle(read_data,ReadData)
 #include "stdio.h"
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ReadData : protected Pointers {
  public:
diff --git a/src/read_dump.cpp b/src/read_dump.cpp
index 131cf99..fa268c3 100644
--- a/src/read_dump.cpp
+++ b/src/read_dump.cpp
@@ -66,7 +66,7 @@
 #include "error.h"
 #include "memory.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define CHUNK 1024
 #define EPSILON 1.0e-6
diff --git a/src/read_dump.h b/src/read_dump.h
index 03d235c..0387548 100644
--- a/src/read_dump.h
+++ b/src/read_dump.h
@@ -55,7 +55,7 @@ CommandStyle(read_dump,ReadDump)
 #include "stdio.h"
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ReadDump : protected Pointers {
  friend class Rerun;
diff --git a/src/read_restart.cpp b/src/read_restart.cpp
index 9e1f15e..5490f2a 100644
--- a/src/read_restart.cpp
+++ b/src/read_restart.cpp
@@ -71,7 +71,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 // same as write_restart.cpp
 
diff --git a/src/read_restart.h b/src/read_restart.h
index baf960c..256a83d 100644
--- a/src/read_restart.h
+++ b/src/read_restart.h
@@ -55,7 +55,7 @@ CommandStyle(read_restart,ReadRestart)
 #include "stdio.h"
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ReadRestart : protected Pointers {
  public:
diff --git a/src/reader.cpp b/src/reader.cpp
index cdadd09..6c989bd 100644
--- a/src/reader.cpp
+++ b/src/reader.cpp
@@ -48,7 +48,7 @@
 #include "reader.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/reader.h b/src/reader.h
index 6ed3ecb..b9023bd 100644
--- a/src/reader.h
+++ b/src/reader.h
@@ -48,7 +48,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Reader : protected Pointers {
  public:
diff --git a/src/reader_native.cpp b/src/reader_native.cpp
index 1c94d2b..2a7737a 100644
--- a/src/reader_native.cpp
+++ b/src/reader_native.cpp
@@ -50,7 +50,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define MAXLINE 1024        // max line length in dump file
 
diff --git a/src/reader_native.h b/src/reader_native.h
index d1e3ef8..aeb9400 100644
--- a/src/reader_native.h
+++ b/src/reader_native.h
@@ -54,7 +54,7 @@ ReaderStyle(native,ReaderNative)
 
 #include "reader.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ReaderNative : public Reader {
  public:
diff --git a/src/reader_xyz.cpp b/src/reader_xyz.cpp
index af0c243..55947b9 100644
--- a/src/reader_xyz.cpp
+++ b/src/reader_xyz.cpp
@@ -54,7 +54,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define MAXLINE 1024        // max line length in dump file
 
diff --git a/src/reader_xyz.h b/src/reader_xyz.h
index 391adfa..d66e81e 100644
--- a/src/reader_xyz.h
+++ b/src/reader_xyz.h
@@ -54,7 +54,7 @@ ReaderStyle(xyz,ReaderXYZ)
 
 #include "reader.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class ReaderXYZ : public Reader {
  public:
diff --git a/src/region.cpp b/src/region.cpp
index 878bfb1..5a9d31b 100644
--- a/src/region.cpp
+++ b/src/region.cpp
@@ -68,7 +68,7 @@
 
 #define SMALL 1e-8
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/region.h b/src/region.h
index 75841dd..94114e6 100644
--- a/src/region.h
+++ b/src/region.h
@@ -54,7 +54,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Region : protected Pointers {
  public:
diff --git a/src/region_block.cpp b/src/region_block.cpp
index 8d31116..e84ef1f 100644
--- a/src/region_block.cpp
+++ b/src/region_block.cpp
@@ -50,7 +50,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define BIG 1.0e20
 
diff --git a/src/region_block.h b/src/region_block.h
index ca6fc6b..f448219 100644
--- a/src/region_block.h
+++ b/src/region_block.h
@@ -54,7 +54,7 @@ RegionStyle(block,RegBlock)
 
 #include "region.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class RegBlock : public Region {
   friend class FixPour;
diff --git a/src/region_cone.cpp b/src/region_cone.cpp
index 55b6ddb..ac90760 100644
--- a/src/region_cone.cpp
+++ b/src/region_cone.cpp
@@ -55,7 +55,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define BIG 1.0e20
 
diff --git a/src/region_cone.h b/src/region_cone.h
index f737390..7c585dc 100644
--- a/src/region_cone.h
+++ b/src/region_cone.h
@@ -54,7 +54,7 @@ RegionStyle(cone,RegCone)
 
 #include "region.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class RegCone : public Region {
  public:
diff --git a/src/region_cylinder.cpp b/src/region_cylinder.cpp
index fe88c49..b4adc29 100644
--- a/src/region_cylinder.cpp
+++ b/src/region_cylinder.cpp
@@ -54,7 +54,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define BIG 1.0e20
 enum{CONSTANT,VARIABLE};
diff --git a/src/region_cylinder.h b/src/region_cylinder.h
index 5f2e6cd..cd059ae 100644
--- a/src/region_cylinder.h
+++ b/src/region_cylinder.h
@@ -54,7 +54,7 @@ RegionStyle(cylinder,RegCylinder)
 
 #include "region.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class RegCylinder : public Region {
   friend class FixPour;
diff --git a/src/region_intersect.cpp b/src/region_intersect.cpp
index a272467..8f21086 100644
--- a/src/region_intersect.cpp
+++ b/src/region_intersect.cpp
@@ -50,7 +50,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/region_intersect.h b/src/region_intersect.h
index f816bf7..523a222 100644
--- a/src/region_intersect.h
+++ b/src/region_intersect.h
@@ -54,7 +54,7 @@ RegionStyle(intersect,RegIntersect)
 
 #include "region.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class RegIntersect : public Region {
  public:
diff --git a/src/region_mesh_tet.cpp b/src/region_mesh_tet.cpp
index c29a59b..d552cde 100644
--- a/src/region_mesh_tet.cpp
+++ b/src/region_mesh_tet.cpp
@@ -57,7 +57,7 @@
 #define DELTA_TET 1000
 #define BIG 1.e20
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/region_mesh_tet.h b/src/region_mesh_tet.h
index 2514c4b..10251e3 100644
--- a/src/region_mesh_tet.h
+++ b/src/region_mesh_tet.h
@@ -52,7 +52,7 @@ RegionStyle(mesh/tet,RegTetMesh)
 #include "region.h"
 #include "region_neighbor_list.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class RegTetMesh : public Region {
 
diff --git a/src/region_neighbor_list.h b/src/region_neighbor_list.h
index 2d1cae4..9cf77e9 100644
--- a/src/region_neighbor_list.h
+++ b/src/region_neighbor_list.h
@@ -63,7 +63,7 @@
 #include "math_extra_liggghts_superquadric.h"
 #endif
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 /**
  * @brief A neighbor list of of a certain region
@@ -76,12 +76,12 @@ namespace LAMMPS_NS {
  */
 
 template<bool INTERPOLATE>
-class RegionNeighborList : protected LAMMPS_NS::Pointers
+class RegionNeighborList : protected LIGGGHTS_NS::Pointers
 {
   friend class FixAddforceSteadystate;
 
   public:
-    RegionNeighborList(LAMMPS_NS::LAMMPS *lmp);
+    RegionNeighborList(LIGGGHTS_NS::LAMMPS *lmp);
     virtual ~RegionNeighborList() {}
 
     bool hasOverlap(double * x, double radius) const;
@@ -99,7 +99,7 @@ class RegionNeighborList : protected LAMMPS_NS::Pointers
 
     inline void setBoundingBox_calc_interpolation_stencil(Bin<INTERPOLATE> &it,int ibin,int ix,int iy, int iz) const;
 
-    virtual bool setBoundingBox(LAMMPS_NS::BoundingBox & bb, double maxrad, bool extend = true, bool failsafe = false);
+    virtual bool setBoundingBox(LIGGGHTS_NS::BoundingBox & bb, double maxrad, bool extend = true, bool failsafe = false);
     virtual BoundingBox setBoundingBoxRegion(const Region &region, double maxrad, bool extend = true, bool failsafe = false);
 
     bool isInBoundingBox(double *pos) const;
@@ -114,7 +114,7 @@ class RegionNeighborList : protected LAMMPS_NS::Pointers
     bool boundingBoxSet() const
     {return bbox_set; }
 
-    std::vector<LAMMPS_NS::Bin<INTERPOLATE> > getBins() const
+    std::vector<LIGGGHTS_NS::Bin<INTERPOLATE> > getBins() const
     {return bins; }
 
     double invBinVolume() const
diff --git a/src/region_neighbor_list_definitions.h b/src/region_neighbor_list_definitions.h
index 5ed8898..83d1823 100644
--- a/src/region_neighbor_list_definitions.h
+++ b/src/region_neighbor_list_definitions.h
@@ -52,7 +52,7 @@
 #include "bounding_box.h"
 #include "superquadric_flag.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Region;
 
@@ -79,7 +79,7 @@ class Particle<false /*interpolation*/>
 
   Particle(int _i,double * _pos, double _rad, int,int,double,double,double) {
     index = _i;
-    LAMMPS_NS::vectorCopy3D(_pos, x);
+    LIGGGHTS_NS::vectorCopy3D(_pos, x);
     radius = _rad;
 
 #ifdef SUPERQUADRIC_ACTIVE_FLAG
@@ -92,10 +92,10 @@ class Particle<false /*interpolation*/>
 #ifdef SUPERQUADRIC_ACTIVE_FLAG
   Particle(double * pos, double rad, double *quaternion_, double *shape_) {
       index = -1;
-      LAMMPS_NS::vectorCopy3D(pos, x);
+      LIGGGHTS_NS::vectorCopy3D(pos, x);
       radius = rad;
-      LAMMPS_NS::vectorCopy4D(quaternion_, quaternion);
-      LAMMPS_NS::vectorCopy3D(shape_, shape);
+      LIGGGHTS_NS::vectorCopy4D(quaternion_, quaternion);
+      LIGGGHTS_NS::vectorCopy3D(shape_, shape);
     }
 #endif
 };
@@ -119,7 +119,7 @@ class Particle<true /*interpolation*/>
 
   Particle(int _i,double * _pos, double _rad,int _ibin,int _quadrant,double _wx = -1.,double _wy = -1.,double _wz = -1.) {
     index = _i;
-    LAMMPS_NS::vectorCopy3D(_pos, x);
+    LIGGGHTS_NS::vectorCopy3D(_pos, x);
     radius = _rad;
     ibin = _ibin;
     quadrant_bitfield = _quadrant;
@@ -136,10 +136,10 @@ class Particle<true /*interpolation*/>
 #ifdef SUPERQUADRIC_ACTIVE_FLAG
   Particle(double * pos, double rad, double *quaternion_, double *shape_) {
       index = -1;
-      LAMMPS_NS::vectorCopy3D(pos, x);
+      LIGGGHTS_NS::vectorCopy3D(pos, x);
       radius = rad;
-      LAMMPS_NS::vectorCopy4D(quaternion_, quaternion);
-      LAMMPS_NS::vectorCopy3D(shape_, shape);
+      LIGGGHTS_NS::vectorCopy4D(quaternion_, quaternion);
+      LIGGGHTS_NS::vectorCopy3D(shape_, shape);
       TODO_QUADRANT,WEIGHTS
     }
 #endif
diff --git a/src/region_plane.cpp b/src/region_plane.cpp
index f4d8815..93dcf31 100644
--- a/src/region_plane.cpp
+++ b/src/region_plane.cpp
@@ -50,7 +50,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/region_plane.h b/src/region_plane.h
index c83e09b..e5a4169 100644
--- a/src/region_plane.h
+++ b/src/region_plane.h
@@ -54,7 +54,7 @@ RegionStyle(plane,RegPlane)
 
 #include "region.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class RegPlane : public Region {
  public:
diff --git a/src/region_prism.cpp b/src/region_prism.cpp
index 2957555..0fe58fc 100644
--- a/src/region_prism.cpp
+++ b/src/region_prism.cpp
@@ -55,7 +55,7 @@
 #include "force.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define BIG 1.0e20
 
diff --git a/src/region_prism.h b/src/region_prism.h
index e08d898..243d3c5 100644
--- a/src/region_prism.h
+++ b/src/region_prism.h
@@ -54,7 +54,7 @@ RegionStyle(prism,RegPrism)
 
 #include "region.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class RegPrism : public Region {
   friend class CreateBox;
diff --git a/src/region_sphere.cpp b/src/region_sphere.cpp
index ac61c36..d605a61 100644
--- a/src/region_sphere.cpp
+++ b/src/region_sphere.cpp
@@ -53,7 +53,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 enum{CONSTANT,VARIABLE};
 
diff --git a/src/region_sphere.h b/src/region_sphere.h
index 98b0735..7324b24 100644
--- a/src/region_sphere.h
+++ b/src/region_sphere.h
@@ -54,7 +54,7 @@ RegionStyle(sphere,RegSphere)
 
 #include "region.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class RegSphere : public Region {
  public:
diff --git a/src/region_union.cpp b/src/region_union.cpp
index 61165db..09195cc 100644
--- a/src/region_union.cpp
+++ b/src/region_union.cpp
@@ -50,7 +50,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define BIG 1.0e20
 
diff --git a/src/region_union.h b/src/region_union.h
index c136a60..ecc374c 100644
--- a/src/region_union.h
+++ b/src/region_union.h
@@ -54,7 +54,7 @@ RegionStyle(union,RegUnion)
 
 #include "region.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class RegUnion : public Region {
  public:
diff --git a/src/region_wedge.cpp b/src/region_wedge.cpp
index 1e73276..c944a2c 100644
--- a/src/region_wedge.cpp
+++ b/src/region_wedge.cpp
@@ -51,7 +51,7 @@
 #include "update.h"
 #include "vector_liggghts.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define BIG 1.0e20
 
diff --git a/src/region_wedge.h b/src/region_wedge.h
index 083b1d8..61f3628 100644
--- a/src/region_wedge.h
+++ b/src/region_wedge.h
@@ -69,7 +69,7 @@ RegionStyle(wedge,RegWedge)
 //              if axis == z then starting from x-axis
 //   dang ... angle between the wedge's ending face
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
 class RegWedge : public Region
 {
diff --git a/src/replicate.cpp b/src/replicate.cpp
index dcf017a..1c871ea 100644
--- a/src/replicate.cpp
+++ b/src/replicate.cpp
@@ -56,7 +56,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define LB_FACTOR 1.1
 #define EPSILON   1.0e-6
diff --git a/src/replicate.h b/src/replicate.h
index 405dca3..c1fddd7 100644
--- a/src/replicate.h
+++ b/src/replicate.h
@@ -54,7 +54,7 @@ CommandStyle(replicate,Replicate)
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Replicate : protected Pointers {
  public:
diff --git a/src/respa.cpp b/src/respa.cpp
index 1de7be7..6223554 100644
--- a/src/respa.cpp
+++ b/src/respa.cpp
@@ -70,7 +70,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/respa.h b/src/respa.h
index 740ec3c..f1c7f1f 100644
--- a/src/respa.h
+++ b/src/respa.h
@@ -54,7 +54,7 @@ IntegrateStyle(respa,Respa)
 
 #include "integrate.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Respa : public Integrate {
  public:
diff --git a/src/rolling_model_cdt.h b/src/rolling_model_cdt.h
index 3ab43c4..f9b159b 100644
--- a/src/rolling_model_cdt.h
+++ b/src/rolling_model_cdt.h
@@ -54,7 +54,7 @@ ROLLING_MODEL(ROLLING_CDT,cdt,1)
 namespace LIGGGHTS {
 namespace ContactModels
 {
-  using namespace LAMMPS_NS;
+  using namespace LIGGGHTS_NS;
 
   template<>
   class RollingModel<ROLLING_CDT> : protected Pointers {
diff --git a/src/rolling_model_epsd.h b/src/rolling_model_epsd.h
index d99848a..7ba606b 100644
--- a/src/rolling_model_epsd.h
+++ b/src/rolling_model_epsd.h
@@ -58,7 +58,7 @@ ROLLING_MODEL(ROLLING_EPSD,epsd,2)
 namespace LIGGGHTS {
 namespace ContactModels
 {
-  using namespace LAMMPS_NS;
+  using namespace LIGGGHTS_NS;
 
   template<>
   class RollingModel<ROLLING_EPSD> : protected Pointers
diff --git a/src/rolling_model_epsd2.h b/src/rolling_model_epsd2.h
index 3683342..eb81032 100644
--- a/src/rolling_model_epsd2.h
+++ b/src/rolling_model_epsd2.h
@@ -60,7 +60,7 @@ ROLLING_MODEL(ROLLING_EPSD2,epsd2,3)
 namespace LIGGGHTS {
 namespace ContactModels
 {
-  using namespace LAMMPS_NS;
+  using namespace LIGGGHTS_NS;
 
   template<>
   class RollingModel<ROLLING_EPSD2> : protected Pointers
diff --git a/src/rolling_model_epsd3.h b/src/rolling_model_epsd3.h
index d588df2..67177ac 100644
--- a/src/rolling_model_epsd3.h
+++ b/src/rolling_model_epsd3.h
@@ -56,7 +56,7 @@ ROLLING_MODEL(ROLLING_EPSD3,epsd3,4)
 namespace LIGGGHTS {
 namespace ContactModels
 {
-  using namespace LAMMPS_NS;
+  using namespace LIGGGHTS_NS;
 
   template<>
   class RollingModel<ROLLING_EPSD3> : protected Pointers
diff --git a/src/rotate.cpp b/src/rotate.cpp
index 47cf889..f1de388 100644
--- a/src/rotate.cpp
+++ b/src/rotate.cpp
@@ -52,7 +52,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/rotate.h b/src/rotate.h
index 2d53f65..ed29886 100644
--- a/src/rotate.h
+++ b/src/rotate.h
@@ -49,7 +49,7 @@ CommandStyle(rotate,Rotate)
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Rotate : protected Pointers {
  public:
diff --git a/src/run.cpp b/src/run.cpp
index f38b3f0..9383b22 100644
--- a/src/run.cpp
+++ b/src/run.cpp
@@ -57,7 +57,7 @@
 #include "error.h"
 #include "force.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define MAXLINE 2048
 
diff --git a/src/run.h b/src/run.h
index fd78597..0bb5f44 100644
--- a/src/run.h
+++ b/src/run.h
@@ -54,7 +54,7 @@ CommandStyle(run,Run)
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Run : protected Pointers {
  public:
diff --git a/src/scalar_container.h b/src/scalar_container.h
index eb6df9a..428f049 100644
--- a/src/scalar_container.h
+++ b/src/scalar_container.h
@@ -48,7 +48,7 @@
 #include "memory.h"
 #include <limits>
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
   template<typename T>
   class ScalarContainer : public GeneralContainer <T, 1, 1>
@@ -241,5 +241,5 @@ namespace LAMMPS_NS
 
       return len;
   }
-} /* LAMMPS_NS */
+} /* LIGGGHTS_NS */
 #endif /* SCALARCONTAINER_H_ */
diff --git a/src/set.cpp b/src/set.cpp
index a91935a..6c88e78 100644
--- a/src/set.cpp
+++ b/src/set.cpp
@@ -85,7 +85,7 @@
 #include "fix_sph.h" 
 #include "update.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace MathConst;
 
 enum{ATOM_SELECT,MOL_SELECT,TYPE_SELECT,GROUP_SELECT,REGION_SELECT};
diff --git a/src/set.h b/src/set.h
index 27aef4d..ec978db 100644
--- a/src/set.h
+++ b/src/set.h
@@ -60,7 +60,7 @@ CommandStyle(set,Set)
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Set : protected Pointers {
  public:
diff --git a/src/settings.h b/src/settings.h
index 0b6a450..12ffee1 100644
--- a/src/settings.h
+++ b/src/settings.h
@@ -48,7 +48,7 @@
 #include <sstream>
 #include <stdlib.h>
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace std;
 
 template<typename T>
diff --git a/src/special.cpp b/src/special.cpp
index 2b39d5c..e195c82 100644
--- a/src/special.cpp
+++ b/src/special.cpp
@@ -53,7 +53,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 // allocate space for static class variable
 
diff --git a/src/special.h b/src/special.h
index 24b644c..dfe5a6f 100644
--- a/src/special.h
+++ b/src/special.h
@@ -48,7 +48,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Special : protected Pointers {
  public:
diff --git a/src/string_liggghts.h b/src/string_liggghts.h
index 208b69a..28cdbb5 100644
--- a/src/string_liggghts.h
+++ b/src/string_liggghts.h
@@ -41,7 +41,7 @@
 #ifndef LMP_STRING_LIGGGHTS_H
 #define LMP_STRING_LIGGGHTS_H
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 //================================================
 //SOME VERY SIMPLE VECTOR OPERATIONS
@@ -67,6 +67,6 @@ inline bool strEndWith(const char * str, const char * suffix) {
   return strncmp( str + str_len - suffix_len, suffix, suffix_len ) == 0;
 }
 
-} // LAMMPS_NS
+} // LIGGGHTS_NS
 
 #endif
diff --git a/src/suffix.h b/src/suffix.h
index d05cafc..c03e310 100644
--- a/src/suffix.h
+++ b/src/suffix.h
@@ -46,7 +46,7 @@
 #ifndef LMP_SUFFIX_H
 #define LMP_SUFFIX_H
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 namespace Suffix {
   static const int NONE = 0;
diff --git a/src/surface_mesh.h b/src/surface_mesh.h
index 6512fd7..f923174 100644
--- a/src/surface_mesh.h
+++ b/src/surface_mesh.h
@@ -62,7 +62,7 @@
 
 using namespace LAMMPS_MEMORY_NS;
 
-namespace LAMMPS_NS{
+namespace LIGGGHTS_NS{
 
 template<int NUM_NODES, int NUM_NEIGH_MAX>
 class SurfaceMesh : public TrackingMesh<NUM_NODES>
@@ -254,5 +254,5 @@ class SurfaceMesh : public TrackingMesh<NUM_NODES>
 
 // *************************************
 
-} /* LAMMPS_NS */
+} /* LIGGGHTS_NS */
 #endif /* SURFACEMESH_H_ */
diff --git a/src/tet_mesh.h b/src/tet_mesh.h
index ad03cb6..73f2e25 100644
--- a/src/tet_mesh.h
+++ b/src/tet_mesh.h
@@ -44,7 +44,7 @@
 
 #include "volume_mesh.h"
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
 
   class TetMesh : public VolumeMesh<4,4,3>
@@ -76,5 +76,5 @@ namespace LAMMPS_NS
   #include "tet_mesh_I.h"
   // *************************************
 
-} /* LAMMPS_NS */
+} /* LIGGGHTS_NS */
 #endif /* TRIMESH_H_ */
diff --git a/src/thermo.cpp b/src/thermo.cpp
index 1108e87..3908524 100644
--- a/src/thermo.cpp
+++ b/src/thermo.cpp
@@ -80,7 +80,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace MathConst;
 
 // customize a new keyword by adding to this list:
diff --git a/src/thermo.h b/src/thermo.h
index e49894a..ae7410a 100644
--- a/src/thermo.h
+++ b/src/thermo.h
@@ -54,7 +54,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Thermo : protected Pointers {
   friend class WriteRestart;           // accesses lostflag
diff --git a/src/timer.cpp b/src/timer.cpp
index ea0d897..2aceee6 100644
--- a/src/timer.cpp
+++ b/src/timer.cpp
@@ -48,7 +48,7 @@
 #include "memory.h"
 #include "modify.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/timer.h b/src/timer.h
index e159c9c..0a98db7 100644
--- a/src/timer.h
+++ b/src/timer.h
@@ -51,7 +51,7 @@
 enum{TIME_LOOP,TIME_PAIR,TIME_BOND,TIME_KSPACE,TIME_NEIGHBOR,
      TIME_COMM,TIME_OUTPUT,TIME_MODIFY,TIME_N};
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Timer : protected Pointers {
  public:
diff --git a/src/tracking_mesh.h b/src/tracking_mesh.h
index 3361e7f..3632e5e 100644
--- a/src/tracking_mesh.h
+++ b/src/tracking_mesh.h
@@ -53,7 +53,7 @@
 #include "container.h"
 #include "memory.h"
 
-namespace LAMMPS_NS{
+namespace LIGGGHTS_NS{
 
   template<int NUM_NODES>
   class TrackingMesh : public MultiNodeMeshParallel<NUM_NODES>
@@ -168,5 +168,5 @@ namespace LAMMPS_NS{
   #include "tracking_mesh_I.h"
   // *************************************
 
-} /* LAMMPS_NS */
+} /* LIGGGHTS_NS */
 #endif /* TRACKINGMESH_H_ */
diff --git a/src/tri_mesh.h b/src/tri_mesh.h
index d3f316c..fadf51c 100644
--- a/src/tri_mesh.h
+++ b/src/tri_mesh.h
@@ -62,7 +62,7 @@ using namespace MathExtraLiggghtsSuperquadric;
 
 #include <fstream>
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
   
   typedef SurfaceMesh<3,5> SurfaceMeshBase;
@@ -139,5 +139,5 @@ namespace LAMMPS_NS
   #endif
   // *************************************
 
-} /* LAMMPS_NS */
+} /* LIGGGHTS_NS */
 #endif /* TRIMESH_H_ */
diff --git a/src/tri_mesh_deform.h b/src/tri_mesh_deform.h
index 42319c6..ddb1514 100644
--- a/src/tri_mesh_deform.h
+++ b/src/tri_mesh_deform.h
@@ -1 +1 @@
-namespace LAMMPS_NS {typedef TriMesh TriMeshDeformable;}
+namespace LIGGGHTS_NS {typedef TriMesh TriMeshDeformable;}
diff --git a/src/tri_mesh_planar.h b/src/tri_mesh_planar.h
index dfe7355..fce5ba8 100644
--- a/src/tri_mesh_planar.h
+++ b/src/tri_mesh_planar.h
@@ -48,7 +48,7 @@
 
 #define MAXTRY_WITHIN 500
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
   class TriMeshPlanar : public TriMesh
   {
@@ -83,5 +83,5 @@ namespace LAMMPS_NS
   #include "tri_mesh_planar_I.h"
   // *************************************
 
-} /* LAMMPS_NS */
+} /* LIGGGHTS_NS */
 #endif
diff --git a/src/universe.cpp b/src/universe.cpp
index 9fb1ab3..c660f80 100644
--- a/src/universe.cpp
+++ b/src/universe.cpp
@@ -60,7 +60,7 @@
 #include "force.h"
 #include "memory.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 #define MAXLINE 256
 
diff --git a/src/universe.h b/src/universe.h
index 7bdbafc..968f62e 100644
--- a/src/universe.h
+++ b/src/universe.h
@@ -49,7 +49,7 @@
 #include "stdio.h"
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Universe : protected Pointers {
  public:
diff --git a/src/update.cpp b/src/update.cpp
index 0806bb5..7faea2d 100644
--- a/src/update.cpp
+++ b/src/update.cpp
@@ -61,7 +61,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/update.h b/src/update.h
index 73715ab..23a42ff 100644
--- a/src/update.h
+++ b/src/update.h
@@ -48,7 +48,7 @@
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Update : protected Pointers {
  public:
diff --git a/src/utils.h b/src/utils.h
index d7596ca..4a2f943 100644
--- a/src/utils.h
+++ b/src/utils.h
@@ -50,7 +50,7 @@
 #include "contact_interface.h"
 
 namespace LIGGGHTS {
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 namespace Utils {
 
diff --git a/src/variable.cpp b/src/variable.cpp
index 5193d53..408115e 100644
--- a/src/variable.cpp
+++ b/src/variable.cpp
@@ -76,7 +76,7 @@
 #define ATOM AATOM
 #endif
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 using namespace MathConst;
 
 #define VARDELTA 4
diff --git a/src/variable.h b/src/variable.h
index 558faf4..46a7c97 100644
--- a/src/variable.h
+++ b/src/variable.h
@@ -49,7 +49,7 @@
 #include "stdlib.h"
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Variable : protected Pointers {
 
diff --git a/src/vector_container.h b/src/vector_container.h
index cb1ed7b..24b61e0 100644
--- a/src/vector_container.h
+++ b/src/vector_container.h
@@ -49,7 +49,7 @@
 #include "general_container.h"
 #include "memory.h"
 
-namespace LAMMPS_NS
+namespace LIGGGHTS_NS
 {
   template<typename T, int LEN_VEC>
   class VectorContainer : public GeneralContainer <T, 1, LEN_VEC>
@@ -242,5 +242,5 @@ namespace LAMMPS_NS
       return len*LEN_VEC;
   }
 
-} /* LAMMPS_NS */
+} /* LIGGGHTS_NS */
 #endif /* VECTORCONTAINER_H_ */
diff --git a/src/vector_liggghts.h b/src/vector_liggghts.h
index 7902538..87f1386 100644
--- a/src/vector_liggghts.h
+++ b/src/vector_liggghts.h
@@ -45,7 +45,7 @@
 #include "math.h"
 #include "lammps.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 //================================================
 //SOME VERY SIMPLE VECTOR OPERATIONS
diff --git a/src/velocity.cpp b/src/velocity.cpp
index 39962ed..79574c4 100644
--- a/src/velocity.cpp
+++ b/src/velocity.cpp
@@ -74,7 +74,7 @@
 
 #include "fix_multisphere.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 enum{SET,RAMP,ZERO, SETANGULAR};
 enum{ALL,LOCAL,GEOM};
diff --git a/src/velocity.h b/src/velocity.h
index 9c2d11b..6cce327 100644
--- a/src/velocity.h
+++ b/src/velocity.h
@@ -60,7 +60,7 @@ CommandStyle(velocity,Velocity)
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Velocity : protected Pointers {
  public:
diff --git a/src/verlet.cpp b/src/verlet.cpp
index fe192c1..61fff10 100644
--- a/src/verlet.cpp
+++ b/src/verlet.cpp
@@ -71,7 +71,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/verlet.h b/src/verlet.h
index dd8e088..019f233 100644
--- a/src/verlet.h
+++ b/src/verlet.h
@@ -60,7 +60,7 @@ IntegrateStyle(verlet,Verlet)
 
 #include "integrate.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class Verlet : public Integrate {
  public:
diff --git a/src/volume_mesh.h b/src/volume_mesh.h
index 2541a15..8e6fc77 100644
--- a/src/volume_mesh.h
+++ b/src/volume_mesh.h
@@ -45,7 +45,7 @@
 #include "tracking_mesh.h"
 #include "container.h"
 
-namespace LAMMPS_NS{
+namespace LIGGGHTS_NS{
 
 template<int NUM_NODES,int NUM_FACES,int NUM_NODES_PER_FACE>
 class VolumeMesh : public TrackingMesh<NUM_NODES>
@@ -153,6 +153,6 @@ class VolumeMesh : public TrackingMesh<NUM_NODES>
 #include "volume_mesh_I.h"
 // *************************************
 
-} /* LAMMPS_NS */
+} /* LIGGGHTS_NS */
 
 #endif /* VOLUMEMESH_H_ */
diff --git a/src/write_data.cpp b/src/write_data.cpp
index 9635b75..67b9dd9 100644
--- a/src/write_data.cpp
+++ b/src/write_data.cpp
@@ -67,7 +67,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 enum{IGNORE,WARN,ERROR};                    // same as thermo.cpp
 enum{II,IJ};
diff --git a/src/write_data.h b/src/write_data.h
index d229728..5cd1f63 100644
--- a/src/write_data.h
+++ b/src/write_data.h
@@ -55,7 +55,7 @@ CommandStyle(write_data,WriteData)
 #include "stdio.h"
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class WriteData : protected Pointers {
  public:
diff --git a/src/write_dump.cpp b/src/write_dump.cpp
index c99d33c..22806e5 100644
--- a/src/write_dump.cpp
+++ b/src/write_dump.cpp
@@ -56,7 +56,7 @@
 #include "group.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 /* ---------------------------------------------------------------------- */
 
diff --git a/src/write_dump.h b/src/write_dump.h
index 7ea92fe..325b7a1 100644
--- a/src/write_dump.h
+++ b/src/write_dump.h
@@ -54,7 +54,7 @@ CommandStyle(write_dump,WriteDump)
 
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class WriteDump : protected Pointers {
  public:
diff --git a/src/write_restart.cpp b/src/write_restart.cpp
index 88f867a..bfa3315 100644
--- a/src/write_restart.cpp
+++ b/src/write_restart.cpp
@@ -76,7 +76,7 @@
 #include "memory.h"
 #include "error.h"
 
-using namespace LAMMPS_NS;
+using namespace LIGGGHTS_NS;
 
 // same as read_restart.cpp and tools/restart2data.cpp
 
diff --git a/src/write_restart.h b/src/write_restart.h
index fea77fd..7b2b10e 100644
--- a/src/write_restart.h
+++ b/src/write_restart.h
@@ -61,7 +61,7 @@ CommandStyle(write_restart,WriteRestart)
 #include "stdio.h"
 #include "pointers.h"
 
-namespace LAMMPS_NS {
+namespace LIGGGHTS_NS {
 
 class WriteRestart : protected Pointers {
  public:
